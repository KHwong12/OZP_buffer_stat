import{aF as A,eE as J,I as i,J as r,K as m,N as E,e as h,iZ as B,h as $,aU as T,gm as D,en as L,aV as P,jn as W,g as R,c8 as Q,hW as G,nb as X,iO as K,h7 as x,bj as Z,d6 as q,bo as Y,jv as ee,R as te,n5 as ie,c3 as se,jF as re,b6 as ne,nc as ae,a$ as oe,fF as j,nd as le}from"./index.4188ada5.js";import{G as de,Q as he,e as ue}from"./boundedPlane.fb2fbdc3.js";import{o as pe}from"./queryEngineUtils.44c68e3d.js";import{n as ce}from"./WorkerHandle.5d0e3324.js";import"./vectorStacks.04effb99.js";import"./quatf64.ddec7ef6.js";import"./mat4f64.84d5c445.js";import"./sphere.d7f7e266.js";import"./lineSegment.f689aa9d.js";import"./plane.8a6bedf9.js";import"./PointSnappingHint.9370b733.js";function _(e,t){return he(t.extent,U),ue(U,A(fe,e.x,e.y,0))}const U=de(),fe=J();let u=class extends E{constructor(e){super(e),this.pointOfInterest=null}get tiles(){const e=this.tilesCoveringView,t=h(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort((n,o)=>_(t,n)-_(t,o)),e}_scaleEnabled(){return B(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||$(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:n}=t,o=[];for(const{row:s,colFrom:a,colTo:d}of e)for(let l=a;l<=d;l++){const w={id:null,level:n,row:s,col:t.normalizeCol(l)};this.tileInfo.updateTileInfo(w),o.push(w)}return o}get tileInfo(){var e,t;return(t=(e=this.view.featuresTilingScheme)==null?void 0:e.tileInfo)!=null?t:null}get tileSize(){return h(this.tileInfo)?this.tileInfo.size[0]:256}initialize(){this.own(T(()=>{var e,t;return(t=(e=this.view)==null?void 0:e.state)==null?void 0:t.viewpoint},()=>this.notifyChange("tilesCoveringView"),D))}};i([r({readOnly:!0})],u.prototype,"tiles",null),i([r({readOnly:!0})],u.prototype,"_scaleEnabled",null),i([r({readOnly:!0})],u.prototype,"tilesCoveringView",null),i([r({readOnly:!0})],u.prototype,"tileInfo",null),i([r({readOnly:!0})],u.prototype,"tileSize",null),i([r({constructOnly:!0})],u.prototype,"view",void 0),i([r({constructOnly:!0})],u.prototype,"layer",void 0),i([r()],u.prototype,"pointOfInterest",void 0),u=i([m("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],u);var N;(function(e){e[e.INVISIBLE=0]="INVISIBLE",e[e.VISIBLE_WHEN_EXTENDED=1]="VISIBLE_WHEN_EXTENDED",e[e.VISIBLE_ON_SURFACE=2]="VISIBLE_ON_SURFACE"})(N||(N={}));let c=class extends L{constructor(e){super(e),this.pointOfInterest=null}get tiles(){const e=this.tilesCoveringView,t=this.effectivePointOfInterest;if(h(t)){const n=e.map(o=>_(t,o));for(let o=1;o<n.length;o++)if(n[o-1]>n[o])return e.sort((s,a)=>_(t,s)-_(t,a)),e.slice()}return e}get tilesCoveringView(){var e,t;return this._filterTiles((t=(e=this.view.featureTiles)==null?void 0:e.tiles)==null?void 0:t.toArray()).map(ye)}get tileInfo(){var e,t;return(t=(e=this.view.featureTiles)==null?void 0:e.tilingScheme.toTileInfo())!=null?t:null}get tileSize(){var e,t;return(t=(e=this.view.featureTiles)==null?void 0:e.tileSize)!=null?t:256}get effectivePointOfInterest(){var t;const e=this.pointOfInterest;return h(e)?e:(t=this.view.pointsOfInterest)==null?void 0:t.focus.location}initialize(){this.handles.add(T(()=>this.view.featureTiles,e=>{this.handles.remove(V),e&&this.handles.add(e.addClient(),V)},P))}_filterTiles(e){return $(e)?[]:e.filter(t=>Math.abs(t.measures.screenRect[3]-t.measures.screenRect[1])>ge&&t.measures.visibility===N.VISIBLE_ON_SURFACE)}};function ye({lij:[e,t,n],extent:o}){return{id:`${e}/${t}/${n}`,level:e,row:t,col:n,extent:o}}i([r({readOnly:!0})],c.prototype,"tiles",null),i([r({readOnly:!0})],c.prototype,"tilesCoveringView",null),i([r({readOnly:!0})],c.prototype,"tileInfo",null),i([r({readOnly:!0})],c.prototype,"tileSize",null),i([r({constructOnly:!0})],c.prototype,"view",void 0),i([r()],c.prototype,"pointOfInterest",void 0),i([r()],c.prototype,"effectivePointOfInterest",null),c=i([m("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],c);const ge=50,V="feature-tiles",ve=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let I=class extends E{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=ve.map(e=>new W({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=a=>{if(h(a.label))return a.label;let d=a.lij.toString();return h(a.loadPriority)&&(d+=` (${a.loadPriority})`),d},t=this.getTiles(),n=new Array,o=new Set((this._labels.size,this._labels.keys()));t.forEach((a,d)=>{const l=a.lij.toString();o.delete(l);const w=a.lij[0],S=a.geometry;if(this.enablePolygons&&!this._polygons.has(l)){const g=new R({geometry:S,symbol:this._symbols[w%this._symbols.length]});this._polygons.set(l,g),n.push(g)}if(this.enableLabels){const g=e(a),O=d/(t.length-1),f=x(0,200,O),H=x(20,6,O)/.75,C=h(a.loadPriority)&&a.loadPriority>=t.length,F=new Q([f,C?0:f,C?0:f]),z=this.view.type==="3d"?()=>new G({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new X({text:g,halo:{color:"white",size:1/.75},material:{color:F},size:H})]}):()=>new K({text:g,haloColor:"white",haloSize:1/.75,color:F,size:H});if(this._labels.has(l)){const b=this._labels.get(l),M=z();($(b.symbol)||JSON.stringify(M)!==JSON.stringify(b.symbol))&&(b.symbol=M)}else{const b=new R({geometry:S.extent.center,symbol:z()});this._labels.set(l,b),n.push(b)}}});const s=new Array;o.forEach(a=>{this._polygons.has(a)&&(s.push(this._polygons.get(a)),this._polygons.delete(a)),this._labels.has(a)&&(s.push(this._labels.get(a)),this._labels.delete(a))}),this.view.graphics.removeMany(s),this.view.graphics.addMany(n)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};i([r({constructOnly:!0})],I.prototype,"view",void 0),i([r({readOnly:!0})],I.prototype,"updating",void 0),i([r()],I.prototype,"enabled",null),I=i([m("esri.views.support.TileTreeDebugger")],I);let k=class extends I{constructor(e){super(e),this.handles=new Z}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.handles.add(q(()=>clearInterval(e)))}destroy(){this.handles.destroy()}getTiles(){if(!this.debugInfo)return[];const e=new Map,t=new Map;this.debugInfo.storedTiles.forEach(s=>{e.set(s.data.id,s.featureCount)}),this.debugInfo.pendingTiles.forEach(s=>{e.set(s.data.id,s.featureCount),t.set(s.data.id,s.state)});const n=s=>{var l;const a=t.get(s),d=(l=e.get(s))!=null?l:"?";return a?`${a}:${d}
${s}`:`store:${d}
${s}`},o=new Map;return this.debugInfo.storedTiles.forEach(s=>{o.set(s.data.id,s.data)}),this.debugInfo.pendingTiles.forEach(s=>{o.set(s.data.id,s.data)}),Array.from(o.values()).map(s=>({lij:[s.level,s.row,s.col],geometry:Y.fromExtent(ee(s.extent,this.view.spatialReference)),label:n(s.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this.debugInfo=e,this.update()})}};i([r({constructOnly:!0})],k.prototype,"handle",void 0),k=i([m("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],k);let y=class extends L{constructor(e){super(e),this.availability=0,this.workerHandleUpdating=!0,this.editId=0}get updating(){return this.updatingHandles.updating||this.workerHandleUpdating}destroy(){this.workerHandle.destroy()}initialize(){this.workerHandle=new we(this.schedule),this.handles.add([this.workerHandle.on("notify-updating",({updating:e})=>this.workerHandleUpdating=e),this.workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){const n=this._serviceInfoFromLayer(e.layer);if($(n))return;const o={configuration:this._convertConfiguration(e.configuration),serviceInfo:n,spatialReference:e.spatialReference.toJSON()};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("setup",o,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const n=this._convertConfiguration(e);await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("configure",n,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const n={distance:e.distance,point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),types:e.types,filter:h(e.filter)?e.filter.createQuery().toJSON():null};return this.workerHandle.invoke(n,t)}async updateTiles(e,t){const n={tiles:e.tiles,tileInfo:h(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("updateTiles",n,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){var d,l,w,S,g,O;const n=this.editId++,o={id:n};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("beginApplyEdits",o,t));const s=await this.updatingHandles.addPromise(te(e.result,t)),a={id:n,edits:{addedFeatures:(l=(d=s.addedFeatures)==null?void 0:d.map(({objectId:f})=>f))!=null?l:[],deletedFeatures:(S=(w=s.deletedFeatures)==null?void 0:w.map(({objectId:f,globalId:H})=>({objectId:f,globalId:H})))!=null?S:[],updatedFeatures:(O=(g=s.updatedFeatures)==null?void 0:g.map(({objectId:f})=>f))!=null?O:[]}};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("endApplyEdits",a,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this.workerHandle.invokeMethod("getDebugInfo",{},e)}_convertConfiguration(e){return{filter:h(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters}}_serviceInfoFromLayer(e){var t;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:e.parsedUrl.path,fields:e.fields.map(n=>n.toJSON()),geometryType:ie.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(t=e.timeInfo)==null?void 0:t.toJSON()}}};i([r({constructOnly:!0})],y.prototype,"schedule",void 0),i([r({readOnly:!0})],y.prototype,"updating",null),i([r({readOnly:!0})],y.prototype,"availability",void 0),i([r()],y.prototype,"workerHandleUpdating",void 0),y=i([m("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],y);class we extends ce{constructor(t){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated"})}}let v=class extends E{constructor(e){super(e),this.pointOfInterest=null}get tiles(){return[{id:"0/0/0",level:0,row:0,col:0,extent:se(-1e8,-1e8,1e8,1e8)}]}get tileInfo(){return new re({origin:new ne({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new ae({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}};i([r({readOnly:!0})],v.prototype,"tiles",null),i([r({readOnly:!0})],v.prototype,"tileInfo",null),i([r({readOnly:!0})],v.prototype,"tileSize",null),i([r({constructOnly:!0})],v.prototype,"layer",void 0),i([r()],v.prototype,"pointOfInterest",void 0),v=i([m("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],v);let p=class extends oe(E){constructor(e){super(e)}get updateTilesParameters(){return{tiles:this.tilesOfInterest.tiles,tileInfo:this.tilesOfInterest.tileInfo,tileSize:this.tilesOfInterest.tileSize}}get updating(){return this.workerHandle.updating||this.updatingHandles.updating}get configuration(){return{filter:this.layer.createQuery(),customParameters:this.layer.customParameters}}get availability(){return this.workerHandle.availability}get layer(){return this.layerSource.layer}initialize(){const e=this.view;if(h(e))switch(e.type){case"2d":this.tilesOfInterest=new u({view:e,layer:this.layer}),this.workerHandle=new y;break;case"3d":{const t=e.resourceController;this.tilesOfInterest=new c({view:e}),this.workerHandle=new y({schedule:n=>t.schedule(n)});break}}else this.tilesOfInterest=new v({layer:this.layer}),this.workerHandle=new y;this.handles.add([j(this.workerHandle)]),this.workerHandle.setup({layer:this.layer,spatialReference:this.spatialReference,configuration:this.configuration},null),this.updatingHandles.add(()=>this.updateTilesParameters,()=>this.workerHandle.updateTiles(this.updateTilesParameters,null),P),this.handles.add([T(()=>this.configuration,t=>this.workerHandle.configure(t,null),D)]),h(e)&&this.handles.add(T(()=>le.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,t=>{t&&!this.debug?(this.debug=new k({view:e,handle:this.workerHandle}),this.handles.add(j(this.debug),"debug")):!t&&this.debug&&this.handles.remove("debug")},P)),this.handles.add(this.layerSource.layer.on("apply-edits",t=>{this.workerHandle.applyEdits(t,null)}))}refresh(){this.workerHandle.refresh(null)}async fetchCandidates(e,t){return this.tilesOfInterest.pointOfInterest=e.coordinateHelper.vectorToPoint(e.point),(await this.workerHandle.fetchCandidates({...e,filter:null},t)).candidates.map(n=>pe(n,e.coordinateHelper,e.elevationInfo))}getDebugInfo(e){return this.workerHandle.getDebugInfo(e)}};i([r({constructOnly:!0})],p.prototype,"spatialReference",void 0),i([r({constructOnly:!0})],p.prototype,"layerSource",void 0),i([r({constructOnly:!0})],p.prototype,"view",void 0),i([r()],p.prototype,"tilesOfInterest",void 0),i([r({readOnly:!0})],p.prototype,"updateTilesParameters",null),i([r({readOnly:!0})],p.prototype,"updating",null),i([r({readOnly:!0})],p.prototype,"configuration",null),i([r({readOnly:!0})],p.prototype,"availability",null),p=i([m("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],p);export{p as FeatureServiceSnappingSource};
