import{f1 as nr,eE as ot,aA as yt,bd as fe,c4 as qn,gB as oi,e as x,ff as ue,fL as Ee,fA as ft,g0 as lr,aP as ne,eC as _a,h as K,eh as Rt,fc as Ii,e8 as te,aN as Ir,aF as ae,aD as j,aM as Mo,gC as Ot,bj as $o,d8 as kn,di as Te,dk as ut,dj as Oe,b4 as ce,eM as _e,dh as At,gD as qi,I as v,_ as kt,a6 as ni,aY as jt,gE as Lo,bh as Lr,b3 as wt,gF as ki,fR as tt,a0 as Zn,gG as Xn,gH as Jn,gI as Yn,g as Qn,m as ya,gJ as Fo,gK as No,gL as Kn,fY as el,bn as br,gM as tl,gN as rl,gO as il,eD as sl,gP as al,gz as ol,gf as nl,gQ as ll,i as cl,fJ as Mi,gR as dl,gS as hl,gT as ul,gU as pl,gt as fl,dC as Bt,fU as Sa,g5 as Pr,fV as ml,aK as ea,N as ta,J as ie,K as ra,gV as Pe,gW as Ta,gX as gl,gY as Ai,aC as vl,ao as Fe,eF as $i,eI as gi,gZ as _l,g_ as yl,g$ as Sl,h0 as Tl,h1 as xl,gA as zo,e7 as kr,f8 as xa,h2 as wl,h3 as wa,h4 as Oa,h5 as Ol,h6 as Ca,b9 as Cl,fz as Rr,h7 as rr,eK as Rl,h8 as Uo,fx as Ra,eL as Al,h9 as Vo,fd as bl,ha as Pl,bb as Zt,fv as wr,ez as Ur,ft as Aa,dc as Or,eQ as Le,hb as El,eP as ba,hc as vr,hd as vi,he as Dl,aw as Il,cO as Ml,hf as $l,hg as Ll,hh as Fl,hi as Nl,hj as zl,hk as Lt,ar as Ul,aO as cs,dE as Vl,aU as ds,d$ as Pa,fs as jl,dD as Hl,fy as Bl,hl as hs,hm as Gl,fD as Wl,hn as ql,g1 as kl,ho as Zl,hp as Xl,g9 as Fs,hq as Jl}from"./index.9da382e4.js";import{r as we,n as ge,t as Ea}from"./vec3f32.0772c8d8.js";import{l as Ns,p as bt,_ as Yl,q as Ql,j as Ft,W as Ce,Z as Li}from"./plane.f3b639d8.js";import{_ as Kl,O as ec,j as tc,d as $t,f as rc,p as ic,l as zs}from"./sphere.f1597b20.js";import{u as Us,o as Vs,g as Zr,j as jo,O as xe,W as at,b as Xr,E as Zi,e as ia,d as Mr,S as Ho,c as vt,f as sc,s as ac,h as oc,i as Bo,n as sa,_ as Go,k as Da,a as nc,l as Wo}from"./requestImageUtils.4ea1aefd.js";import{z as We,b as qe,n as p,k as li,R as qo,p as ko,T as js,U as Hs,q as Ve,V as ye,s as O,o as pe,e as mt,W as bi,X as Jr,Y as Zo,Z as aa,r as oa,h as C,D as ci,i as pr,_ as lc,$ as Xo,y as di,d as ar,A as na,w as Nt,x as Xi,C as rt,f as fr,g as mr,N as Fi,O as Ni,P as la,l as se,t as gr,a0 as Ia,a1 as cc,a2 as dc,a3 as hc,a4 as Jo,F as hi,m as Ht,a5 as Ji,H as Yi,a6 as uc,L as pc,a7 as Yo,c as $r,a8 as fc,a9 as Qo,a as ei,aa as mc,ab as gc,M as Ma,ac as Qi,E as Fr,ad as vc,ae as _c,af as $a,ag as yc,Q as Sc,ah as Tc,K as xc,ai as wc,aj as Oc,ak as La,J as Ko,v as ca,al as en,G as tn,I as da,am as Cc,an as Rc,ao as Ac,ap as Fa,aq as bc,ar as Pc,as as Ec,at as Dc,au as Ic,av as Mc,aw as $c,ax as rn,ay as Lc,az as Fc,aA as Nc,aB as zc,j as ha,u as sn,aC as Uc,aD as Vc,aE as jc,aF as Hc}from"./Matrix4Uniform.b7dc351c.js";import{l as Bc,h as an,g as Gc,u as Wc}from"./geometryDataUtils.337d3a34.js";import{O as d}from"./VertexAttribute.5551e0d8.js";import{a as ua}from"./quatf64.ddec7ef6.js";import{e as le,r as qc,o as cr}from"./mat4f64.84d5c445.js";import{T as ui}from"./InterleavedLayout.e9290885.js";import{o as on}from"./floatRGBA.b2358e75.js";import{E as Ct,D as dr,R as gt,I as kc,Y as pa,V as fa,M as or,P as Gt,G as hr,L as ti,_ as zi,F as Zc}from"./enums.de935fa5.js";import{c as Ui,l as nn}from"./triangulationUtils.27ba054b.js";import{D as Yr,u as Xc,f as Jc,c as Yc,n as Pi}from"./VertexArrayObject.4198c73f.js";import{t as ln}from"./NestedMap.21c7ee53.js";import{G as Qc,k as zt,H as Kc,i as ed,a as td}from"./Octree.5f16cd20.js";import{v as Ki,b as cn,l as Er,k as dn}from"./lineSegment.901d4e43.js";import{u as ir}from"./Texture.599541db.js";import"./boundedPlane.2500e48f.js";import{o as rd}from"./glUtil.345a77b1.js";import{v as Nr}from"./dehydratedFeatures.98692fb8.js";import{i as id,u as sd}from"./BufferView.9de22bcf.js";function ad(r){r.fragment.uniforms.add(new We("projInfo",(e,t)=>od(t))),r.fragment.uniforms.add(new qe("zScale",(e,t)=>hn(t))),r.fragment.code.add(p`vec3 reconstructPosition(vec2 fragCoord, float depth) {
return vec3((fragCoord * projInfo.xy + projInfo.zw) * (zScale.x * depth + zScale.y), depth);
}`)}function od(r){const e=r.camera.projectionMatrix;return e[11]===0?nr(Na,2/(r.camera.fullWidth*e[0]),2/(r.camera.fullHeight*e[5]),(1+e[12])/e[0],(1+e[13])/e[5]):nr(Na,-2/(r.camera.fullWidth*e[0]),-2/(r.camera.fullHeight*e[5]),(1-e[8])/e[0],(1-e[9])/e[5])}const Na=ot();function hn(r){return r.camera.projectionMatrix[11]===0?yt(za,0,1):yt(za,1,0)}const za=fe();class pt extends li{constructor(e){super(e,"sampler2D")}}function un(r,e=!0){r.attributes.add(d.POSITION,"vec2"),e&&r.varyings.add("uv","vec2"),r.vertex.code.add(p`
    void main(void) {
      gl_Position = vec4(position, 0.0, 1.0);
      ${e?p`uv = position * 0.5 + vec2(0.5);`:""}
    }
  `)}class Ei extends li{constructor(e){super(e,"vec4")}}class Ut extends li{constructor(e){super(e,"float")}}class Vi{constructor(){this._disposed=!1}get disposed(){return this._disposed}get shaderTransformation(){return this._shaderTransformation}acquire(e,t,i,s,a,o){this.id=oi(),this.geometry=e,this.material=t,this.transformation=i,this.instanceParameters=s,this.origin=a,this._shaderTransformation=o,this._disposed=!1}release(){this._disposed=!1}dispose(){this._disposed=!0}getStaticTransformation(){return this.transformation}getShaderTransformation(){return x(this._shaderTransformation)?this._shaderTransformation(this.transformation):this.transformation}computeAttachmentOrigin(e){return!!(this.material.computeAttachmentOrigin?this.material.computeAttachmentOrigin(this.geometry,e):this.geometry.computeAttachmentOrigin(e))&&(ue(e,e,this.getStaticTransformation()),!0)}}Vi.pool=new qn(Vi);class Bs{constructor(e){this.channel=e,this.id=oi()}}class pn extends qo{constructor(e={}){super(),this.type=ko.Object,this._geometryRecords=new Array,this._geometries=new Array,this._objectTransformation=le(),this._bvObjectSpace=new Ua,this._bvWorldSpace=new Ua,this._bvDirty=!0,this._hasVolatileTransformation=!1,this._visible=!0,this.castShadow=e.castShadow==null||e.castShadow,this.metadata=e.metadata,this.metadata&&this.metadata.isElevationSource&&(this.metadata.lastValidElevationBB=new fn),this.transformation=le();const{geometries:t,materials:i,transformations:s,origins:a}=e;if(Array.isArray(t)){Ee(i.length===t.length,"Object3D: materials don't match geometries"),Ee(s.length===t.length,"Object3D: transformations don't match geometries"),this._geometryRecords.length=t.length,this._geometries.length=t.length;for(let o=0;o<t.length;o++)this._geometries[o]=t[o],this._geometryRecords[o]=Vi.pool.acquire(t[o],i[o],qc(s[o]),{highlights:null,occludees:null,visible:this._visible},a&&a[o])}}get geometryRecords(){return this._geometryRecords}get geometries(){return this._geometries}get transformation(){return this._objectTransformation}set transformation(e){ft(this._objectTransformation,e),this._invalidateBoundingVolume(),this._emit("objectTransformation",this)}dispose(){this._geometryRecords.length=0,this._geometries.length=0}get parentLayer(){return this._parentLayer}set parentLayer(e){Ee(this._parentLayer==null||e==null,"Object3D can only be added to a single Layer"),this._parentLayer=e}addGeometry(e,t,i,s,a){i=i||cr,this._geometries.push(e);const o=Vi.pool.acquire(e,t,i,{highlights:null,occludees:null,visible:this._visible},s,a);return this._geometryRecords.push(o),this._hasVolatileTransformation=this._hasVolatileTransformation||x(o.shaderTransformation),this._emit("objectGeometryAdded",{object:this,record:o}),this._invalidateBoundingVolume(),o}removeGeometry(e){const t=this._geometryRecords.splice(e,1)[0];return this._hasVolatileTransformation=x(t.shaderTransformation)?this._geometryRecords.some(i=>x(i.shaderTransformation)):this._hasVolatileTransformation,t.dispose(),this._geometries.splice(e,1),this._emit("objectGeometryRemoved",{object:this,record:t}),this._invalidateBoundingVolume(),t}removeAllGeometries(){for(;this.geometryRecords.length>0;)this.removeGeometry(0)}geometryVertexAttrsUpdated(e){this._emit("vertexAttrsUpdated",{object:this,record:e}),this._invalidateBoundingVolume()}get isVisible(){return this._visible}setVisible(e){if(this._visible!==e){this._visible=e;for(const t of this._geometryRecords)t.instanceParameters.visible=this._visible;this._emit("visibilityChanged",this)}}maskOccludee(){const e=new Bs(Us.MaskOccludee);for(const t of this._geometryRecords)t.instanceParameters.occludees=js(t.instanceParameters.occludees,e);return this._emit("occlusionChanged",this),e}removeOcclude(e){for(const t of this._geometryRecords)t.instanceParameters.occludees=Hs(t.instanceParameters.occludees,e);this._emit("occlusionChanged",this)}highlight(){const e=new Bs(Us.Highlight);for(const t of this._geometryRecords)t.instanceParameters.highlights=js(t.instanceParameters.highlights,e);return this._emit("highlightChanged",this),e}removeHighlight(e){for(const t of this._geometryRecords)t.instanceParameters.highlights=Hs(t.instanceParameters.highlights,e);this._emit("highlightChanged",this)}getCombinedStaticTransformation(e,t){return lr(ne(t,le()),this.transformation,e.getStaticTransformation())}_getCombinedShaderTransformation(e,t){return t=t||le(),lr(t,this.transformation,e.getShaderTransformation()),t}hasVolativeTransformation(){return this._hasVolatileTransformation}get boundingVolumeWorldSpace(){return this._validateBoundingVolume(),this._bvWorldSpace}get boundingVolumeObjectSpace(){return this._validateBoundingVolume(),this._bvObjectSpace}_validateBoundingVolume(){if(!this._bvDirty&&!this._hasVolatileTransformation)return;this._bvObjectSpace.init(),this._bvWorldSpace.init();for(let s=0;s<this._geometryRecords.length;++s){const a=this._geometries[s],o=this._geometryRecords[s],n=a.boundingInfo;x(n)&&(this._calculateTransformedBoundingVolume(n,this._bvObjectSpace,o.getShaderTransformation()),this._calculateTransformedBoundingVolume(n,this._bvWorldSpace,this._getCombinedShaderTransformation(o)))}_a(this._bvObjectSpace.bounds,this._bvObjectSpace.min,this._bvObjectSpace.max,.5),_a(this._bvWorldSpace.bounds,this._bvWorldSpace.min,this._bvWorldSpace.max,.5);const e=j(),t=j(),i=Ns(this.transformation);for(let s=0;s<this._geometryRecords.length;++s){const a=this._geometries[s].boundingInfo;if(K(a))continue;const o=this._geometryRecords[s].getShaderTransformation(),n=Ns(o);ue(e,a.getCenter(),o);const c=Rt(e,this._bvObjectSpace.bounds),l=a.getBSRadius()*n;this._bvObjectSpace.bounds[3]=Math.max(this._bvObjectSpace.bounds[3],c+l),ue(t,e,this.transformation);const h=Rt(t,this._bvWorldSpace.bounds),u=l*i;this._bvWorldSpace.bounds[3]=Math.max(this._bvWorldSpace.bounds[3],h+u)}this._bvDirty=!1}_calculateTransformedBoundingVolume(e,t,i){const s=e.getBBMin(),a=e.getBBMax(),o=Ii(s),n=Ii(a);ue(o,o,i),ue(n,n,i);for(let c=0;c<3;++c)t.min[c]=Math.min(t.min[c],o[c],n[c]),t.max[c]=Math.max(t.max[c],o[c],n[c]);for(let c=0;c<3;++c){te(o,s),te(n,a),o[c]=a[c],n[c]=s[c],ue(o,o,i),ue(n,n,i);for(let l=0;l<3;++l)t.min[l]=Math.min(t.min[l],o[l],n[l]),t.max[l]=Math.max(t.max[l],o[l],n[l])}}_invalidateBoundingVolume(){this._bvDirty=!0,x(this._parentLayer)&&this._parentLayer.notifyObjectBBChanged(this,this._bvWorldSpace.bounds)}_emit(e,t){x(this._parentLayer)&&this._parentLayer.events.emit(e,t)}get test(){const e=this;return{hasGeometry:t=>e._geometries.includes(t),getGeometryIndex:t=>e._geometries.indexOf(t)}}}class fn{constructor(){this.min=Ir(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this.max=Ir(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE)}isEmpty(){return this.max[0]<this.min[0]&&this.max[1]<this.min[1]&&this.max[2]<this.min[2]}}class Ua extends fn{constructor(){super(...arguments),this.bounds=Kl()}init(){ae(this.min,Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),ae(this.max,-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),ec(this.bounds)}}const nd=["layerObjectAdded","layerObjectRemoved","layerObjectsAdded","layerObjectsRemoved","shaderTransformationChanged","objectTransformation","visibilityChanged","occlusionChanged","highlightChanged","objectGeometryAdded","objectGeometryRemoved","vertexAttrsUpdated"];class ld extends qo{constructor(e,t=""){var i,s,a;super(),this.apiLayerUid=t,this.type=ko.Layer,this.events=new Mo,this.isSliceable=!1,this._objects=new Ot,this._stageHandles=new $o,this.apiLayerUid=t,this.isVisible=(i=e==null?void 0:e.isVisible)!=null?i:!0,this.isPickable=(s=e==null?void 0:e.isPickable)!=null?s:!0,this.updatePolicy=(a=e==null?void 0:e.updatePolicy)!=null?a:Vs.ASYNC}get objects(){return this._objects}destroy(){this.detachStage(),this._stage=null}attachStage(e){this.detachStage(),this._stage=e;for(const t of nd)this._stageHandles.add(this.events.on(t,i=>e.handleEvent(t,i)))}detachStage(){this._stageHandles.removeAll(),this.invalidateSpatialQueryAccelerator()}add(e){this._objects.push(e),e.parentLayer=this,this.events.emit("layerObjectAdded",{layer:this,object:e}),x(this._octree)&&this._octree.add([e])}remove(e){this._objects.removeUnordered(e)&&(e.parentLayer=null,this.events.emit("layerObjectRemoved",{layer:this,object:e}),x(this._octree)&&this._octree.remove([e]))}addMany(e){this._objects.pushArray(e);for(const t of e)t.parentLayer=this;this.events.emit("layerObjectsAdded",{layer:this,objects:e}),x(this._octree)&&this._octree.add(e)}removeMany(e){const t=new Array;if(this._objects.removeUnorderedMany(e,e.length,t),t.length!==0){for(const i of t)i.parentLayer=null;this.events.emit("layerObjectsRemoved",{layer:this,objects:t}),x(this._octree)&&this._octree.remove(t)}}sync(){x(this._stage)&&this.updatePolicy!==Vs.SYNC&&this._stage.syncLayer(this.id)}notifyObjectBBChanged(e,t){x(this._octree)&&this._octree.update(e,t)}getSpatialQueryAccelerator(){return K(this._octree)&&this._objects.length>50&&this._createOctree(),this._octree}shaderTransformationChanged(){this.invalidateSpatialQueryAccelerator(),this.events.emit("shaderTransformationChanged",this)}invalidateSpatialQueryAccelerator(){this._octree=kn(this._octree)}_createOctree(){this._octree=new Qc(e=>e.boundingVolumeWorldSpace.bounds),this._octree.add(this._objects.data,this._objects.length)}}var Gs;(function(r){function e(o,n){const c=o[n],l=o[n+1],h=o[n+2];return Math.sqrt(c*c+l*l+h*h)}function t(o,n){const c=o[n],l=o[n+1],h=o[n+2],u=1/Math.sqrt(c*c+l*l+h*h);o[n]*=u,o[n+1]*=u,o[n+2]*=u}function i(o,n,c){o[n]*=c,o[n+1]*=c,o[n+2]*=c}function s(o,n,c,l,h,u=n){(h=h||o)[u]=o[n]+c[l],h[u+1]=o[n+1]+c[l+1],h[u+2]=o[n+2]+c[l+2]}function a(o,n,c,l,h,u=n){(h=h||o)[u]=o[n]-c[l],h[u+1]=o[n+1]-c[l+1],h[u+2]=o[n+2]-c[l+2]}r.length=e,r.normalize=t,r.scale=i,r.add=s,r.subtract=a})(Gs||(Gs={}));const _r=Gs;var us,ps,fs,Ws;(function(r){const t=[[-.5,-.5,.5],[.5,-.5,.5],[.5,.5,.5],[-.5,.5,.5],[-.5,-.5,-.5],[.5,-.5,-.5],[.5,.5,-.5],[-.5,.5,-.5]],i=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],s=[0,0,1,0,1,1,0,1],a=new Uint16Array([0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5]),o=new Uint16Array(36);for(let l=0;l<6;l++)for(let h=0;h<6;h++)o[6*l+h]=l;const n=new Uint16Array(36);for(let l=0;l<6;l++)n[6*l+0]=0,n[6*l+1]=1,n[6*l+2]=2,n[6*l+3]=2,n[6*l+4]=3,n[6*l+5]=0;function c(l){Array.isArray(l)||(l=[l,l,l]);const h=new Array(24);for(let u=0;u<8;u++)h[3*u]=t[u][0]*l[0],h[3*u+1]=t[u][1]*l[1],h[3*u+2]=t[u][2]*l[2];return new Ve([[d.POSITION,{size:3,data:h,exclusive:!0}],[d.NORMAL,{size:3,data:i}],[d.UV0,{size:2,data:s}]],[[d.POSITION,a],[d.NORMAL,o],[d.UV0,n]])}r.createGeometry=c})(us||(us={})),function(r){const t=[[-.5,0,-.5],[.5,0,-.5],[.5,0,.5],[-.5,0,.5],[0,-.5,0],[0,.5,0]],i=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],s=new Uint16Array([5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0]),a=new Uint16Array([0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7]);function o(n){Array.isArray(n)||(n=[n,n,n]);const c=new Array(18);for(let l=0;l<6;l++)c[3*l]=t[l][0]*n[0],c[3*l+1]=t[l][1]*n[1],c[3*l+2]=t[l][2]*n[2];return new Ve([[d.POSITION,{size:3,data:c,exclusive:!0}],[d.NORMAL,{size:3,data:i}]],[[d.POSITION,s],[d.NORMAL,a]])}r.createGeometry=o}(ps||(ps={})),function(r){const i=we(-.5,0,-.5),s=we(.5,0,-.5),a=we(0,0,.5),o=we(0,0+.5,0),n=ge(),c=ge(),l=ge(),h=ge(),u=ge();Te(n,i,o),Te(c,i,s),ut(l,n,c),Oe(l,l),Te(n,s,o),Te(c,s,a),ut(h,n,c),Oe(h,h),Te(n,a,o),Te(c,a,i),ut(u,n,c),Oe(u,u);const f=[i,s,a,o],S=[0,-1,0,l[0],l[1],l[2],h[0],h[1],h[2],u[0],u[1],u[2]],w=[0,1,2,3,1,0,3,2,1,3,0,2],b=[0,0,0,1,1,1,2,2,2,3,3,3];function U(R){Array.isArray(R)||(R=[R,R,R]);const E=new Array(12);for(let y=0;y<4;y++)E[3*y]=f[y][0]*R[0],E[3*y+1]=f[y][1]*R[1],E[3*y+2]=f[y][2]*R[2];return new Ve([[d.POSITION,{size:3,data:E,exclusive:!0}],[d.NORMAL,{size:3,data:S}]],[[d.POSITION,new Uint16Array(w)],[d.NORMAL,new Uint16Array(b)]])}r.createGeometry=U}(fs||(fs={})),function(r){function e(y,_,m,g={uv:!0}){const A=-Math.PI,P=2*Math.PI,D=-Math.PI/2,$=Math.PI,T=Math.max(3,Math.floor(_)),N=Math.max(2,Math.floor(m)),L=(T+1)*(N+1),M=new Float32Array(3*L),W=new Float32Array(3*L),F=new Float32Array(2*L),H=[];let V=0;for(let re=0;re<=N;re++){const q=[],z=re/N,oe=D+z*$,de=Math.cos(oe);for(let je=0;je<=T;je++){const k=je/T,B=A+k*P,Re=Math.cos(B)*de,De=Math.sin(oe),zr=-Math.sin(B)*de;M[3*V]=Re*y,M[3*V+1]=De*y,M[3*V+2]=zr*y,W[3*V]=Re,W[3*V+1]=De,W[3*V+2]=zr,F[2*V]=k,F[2*V+1]=z,q.push(V),++V}H.push(q)}const J=new Uint32Array(2*T*(N-1)*3);V=0;for(let re=0;re<N;re++)for(let q=0;q<T;q++){const z=H[re][q],oe=H[re][q+1],de=H[re+1][q+1],je=H[re+1][q];re===0?(J[V++]=z,J[V++]=de,J[V++]=je):re===N-1?(J[V++]=z,J[V++]=oe,J[V++]=de):(J[V++]=z,J[V++]=oe,J[V++]=de,J[V++]=de,J[V++]=je,J[V++]=z)}const G=[[d.POSITION,J],[d.NORMAL,J]],ee=[[d.POSITION,{size:3,data:M,exclusive:!0}],[d.NORMAL,{size:3,data:W,exclusive:!0}]];return g.uv&&(ee.push([d.UV0,{size:2,data:F,exclusive:!0}]),G.push([d.UV0,J])),g.offset&&(G[0][0]=d.OFFSET,ee[0][0]=d.OFFSET,G.push([d.POSITION,new Uint32Array(J.length)]),ee.push([d.POSITION,{size:3,data:Float64Array.from(g.offset),exclusive:!0}])),new Ve(ee,G)}function t(y,_,m){const g=y;let A,P;if(m)A=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],P=new Uint32Array([0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1]);else{const M=g*(1+Math.sqrt(5))/2;A=[-g,M,0,g,M,0,-g,-M,0,g,-M,0,0,-g,M,0,g,M,0,-g,-M,0,g,-M,M,0,-g,M,0,g,-M,0,-g,-M,0,g],P=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1])}for(let M=0;M<A.length;M+=3)_r.scale(A,M,y/_r.length(A,M));let D={};function $(M,W){M>W&&([M,W]=[W,M]);const F=M.toString()+"."+W.toString();if(D[F])return D[F];let H=A.length;return A.length+=3,_r.add(A,3*M,A,3*W,A,H),_r.scale(A,H,y/_r.length(A,H)),H/=3,D[F]=H,H}for(let M=0;M<_;M++){const W=P.length,F=new Uint32Array(4*W);for(let H=0;H<W;H+=3){const V=P[H],J=P[H+1],G=P[H+2],ee=$(V,J),re=$(J,G),q=$(G,V),z=4*H;F[z]=V,F[z+1]=ee,F[z+2]=q,F[z+3]=J,F[z+4]=re,F[z+5]=ee,F[z+6]=G,F[z+7]=q,F[z+8]=re,F[z+9]=ee,F[z+10]=re,F[z+11]=q}P=F,D={}}const T=new Float32Array(A);for(let M=0;M<T.length;M+=3)_r.normalize(T,M);const N=[[d.POSITION,P],[d.NORMAL,P]],L=[[d.POSITION,{size:3,data:new Float32Array(A),exclusive:!0}],[d.NORMAL,{size:3,data:T,exclusive:!0}]];return new Ve(L,N)}function i(y,_,m,g,A,P,D){const $=_?[_[0],_[1],_[2]]:[0,0,0],T=y?[y[0],y[1],y[2]]:[0,0,1];P=P||[0,0];const N=m?[255*m[0],255*m[1],255*m[2],m.length>3?255*m[3]:255]:[255,255,255,255],L=g!=null&&g.length===2?g:[1,1],M=[[d.POSITION,{size:3,data:$,exclusive:!0}],[d.NORMAL,{size:3,data:T,exclusive:!0}],[d.UV0,{size:P.length,data:P}],[d.COLOR,{size:4,data:N,exclusive:!0}],[d.SIZE,{size:2,data:L}]];if(A!=null){const W=new Float32Array([A[0],A[1],A[2],A[3]]);M.push([d.AUXPOS1,{size:4,data:W}])}if(D!=null){const W=new Float32Array([D[0],D[1],D[2],D[3]]);M.push([d.AUXPOS2,{size:4,data:W}])}return new Ve(M,null,Zr.Point)}function s(y,_,m,g,A,P,D,$){if(y!=null){const{data:T}=$.getMutableAttribute(d.NORMAL);T[0]=y[0],T[1]=y[1],T[2]=y[2]}if(_!=null){const{data:T}=$.getMutableAttribute(d.POSITION);T[0]=_[0],T[1]=_[1],T[2]=_[2]}if(m!=null){const{data:T}=$.getMutableAttribute(d.COLOR);T[0]=m[0],T[1]=m[1],T[2]=m[2],T[3]=m[3]}if(g!=null){const{data:T}=$.getMutableAttribute(d.SIZE);T[0]=g[0],T[1]=g[1]}if(A!=null){const{data:T}=$.getMutableAttribute(d.AUXPOS1);T[0]=A[0],T[1]=A[1],T[2]=A[2],T[3]=A[3]}if(P!=null){const{data:T}=$.getMutableAttribute(d.UV0);T[0]=P[0],T[1]=P[1]}if(D!=null){const{data:T}=$.getMutableAttribute(d.AUXPOS2);T[0]=D[0],T[1]=D[1],T[2]=D[2],T[3]=D[3]}}function a(y,_){const m=new Float32Array(3*y.length),g=new Float32Array(_?3*y.length:3),A=new Uint32Array(y.length),P=new Uint32Array(y.length);for(let N=0;N<y.length;N++)m[3*N]=y[N][0],m[3*N+1]=y[N][1],m[3*N+2]=y[N][2],_&&(g[3*N]=_[N][0],g[3*N+1]=_[N][1],g[3*N+2]=_[N][2]),A[N]=N,P[N]=0;_||(g[0]=0,g[1]=1,g[2]=0);const D=[0,0],$=[[d.POSITION,A],[d.NORMAL,_?A:P],[d.UV0,P]],T=[[d.POSITION,{size:3,data:m,exclusive:!0}],[d.NORMAL,{size:3,data:g,exclusive:!0}],[d.UV0,{size:2,data:D,exclusive:!0}]];return new Ve(T,$,Zr.Point)}function o(){const y=[0,0,0,0,0,100,100,0,0],_=new Uint16Array([0,1,2]),m=[0,1,0],g=new Uint16Array([0,0,0]),A=[0,0],P=new Uint16Array([0,0,0]),D=[[d.POSITION,_],[d.NORMAL,g],[d.UV0,P]],$=[[d.POSITION,{size:3,data:y,exclusive:!0}],[d.NORMAL,{size:3,data:m,exclusive:!0}],[d.UV0,{size:2,data:A,exclusive:!0}]];return new Ve($,D)}r.createBoxGeometry=us.createGeometry,r.createDiamondGeometry=ps.createGeometry,r.createTetrahedronGeometry=fs.createGeometry,r.createSphereGeometry=e,r.createPolySphereGeometry=t,r.createPointGeometry=i,r.updatePointGeometry=s,r.createPointArrayGeometry=a,r.createTriangleGeometry=o;const n=[[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0]];function c(y=n){const _=new Array(12);for(let N=0;N<4;N++)for(let L=0;L<3;L++)_[3*N+L]=y[N][L];const m=new Uint32Array([0,1,2,2,3,0]),g=[0,0,1],A=new Uint32Array([0,0,0,0,0,0]),P=[0,0,1,0,1,1,0,1],D=[255,255,255,255],$=[[d.POSITION,m],[d.NORMAL,A],[d.UV0,m],[d.COLOR,A]],T=[[d.POSITION,{size:3,data:_,exclusive:!0}],[d.NORMAL,{size:3,data:g,exclusive:!0}],[d.UV0,{size:2,data:P,exclusive:!0}],[d.COLOR,{size:4,data:D,exclusive:!0}]];return new Ve(T,$)}function l(y,_,m,g,A=!0,P=!0){let D=0;const $=_,T=y;let N=we(0,D,0),L=we(0,D+T,0),M=we(0,-1,0),W=we(0,1,0);g&&(D=T,L=we(0,0,0),N=we(0,D,0),M=we(0,1,0),W=we(0,-1,0));const F=[L,N],H=[M,W],V=m+2,J=Math.sqrt(T*T+$*$);if(g)for(let k=m-1;k>=0;k--){const B=k*(2*Math.PI/m),Re=we(Math.cos(B)*$,D,Math.sin(B)*$);F.push(Re);const De=we(T*Math.cos(B)/J,-$/J,T*Math.sin(B)/J);H.push(De)}else for(let k=0;k<m;k++){const B=k*(2*Math.PI/m),Re=we(Math.cos(B)*$,D,Math.sin(B)*$);F.push(Re);const De=we(T*Math.cos(B)/J,$/J,T*Math.sin(B)/J);H.push(De)}const G=new Uint32Array(2*(m+2)*3),ee=new Uint32Array(2*(m+2)*3);let re=0,q=0;if(A){for(let k=3;k<F.length;k++)G[re++]=1,G[re++]=k-1,G[re++]=k,ee[q++]=0,ee[q++]=0,ee[q++]=0;G[re++]=F.length-1,G[re++]=2,G[re++]=1,ee[q++]=0,ee[q++]=0,ee[q++]=0}if(P){for(let k=3;k<F.length;k++)G[re++]=k,G[re++]=k-1,G[re++]=0,ee[q++]=k,ee[q++]=k-1,ee[q++]=1;G[re++]=0,G[re++]=2,G[re++]=F.length-1,ee[q++]=1,ee[q++]=2,ee[q++]=H.length-1}const z=new Float32Array(3*V);for(let k=0;k<V;k++)z[3*k]=F[k][0],z[3*k+1]=F[k][1],z[3*k+2]=F[k][2];const oe=new Float32Array(3*V);for(let k=0;k<V;k++)oe[3*k]=H[k][0],oe[3*k+1]=H[k][1],oe[3*k+2]=H[k][2];const de=[[d.POSITION,G],[d.NORMAL,ee]],je=[[d.POSITION,{size:3,data:z,exclusive:!0}],[d.NORMAL,{size:3,data:oe,exclusive:!0}]];return new Ve(je,de)}function h(y,_,m,g,A,P){const D=g?Ea(g):we(1,0,0),$=A?Ea(A):we(0,0,0);P=P==null||P;const T=ge();Oe(T,D);const N=ge();ce(N,T,Math.abs(y));const L=ge();ce(L,N,-.5),_e(L,L,$);const M=we(0,1,0);Math.abs(1-At(T,M))<.2&&ae(M,0,0,1);const W=ge();ut(W,T,M),Oe(W,W),ut(M,W,T);const F=2*m+(P?2:0),H=m+(P?2:0),V=new Float32Array(3*F),J=new Float32Array(3*H),G=new Float32Array(2*F),ee=new Uint32Array(3*m*(P?4:2)),re=new Uint32Array(3*m*(P?4:2));P&&(V[3*(F-2)+0]=L[0],V[3*(F-2)+1]=L[1],V[3*(F-2)+2]=L[2],G[2*(F-2)]=0,G[2*(F-2)+1]=0,V[3*(F-1)+0]=V[3*(F-2)+0]+N[0],V[3*(F-1)+1]=V[3*(F-2)+1]+N[1],V[3*(F-1)+2]=V[3*(F-2)+2]+N[2],G[2*(F-1)]=1,G[2*(F-1)+1]=1,J[3*(H-2)+0]=-T[0],J[3*(H-2)+1]=-T[1],J[3*(H-2)+2]=-T[2],J[3*(H-1)+0]=T[0],J[3*(H-1)+1]=T[1],J[3*(H-1)+2]=T[2]);const q=(B,Re,De)=>{ee[B]=Re,re[B]=De};let z=0;const oe=ge(),de=ge();for(let B=0;B<m;B++){const Re=B*(2*Math.PI/m);ce(oe,M,Math.sin(Re)),ce(de,W,Math.cos(Re)),_e(oe,oe,de),J[3*B+0]=oe[0],J[3*B+1]=oe[1],J[3*B+2]=oe[2],ce(oe,oe,_),_e(oe,oe,L),V[3*B+0]=oe[0],V[3*B+1]=oe[1],V[3*B+2]=oe[2],G[2*B+0]=B/m,G[2*B+1]=0,V[3*(B+m)+0]=V[3*B+0]+N[0],V[3*(B+m)+1]=V[3*B+1]+N[1],V[3*(B+m)+2]=V[3*B+2]+N[2],G[2*(B+m)+0]=B/m,G[2*B+1]=1;const De=(B+1)%m;q(z++,B,B),q(z++,B+m,B),q(z++,De,De),q(z++,De,De),q(z++,B+m,B),q(z++,De+m,De)}if(P){for(let B=0;B<m;B++){const Re=(B+1)%m;q(z++,F-2,H-2),q(z++,B,H-2),q(z++,Re,H-2)}for(let B=0;B<m;B++){const Re=(B+1)%m;q(z++,B+m,H-1),q(z++,F-1,H-1),q(z++,Re+m,H-1)}}const je=[[d.POSITION,ee],[d.NORMAL,re],[d.UV0,ee]],k=[[d.POSITION,{size:3,data:V,exclusive:!0}],[d.NORMAL,{size:3,data:J,exclusive:!0}],[d.UV0,{size:2,data:G,exclusive:!0}]];return new Ve(k,je)}function u(y,_,m,g,A){m=m||10,g=g==null||g,Ee(y.length>1);const P=[[0,0,0]],D=[],$=[];for(let T=0;T<m;T++){D.push([0,-T-1,-(T+1)%m-1]);const N=T/m*2*Math.PI;$.push([Math.cos(N)*_,Math.sin(N)*_])}return r.createPathExtrusionGeometry($,y,P,D,g,A)}function f(y,_,m,g,A,P=we(0,0,0)){const D=y.length,$=new Float32Array(_.length*D*3+(6*m.length||0)),T=new Float32Array(_.length*D*3+(m?6:0)),N=(_.length-1)*D*6+3*g.length*2,L=new Uint32Array(N),M=new Uint32Array(N);let W=0,F=0,H=0,V=0;const J=ge(),G=ge(),ee=ge(),re=ge(),q=ge(),z=ge(),oe=ge(),de=j(),je=ge(),k=ge(),B=ge(),Re=ge(),De=ge(),zr=bt();ae(je,0,1,0),Te(G,_[1],_[0]),Oe(G,G),A?(_e(de,_[0],P),Oe(ee,de)):ae(ee,0,0,1),E(G,ee,je,je,q,ee,Va),te(re,ee),te(Re,q);for(let X=0;X<m.length;X++)ce(z,q,m[X][0]),ce(de,ee,m[X][2]),_e(z,z,de),_e(z,z,_[0]),$[W++]=z[0],$[W++]=z[1],$[W++]=z[2];T[F++]=-G[0],T[F++]=-G[1],T[F++]=-G[2];for(let X=0;X<g.length;X++)L[H++]=g[X][0]>0?g[X][0]:-g[X][0]-1+m.length,L[H++]=g[X][1]>0?g[X][1]:-g[X][1]-1+m.length,L[H++]=g[X][2]>0?g[X][2]:-g[X][2]-1+m.length,M[V++]=0,M[V++]=0,M[V++]=0;let it=m.length;const Hn=m.length-1;for(let X=0;X<_.length;X++){let va=!1;X>0&&(te(J,G),X<_.length-1?(Te(G,_[X+1],_[X]),Oe(G,G)):va=!0,_e(k,J,G),Oe(k,k),_e(B,_[X-1],re),Yl(_[X],k,zr),Ql(zr,tc(B,J),de)?(Te(de,de,_[X]),Oe(ee,de),ut(q,k,ee),Oe(q,q)):E(k,re,Re,je,q,ee,Va),te(re,ee),te(Re,q)),A&&(_e(de,_[X],P),Oe(De,de));for(let Pt=0;Pt<D;Pt++)if(ce(z,q,y[Pt][0]),ce(de,ee,y[Pt][1]),_e(z,z,de),Oe(oe,z),T[F++]=oe[0],T[F++]=oe[1],T[F++]=oe[2],_e(z,z,_[X]),$[W++]=z[0],$[W++]=z[1],$[W++]=z[2],!va){const ns=(Pt+1)%D;L[H++]=it+Pt,L[H++]=it+D+Pt,L[H++]=it+ns,L[H++]=it+ns,L[H++]=it+D+Pt,L[H++]=it+D+ns;for(let ls=0;ls<6;ls++)M[V++]=L[H-6+ls]-Hn}it+=D}const Bn=_[_.length-1];for(let X=0;X<m.length;X++)ce(z,q,m[X][0]),ce(de,ee,m[X][1]),_e(z,z,de),_e(z,z,Bn),$[W++]=z[0],$[W++]=z[1],$[W++]=z[2];const as=F/3;T[F++]=G[0],T[F++]=G[1],T[F++]=G[2];const os=it-D;for(let X=0;X<g.length;X++)L[H++]=g[X][0]>=0?it+g[X][0]:-g[X][0]-1+os,L[H++]=g[X][2]>=0?it+g[X][2]:-g[X][2]-1+os,L[H++]=g[X][1]>=0?it+g[X][1]:-g[X][1]-1+os,M[V++]=as,M[V++]=as,M[V++]=as;const Gn=[[d.POSITION,L],[d.NORMAL,M]],Wn=[[d.POSITION,{size:3,data:$,exclusive:!0}],[d.NORMAL,{size:3,data:T,exclusive:!0}]];return new Ve(Wn,Gn)}function S(y,_,m){Ee(y.length>1,"createPolylineGeometry(): polyline needs at least 2 points"),Ee(y[0].length===3,"createPolylineGeometry(): malformed vertex"),Ee(_==null||_.length===y.length,"createPolylineGeometry: need same number of points and normals"),Ee(_==null||_[0].length===3,"createPolylineGeometry(): malformed normal");const g=new Float64Array(3*y.length),A=new Uint32Array(2*(y.length-1));let P=0,D=0;for(let N=0;N<y.length;N++){for(let L=0;L<3;L++)g[P++]=y[N][L];N>0&&(A[D++]=N-1,A[D++]=N)}const $=[],T=[];if($.push([d.POSITION,A]),T.push([d.POSITION,{size:3,data:g,exclusive:!0}]),_){const N=new Float32Array(3*_.length);let L=0;for(let M=0;M<y.length;M++)for(let W=0;W<3;W++)N[L++]=_[M][W];$.push([d.NORMAL,A]),T.push([d.NORMAL,{size:3,data:N,exclusive:!0}])}return m&&(T.push([d.COLOR,{size:4,data:m}]),$.push([d.COLOR,Bc(m.length/4)])),new Ve(T,$,Zr.Line)}function w(y,_,m,g,A=0){const P=new Array(18),D=[[-_,A,g/2],[m,A,g/2],[0,y+A,g/2],[-_,A,-g/2],[m,A,-g/2],[0,y+A,-g/2]],$=new Uint16Array([0,1,2,3,0,2,2,5,3,1,4,5,5,2,1,1,0,3,3,4,1,4,3,5]);for(let T=0;T<6;T++)P[3*T]=D[T][0],P[3*T+1]=D[T][1],P[3*T+2]=D[T][2];return new Ve([[d.POSITION,{size:3,data:P,exclusive:!0}]],[[d.POSITION,$]])}function b(y,_){const m=y.getMutableAttribute(d.POSITION).data;for(let g=0;g<m.length;g+=3){const A=m[g],P=m[g+1],D=m[g+2];ae(yr,A,P,D),ue(yr,yr,_),m[g]=yr[0],m[g+1]=yr[1],m[g+2]=yr[2]}}function U(y,_=y){const m=y.vertexAttributes,g=m.get(d.POSITION).data,A=m.get(d.NORMAL).data;if(A){const P=_.getMutableAttribute(d.NORMAL).data;for(let D=0;D<A.length;D+=3){const $=A[D+1];P[D+1]=-A[D+2],P[D+2]=$}}if(g){const P=_.getMutableAttribute(d.POSITION).data;for(let D=0;D<g.length;D+=3){const $=g[D+1];P[D+1]=-g[D+2],P[D+2]=$}}return _}function R(y,_,m,g,A){return!(Math.abs(At(_,y))>A)&&(ut(m,y,_),Oe(m,m),ut(g,m,y),Oe(g,g),!0)}function E(y,_,m,g,A,P,D){return R(y,_,A,P,D)||R(y,m,A,P,D)||R(y,g,A,P,D)}r.createSquareGeometry=c,r.createConeGeometry=l,r.createCylinderGeometry=h,r.createTubeGeometry=u,r.createPathExtrusionGeometry=f,r.createPolylineGeometry=S,r.createExtrudedTriangle=w,r.transformInPlace=b,r.cgToGIS=U,r.makeOrthoBasisDirUp=R,r.makeOrthoBasisDirUpFallback=E}(Ws||(Ws={}));const Va=.99619469809,yr=ge(),ef=Ws;class cd{constructor(e,t){this._material=e,this._repository=t,this._map=new Map}destroy(){this._map.forEach((e,t)=>{x(e)&&this._repository.release(this._material,ri(t))})}load(e,t){this._map.has(t)||this._map.set(t,this._repository.acquire(this._material,ri(t)));const i=this._map.get(t);if(x(i)){if(i.ensureResources(e)===jo.LOADED)return i;this._repository.requestRender()}return null}}function ri(r){switch(r){case ye.MATERIAL:return O.Color;case ye.MATERIAL_ALPHA:return O.Alpha;case ye.MATERIAL_DEPTH:return O.Depth;case ye.MATERIAL_NORMAL:return O.Normal;case ye.MATERIAL_DEPTH_SHADOWMAP_ALL:return O.Shadow;case ye.MATERIAL_HIGHLIGHT:return O.Highlight;case ye.MATERIAL_DEPTH_SHADOWMAP_HIGHLIGHT:case ye.MATERIAL_DEPTH_SHADOWMAP_DEFAULT:return O.Shadow}}const ja=8;function dd(r,e){const t=r.vertex;t.uniforms.add(new pe("intrinsicWidth",i=>i.width)),e.vvSize?(r.attributes.add(d.SIZEFEATUREATTRIBUTE,"float"),t.uniforms.add(new mt("vvSizeMinSize",i=>i.vvSizeMinSize)),t.uniforms.add(new mt("vvSizeMaxSize",i=>i.vvSizeMaxSize)),t.uniforms.add(new mt("vvSizeOffset",i=>i.vvSizeOffset)),t.uniforms.add(new mt("vvSizeFactor",i=>i.vvSizeFactor)),t.code.add(p`float getSize() {
return intrinsicWidth * clamp(vvSizeOffset + sizeFeatureAttribute * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize).x;
}`)):(r.attributes.add(d.SIZE,"float"),t.code.add(p`float getSize(){
return intrinsicWidth * size;
}`)),e.vvOpacity?(r.attributes.add(d.OPACITYFEATUREATTRIBUTE,"float"),t.constants.add("vvOpacityNumber","int",8),t.uniforms.add([new bi("vvOpacityValues",i=>i.vvOpacityValues,ja),new bi("vvOpacityOpacities",i=>i.vvOpacityOpacities,ja)]),t.code.add(p`float interpolateOpacity( float value ){
if (value <= vvOpacityValues[0]) {
return vvOpacityOpacities[0];
}
for (int i = 1; i < vvOpacityNumber; ++i) {
if (vvOpacityValues[i] >= value) {
float f = (value - vvOpacityValues[i-1]) / (vvOpacityValues[i] - vvOpacityValues[i-1]);
return mix(vvOpacityOpacities[i-1], vvOpacityOpacities[i], f);
}
}
return vvOpacityOpacities[vvOpacityNumber - 1];
}
vec4 applyOpacity( vec4 color ){
return vec4(color.xyz, interpolateOpacity(opacityFeatureAttribute));
}`)):t.code.add(p`vec4 applyOpacity( vec4 color ){
return color;
}`),e.vvColor?(r.attributes.add(d.COLORFEATUREATTRIBUTE,"float"),t.constants.add("vvColorNumber","int",Jr),t.uniforms.add(new bi("vvColorValues",i=>i.vvColorValues,Jr)),t.uniforms.add(new Zo("vvColorColors",i=>i.vvColorColors,Jr)),t.code.add(p`vec4 interpolateColor( float value ) {
if (value <= vvColorValues[0]) {
return vvColorColors[0];
}
for (int i = 1; i < vvColorNumber; ++i) {
if (vvColorValues[i] >= value) {
float f = (value - vvColorValues[i-1]) / (vvColorValues[i] - vvColorValues[i-1]);
return mix(vvColorColors[i-1], vvColorColors[i], f);
}
}
return vvColorColors[vvColorNumber - 1];
}
vec4 getColor(){
return applyOpacity(interpolateColor(colorFeatureAttribute));
}`)):(r.attributes.add(d.COLOR,"vec4"),t.code.add(p`vec4 getColor(){
return applyOpacity(color);
}`))}function hd(r){return K(r)?qi:r.length===4?r:nr(ud,r[0],r[1],r[2],1)}const ud=ot();function mn(r,e){r.constants.add("stippleAlphaColorDiscard","float",.001),r.constants.add("stippleAlphaHighlightDiscard","float",.5),e.stippleEnabled?pd(r,e):fd(r)}function pd(r,e){const t=!(e.draped&&e.stipplePreferContinuous),{vertex:i,fragment:s}=r;s.include(aa),i.uniforms.add(new Ut("stipplePatternPixelSize")),e.draped||(oa(i,e),i.uniforms.add(new pe("worldToScreenPerDistanceRatio",(a,o)=>1/o.camera.perScreenPixelRatio)),i.code.add(p`float computeWorldToScreenRatio(vec3 segmentCenter) {
float segmentDistanceToCamera = length(segmentCenter - cameraPosition);
return worldToScreenPerDistanceRatio / segmentDistanceToCamera;
}`)),r.varyings.add("vStippleDistance","float"),e.stippleRequiresClamp&&r.varyings.add("vStippleDistanceLimits","vec2"),e.stippleRequiresStretchMeasure&&r.varyings.add("vStipplePatternStretch","float"),i.code.add(p`
    float discretizeWorldToScreenRatio(float worldToScreenRatio) {
      float step = ${md};

      float discreteWorldToScreenRatio = log(worldToScreenRatio);
      discreteWorldToScreenRatio = ceil(discreteWorldToScreenRatio / step) * step;
      discreteWorldToScreenRatio = exp(discreteWorldToScreenRatio);
      return discreteWorldToScreenRatio;
    }
  `),i.code.add(p`vec2 computeStippleDistanceLimits(float startPseudoScreen, float segmentLengthPseudoScreen, float segmentLengthScreen, float patternLength) {`),i.code.add(p`
    if (segmentLengthPseudoScreen >= ${t?"patternLength":"1e4"}) {
  `),i.uniforms.add(new pe("pixelRatio",(a,o)=>o.camera.pixelRatio)),i.code.add(p`
        // Round the screen length to get an integer number of pattern repetitions (minimum 1).
        float repetitions = segmentLengthScreen / (patternLength * pixelRatio);
        float flooredRepetitions = max(1.0, floor(repetitions + 0.5));
        float segmentLengthScreenRounded = flooredRepetitions * patternLength;

        ${e.stippleRequiresStretchMeasure?p`
              float stretch = repetitions / flooredRepetitions;

              // We need to impose a lower bound on the stretch factor to prevent the dots from merging together when there is only 1 repetition.
              // 0.75 is the lowest possible stretch value for flooredRepetitions > 1, so it makes sense as lower bound.
              vStipplePatternStretch = max(0.75, stretch);`:""}

        return vec2(0.0, segmentLengthScreenRounded);
      }
      return vec2(startPseudoScreen, startPseudoScreen + segmentLengthPseudoScreen);
    }
  `),s.uniforms.add(new pt("stipplePatternTexture")),s.uniforms.add(new Ut("stipplePatternSDFNormalizer")),s.uniforms.add(new Ut("stipplePatternTextureSize")),s.uniforms.add(new Ut("stipplePatternPixelSizeInv")),s.code.add(p`float padTexture(float u) {
return (u * stipplePatternTextureSize + 1.0)/(stipplePatternTextureSize + 2.0);
}`),s.code.add(p`
    float getStippleSDF(out bool isClamped) {
      ${e.stippleRequiresClamp?p`
          float stippleDistanceClamped = clamp(vStippleDistance, vStippleDistanceLimits.x, vStippleDistanceLimits.y);
          vec2 aaCorrectedLimits = vStippleDistanceLimits + vec2(1.0, -1.0) / gl_FragCoord.w;
          isClamped = vStippleDistance < aaCorrectedLimits.x || vStippleDistance > aaCorrectedLimits.y;`:p`
          float stippleDistanceClamped = vStippleDistance;
          isClamped = false;`}

      float u = stippleDistanceClamped * gl_FragCoord.w * stipplePatternPixelSizeInv;
      ${e.stippleScaleWithLineWidth?p`u *= vLineSizeInv;`:""}
      u = padTexture(fract(u));

      float encodedSDF = rgba2float(texture2D(stipplePatternTexture, vec2(u, 0.5)));
      float sdf = (encodedSDF * 2.0 - 1.0) * stipplePatternSDFNormalizer;

      ${e.stippleRequiresStretchMeasure?p`return (sdf - 0.5) * vStipplePatternStretch + 0.5;`:p`return sdf;`}
    }

    float getStippleSDF() {
      bool ignored;
      return getStippleSDF(ignored);
    }

    float getStippleAlpha() {
      bool isClamped;
      float stippleSDF = getStippleSDF(isClamped);

      float antiAliasedResult = ${e.stippleScaleWithLineWidth?p`clamp(stippleSDF * vLineWidth + 0.5, 0.0, 1.0);`:p`clamp(stippleSDF + 0.5, 0.0, 1.0);`}

      return isClamped ? floor(antiAliasedResult + 0.5) : antiAliasedResult;
    }
  `),e.stippleOffColorEnabled?(s.uniforms.add(new We("stippleOffColor",a=>hd(a.stippleOffColor))),s.code.add(p`#define discardByStippleAlpha(stippleAlpha, threshold) {}
#define blendStipple(color, stippleAlpha) mix(color, stippleOffColor, stippleAlpha)`)):s.code.add(p`#define discardByStippleAlpha(stippleAlpha, threshold) if (stippleAlpha < threshold) { discard; }
#define blendStipple(color, stippleAlpha) vec4(color.rgb, color.a * stippleAlpha)`)}function fd(r){r.fragment.code.add(p`float getStippleAlpha() { return 1.0; }
#define discardByStippleAlpha(_stippleAlpha_, _threshold_) {}
#define blendStipple(color, _stippleAlpha_) color`)}const md=p.float(.4);var _t;(function(r){r[r.BUTT=0]="BUTT",r[r.SQUARE=1]="SQUARE",r[r.ROUND=2]="ROUND",r[r.COUNT=3]="COUNT"})(_t||(_t={}));class he extends ci{constructor(){super(...arguments),this.output=O.Color,this.capType=_t.BUTT,this.transparencyPassType=xe.NONE,this.occluder=!1,this.hasSlicePlane=!1,this.hasPolygonOffset=!1,this.writeDepth=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stippleScaleWithLineWidth=!1,this.stipplePreferContinuous=!0,this.roundJoins=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.falloffEnabled=!1,this.innerColorEnabled=!1,this.hasOccludees=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1,this.wireframe=!1}}v([C({count:O.COUNT})],he.prototype,"output",void 0),v([C({count:_t.COUNT})],he.prototype,"capType",void 0),v([C({count:xe.COUNT})],he.prototype,"transparencyPassType",void 0),v([C()],he.prototype,"occluder",void 0),v([C()],he.prototype,"hasSlicePlane",void 0),v([C()],he.prototype,"hasPolygonOffset",void 0),v([C()],he.prototype,"writeDepth",void 0),v([C()],he.prototype,"draped",void 0),v([C()],he.prototype,"stippleEnabled",void 0),v([C()],he.prototype,"stippleOffColorEnabled",void 0),v([C()],he.prototype,"stippleScaleWithLineWidth",void 0),v([C()],he.prototype,"stipplePreferContinuous",void 0),v([C()],he.prototype,"roundJoins",void 0),v([C()],he.prototype,"vvSize",void 0),v([C()],he.prototype,"vvColor",void 0),v([C()],he.prototype,"vvOpacity",void 0),v([C()],he.prototype,"falloffEnabled",void 0),v([C()],he.prototype,"innerColorEnabled",void 0),v([C()],he.prototype,"hasOccludees",void 0),v([C()],he.prototype,"hasMultipassTerrain",void 0),v([C()],he.prototype,"cullAboveGround",void 0),v([C()],he.prototype,"wireframe",void 0),v([C({constValue:!0})],he.prototype,"stippleRequiresClamp",void 0),v([C({constValue:!0})],he.prototype,"stippleRequiresStretchMeasure",void 0),v([C({constValue:!0})],he.prototype,"hasVvInstancing",void 0),v([C({constValue:!0})],he.prototype,"hasSliceTranslatedView",void 0);const ji=1;function gd(r){const e=new pr,t=r.hasMultipassTerrain&&(r.output===O.Color||r.output===O.Alpha);e.include(lc),e.include(dd,r),e.include(mn,r),r.output===O.Depth&&e.include(Xo,r),di(e,r);const{vertex:i,fragment:s}=e;i.uniforms.add([new ar("inverseProjectionMatrix",(f,S)=>S.camera.inverseProjectionMatrix),new qe("nearFar",(f,S)=>S.camera.nearFar),new pe("miterLimit",f=>f.join!=="miter"?0:f.miterLimit),new We("viewport",(f,S)=>S.camera.fullViewport)]),i.constants.add("LARGE_HALF_FLOAT","float",65500),e.attributes.add(d.POSITION,"vec3"),e.attributes.add(d.SUBDIVISIONFACTOR,"float"),e.attributes.add(d.UV0,"vec2"),e.attributes.add(d.AUXPOS1,"vec3"),e.attributes.add(d.AUXPOS2,"vec3"),e.varyings.add("vColor","vec4"),e.varyings.add("vpos","vec3"),e.varyings.add("linearDepth","float"),t&&e.varyings.add("depth","float");const a=r.capType===_t.ROUND,o=r.stippleEnabled&&r.stippleScaleWithLineWidth||a;o&&e.varyings.add("vLineWidth","float");const n=r.stippleEnabled&&r.stippleScaleWithLineWidth;n&&e.varyings.add("vLineSizeInv","float");const c=r.innerColorEnabled||a;c&&e.varyings.add("vLineDistance","float");const l=r.stippleEnabled&&a,h=r.falloffEnabled||l;h&&e.varyings.add("vLineDistanceNorm","float"),a&&(e.varyings.add("vSegmentSDF","float"),e.varyings.add("vReverseSegmentSDF","float")),i.code.add(p`#define PERPENDICULAR(v) vec2(v.y, -v.x);
float interp(float ncp, vec4 a, vec4 b) {
return (-ncp - a.z) / (b.z - a.z);
}
vec2 rotate(vec2 v, float a) {
float s = sin(a);
float c = cos(a);
mat2 m = mat2(c, -s, s, c);
return m * v;
}`),i.code.add(p`vec4 projectAndScale(vec4 pos) {
vec4 posNdc = proj * pos;
posNdc.xy *= viewport.zw / posNdc.w;
return posNdc;
}`),i.code.add(p`
    void clipAndTransform(inout vec4 pos, inout vec4 prev, inout vec4 next, in bool isStartVertex) {
      float vnp = nearFar[0] * 0.99;

      if(pos.z > -nearFar[0]) {
        //current pos behind ncp --> we need to clip
        if (!isStartVertex) {
          if(prev.z < -nearFar[0]) {
            //previous in front of ncp
            pos = mix(prev, pos, interp(vnp, prev, pos));
            next = pos;
          } else {
            pos = vec4(0.0, 0.0, 0.0, 1.0);
          }
        } else {
          if(next.z < -nearFar[0]) {
            //next in front of ncp
            pos = mix(pos, next, interp(vnp, pos, next));
            prev = pos;
          } else {
            pos = vec4(0.0, 0.0, 0.0, 1.0);
          }
        }
      } else {
        //current position visible
        if (prev.z > -nearFar[0]) {
          //previous behind ncp
          prev = mix(pos, prev, interp(vnp, pos, prev));
        }
        if (next.z > -nearFar[0]) {
          //next behind ncp
          next = mix(next, pos, interp(vnp, next, pos));
        }
      }

      ${t?"depth = pos.z;":""}
      linearDepth = (-pos.z - nearFar[0]) / (nearFar[1] - nearFar[0]);

      pos = projectAndScale(pos);
      next = projectAndScale(next);
      prev = projectAndScale(prev);
    }
  `),i.uniforms.add(new pe("pixelRatio",(f,S)=>S.camera.pixelRatio)),i.code.add(p`
  void main(void) {
    // unpack values from uv0.y
    bool isStartVertex = abs(abs(uv0.y)-3.0) == 1.0;

    float coverage = 1.0;

    // Check for special value of uv0.y which is used by the Renderer when graphics
    // are removed before the VBO is recompacted. If this is the case, then we just
    // project outside of clip space.
    if (uv0.y == 0.0) {
      // Project out of clip space
      gl_Position = vec4(1e038, 1e038, 1e038, 1.0);
    }
    else {
      bool isJoin = abs(uv0.y) < 3.0;

      float lineSize = getSize();
      float lineWidth = lineSize * pixelRatio;

      ${o?p`vLineWidth = lineWidth;`:""}
      ${n?p`vLineSizeInv = 1.0 / lineSize;`:""}

      // convert sub-pixel coverage to alpha
      if (lineWidth < 1.0) {
        coverage = lineWidth;
        lineWidth = 1.0;
      }else{
        // Ribbon lines cannot properly render non-integer sizes. Round width to integer size if
        // larger than one for better quality. Note that we do render < 1 pixels more or less correctly
        // so we only really care to round anything larger than 1.
        lineWidth = floor(lineWidth + 0.5);
      }

      vec4 pos  = view * vec4(position.xyz, 1.0);
      vec4 prev = view * vec4(auxpos1.xyz, 1.0);
      vec4 next = view * vec4(auxpos2.xyz, 1.0);

      clipAndTransform(pos, prev, next, isStartVertex);

      vec2 left = (pos.xy - prev.xy);
      vec2 right = (next.xy - pos.xy);

      float leftLen = length(left);
      float rightLen = length(right);
  `),(r.stippleEnabled||a)&&i.code.add(p`
      float isEndVertex = float(!isStartVertex);
      vec2 segmentOrigin = mix(pos.xy, prev.xy, isEndVertex);
      vec2 segment = mix(right, left, isEndVertex);
      ${a?p`vec2 segmentEnd = mix(next.xy, pos.xy, isEndVertex);`:""}
    `),i.code.add(p`left = (leftLen > 0.001) ? left/leftLen : vec2(0.0, 0.0);
right = (rightLen > 0.001) ? right/rightLen : vec2(0.0, 0.0);
vec2 capDisplacementDir = vec2(0, 0);
vec2 joinDisplacementDir = vec2(0, 0);
float displacementLen = lineWidth;
if (isJoin) {
bool isOutside = (left.x * right.y - left.y * right.x) * uv0.y > 0.0;
joinDisplacementDir = normalize(left + right);
joinDisplacementDir = PERPENDICULAR(joinDisplacementDir);
if (leftLen > 0.001 && rightLen > 0.001) {
float nDotSeg = dot(joinDisplacementDir, left);
displacementLen /= length(nDotSeg * left - joinDisplacementDir);
if (!isOutside) {
displacementLen = min(displacementLen, min(leftLen, rightLen)/abs(nDotSeg));
}
}
if (isOutside && (displacementLen > miterLimit * lineWidth)) {`),r.roundJoins?i.code.add(p`
        vec2 startDir = leftLen < 0.001 ? right : left;
        startDir = PERPENDICULAR(startDir);

        vec2 endDir = rightLen < 0.001 ? left : right;
        endDir = PERPENDICULAR(endDir);

        float factor = ${r.stippleEnabled?p`min(1.0, subdivisionFactor * ${p.float((ji+2)/(ji+1))})`:p`subdivisionFactor`};

        float rotationAngle = acos(clamp(dot(startDir, endDir), -1.0, 1.0));
        joinDisplacementDir = rotate(startDir, -sign(uv0.y) * factor * rotationAngle);
      `):i.code.add(p`if (leftLen < 0.001) {
joinDisplacementDir = right;
}
else if (rightLen < 0.001) {
joinDisplacementDir = left;
}
else {
joinDisplacementDir = (isStartVertex || subdivisionFactor > 0.0) ? right : left;
}
joinDisplacementDir = PERPENDICULAR(joinDisplacementDir);`);const u=r.capType!==_t.BUTT;return i.code.add(p`
        displacementLen = lineWidth;
      }
    } else {
      // CAP handling ---------------------------------------------------
      joinDisplacementDir = isStartVertex ? right : left;
      joinDisplacementDir = PERPENDICULAR(joinDisplacementDir);

      ${u?p`capDisplacementDir = isStartVertex ? -right : left;`:""}
    }
  `),i.code.add(p`
    // Displacement (in pixels) caused by join/or cap
    vec2 dpos = joinDisplacementDir * sign(uv0.y) * displacementLen + capDisplacementDir * displacementLen;

    ${h||c?p`float lineDistNorm = sign(uv0.y) * pos.w;`:""}

    ${c?p`vLineDistance = lineWidth * lineDistNorm;`:""}
    ${h?p`vLineDistanceNorm = lineDistNorm;`:""}

    pos.xy += dpos;
  `),a&&i.code.add(p`vec2 segmentDir = normalize(segment);
vSegmentSDF = (isJoin && isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentOrigin, segmentDir) * pos.w) ;
vReverseSegmentSDF = (isJoin && !isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentEnd, -segmentDir) * pos.w);`),r.stippleEnabled&&(r.draped?i.uniforms.add(new pe("worldToScreenRatio",(f,S)=>1/S.screenToPCSRatio)):i.code.add(p`vec3 segmentCenter = mix((auxpos2 + position) * 0.5, (position + auxpos1) * 0.5, isEndVertex);
float worldToScreenRatio = computeWorldToScreenRatio(segmentCenter);`),i.code.add(p`float segmentLengthScreenDouble = length(segment);
float segmentLengthScreen = segmentLengthScreenDouble * 0.5;
float discreteWorldToScreenRatio = discretizeWorldToScreenRatio(worldToScreenRatio);
float segmentLengthRender = length(mix(auxpos2 - position, position - auxpos1, isEndVertex));
vStipplePatternStretch = worldToScreenRatio / discreteWorldToScreenRatio;`),r.draped?i.code.add(p`float segmentLengthPseudoScreen = segmentLengthScreen / pixelRatio * discreteWorldToScreenRatio / worldToScreenRatio;
float startPseudoScreen = uv0.x * discreteWorldToScreenRatio - mix(0.0, segmentLengthPseudoScreen, isEndVertex);`):i.code.add(p`float startPseudoScreen = mix(uv0.x, uv0.x - segmentLengthRender, isEndVertex) * discreteWorldToScreenRatio;
float segmentLengthPseudoScreen = segmentLengthRender * discreteWorldToScreenRatio;`),i.code.add(p`
      float patternLength = ${r.stippleScaleWithLineWidth?"lineSize * ":""} stipplePatternPixelSize;

      // Compute the coordinates at both start and end of the line segment, because we need both to clamp to in the fragment shader
      vStippleDistanceLimits = computeStippleDistanceLimits(startPseudoScreen, segmentLengthPseudoScreen, segmentLengthScreen, patternLength);

      vStippleDistance = mix(vStippleDistanceLimits.x, vStippleDistanceLimits.y, isEndVertex);

      // Adjust the coordinate to the displaced position (the pattern is shortened/overextended on the in/outside of joins)
      if (segmentLengthScreenDouble >= 0.001) {
        // Project the actual vertex position onto the line segment. Note that the resulting factor is within [0..1] at the
        // original vertex positions, and slightly outside of that range at the displaced positions
        vec2 stippleDisplacement = pos.xy - segmentOrigin;
        float stippleDisplacementFactor = dot(segment, stippleDisplacement) / (segmentLengthScreenDouble * segmentLengthScreenDouble);

        // Apply this offset to the actual vertex coordinate (can be screen or pseudo-screen space)
        vStippleDistance += (stippleDisplacementFactor - isEndVertex) * (vStippleDistanceLimits.y - vStippleDistanceLimits.x);
      }

      // Cancel out perspective correct interpolation because we want this length the really represent the screen distance
      vStippleDistanceLimits *= pos.w;
      vStippleDistance *= pos.w;

      // Disable stipple distance limits on caps
      vStippleDistanceLimits = isJoin ?
                                 vStippleDistanceLimits :
                                 isStartVertex ?
                                  vec2(-1e038, vStippleDistanceLimits.y) :
                                  vec2(vStippleDistanceLimits.x, 1e038);
    `)),i.code.add(p`
      // Convert back into NDC
      pos.xy = (pos.xy / viewport.zw) * pos.w;

      vColor = getColor();
      vColor.a *= coverage;

      ${r.wireframe&&!r.draped?"pos.z -= 0.001 * pos.w;":""}

      // transform final position to camera space for slicing
      vpos = (inverseProjectionMatrix * pos).xyz;
      gl_Position = pos;
    }
  }
  `),t&&e.include(na,r),e.include(Nt,r),s.include(Xi),s.code.add(p`
  void main() {
    discardBySlice(vpos);
    ${t?"terrainDepthTest(gl_FragCoord, depth);":""}
  `),r.wireframe?s.code.add(p`vec4 finalColor = vec4(1.0, 0.0, 1.0, 1.0);`):(a&&s.code.add(p`
      float sdf = min(vSegmentSDF, vReverseSegmentSDF);
      vec2 fragmentPosition = vec2(
        min(sdf, 0.0),
        vLineDistance
      ) * gl_FragCoord.w;

      float fragmentRadius = length(fragmentPosition);
      float fragmentCapSDF = (fragmentRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale
      float capCoverage = clamp(0.5 - fragmentCapSDF, 0.0, 1.0);

      if (capCoverage < ${p.float(rt)}) {
        discard;
      }
    `),l?s.code.add(p`
      vec2 stipplePosition = vec2(
        min(getStippleSDF() * 2.0 - 1.0, 0.0),
        vLineDistanceNorm * gl_FragCoord.w
      );
      float stippleRadius = length(stipplePosition * vLineWidth);
      float stippleCapSDF = (stippleRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale
      float stippleCoverage = clamp(0.5 - stippleCapSDF, 0.0, 1.0);
      float stippleAlpha = step(${p.float(rt)}, stippleCoverage);
      `):s.code.add(p`float stippleAlpha = getStippleAlpha();`),s.uniforms.add(new We("intrinsicColor",f=>f.color)),s.code.add(p`discardByStippleAlpha(stippleAlpha, stippleAlphaColorDiscard);
vec4 color = intrinsicColor * vColor;`),r.innerColorEnabled&&(s.uniforms.add(new We("innerColor",f=>ne(f.innerColor,f.color))),s.uniforms.add(new pe("innerWidth",(f,S)=>f.innerWidth*S.camera.pixelRatio)),s.code.add(p`float distToInner = abs(vLineDistance * gl_FragCoord.w) - innerWidth;
float innerAA = clamp(0.5 - distToInner, 0.0, 1.0);
float innerAlpha = innerColor.a + color.a * (1.0 - innerColor.a);
color = mix(color, vec4(innerColor.rgb, innerAlpha), innerAA);`)),s.code.add(p`vec4 finalColor = blendStipple(color, stippleAlpha);`),r.falloffEnabled&&(s.uniforms.add(new pe("falloff",f=>f.falloff)),s.code.add(p`finalColor.a *= pow(max(0.0, 1.0 - abs(vLineDistanceNorm * gl_FragCoord.w)), falloff);`))),s.code.add(p`
    if (finalColor.a < ${p.float(rt)}) {
      discard;
    }

    ${r.output===O.Alpha?p`gl_FragColor = vec4(finalColor.a);`:""}
    ${r.output===O.Color?p`gl_FragColor = highlightSlice(finalColor, vpos);`:""}
    ${r.output===O.Color&&r.transparencyPassType===xe.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    ${r.output===O.Highlight?p`gl_FragColor = vec4(1.0);`:""}
    ${r.output===O.Depth?p`outputDepth(linearDepth);`:""}
  }
  `),e}const vd=Object.freeze(Object.defineProperty({__proto__:null,NUM_ROUND_JOIN_SUBDIVISIONS:ji,build:gd},Symbol.toStringTag,{value:"Module"})),gn=new Map([[d.POSITION,0],[d.SUBDIVISIONFACTOR,1],[d.UV0,2],[d.AUXPOS1,3],[d.AUXPOS2,4],[d.COLOR,5],[d.COLORFEATUREATTRIBUTE,5],[d.SIZE,6],[d.SIZEFEATUREATTRIBUTE,6],[d.OPACITYFEATUREATTRIBUTE,7]]);class es extends fr{constructor(e,t,i){super(e,t,i),this.stippleTextureRepository=e.stippleTextureRepository}initializeProgram(e){const t=es.shader.get().build(this.configuration);return new mr(e.rctx,t,gn)}destroy(){super.destroy(),this.stippleTextureRepository.release(this.stipplePattern),this.stipplePattern=null,this.stippleTextureBind=null}bindPass(e,t){if(this.program.bindPass(e,t),this.stipplePattern!==e.stipplePattern){const i=e.stipplePattern;this.stippleTextureBind=this.stippleTextureRepository.swap(this.stipplePattern,i),this.stipplePattern=i}if(this.configuration.stippleEnabled){const{pixelSize:i,sdfNormalizer:s,pixels:a}=x(this.stippleTextureBind)?this.stippleTextureBind(this.program):{pixelSize:1,sdfNormalizer:1,pixels:1};this.program.setUniform1f("stipplePatternSDFNormalizer",s),this.program.setUniform1f("stipplePatternTextureSize",a),this.program.setUniform1f("stipplePatternPixelSize",i),this.program.setUniform1f("stipplePatternPixelSizeInv",1/i)}}_makePipelineState(e,t){const i=this.configuration,s=e===xe.NONE,a=e===xe.FrontFace;return at({blending:i.output===O.Color||i.output===O.Alpha?s?Xr:Zi(e):null,depthTest:{func:ia(e)},depthWrite:s?i.writeDepth&&Mr:Ho(e),colorWrite:vt,stencilWrite:i.hasOccludees?Fi:null,stencilTest:i.hasOccludees?t?Ni:la:null,polygonOffset:s||a?i.hasPolygonOffset&&Ha:sc})}initializePipeline(){const e=this.configuration;if(e.occluder){const t=e.hasPolygonOffset&&Ha;this._occluderPipelineTransparent=at({blending:Xr,polygonOffset:t,depthTest:Ia,depthWrite:null,colorWrite:vt,stencilWrite:null,stencilTest:cc}),this._occluderPipelineOpaque=at({blending:Xr,polygonOffset:t,depthTest:Ia,depthWrite:null,colorWrite:vt,stencilWrite:dc,stencilTest:hc}),this._occluderPipelineMaskWrite=at({blending:null,polygonOffset:t,depthTest:Jo,depthWrite:null,colorWrite:null,stencilWrite:Fi,stencilTest:Ni})}return this._occludeePipelineState=this._makePipelineState(this.configuration.transparencyPassType,!0),this._makePipelineState(this.configuration.transparencyPassType,!1)}get primitiveType(){return this.configuration.wireframe?Ct.LINES:Ct.TRIANGLE_STRIP}getPipelineState(e,t){return t?this._occludeePipelineState:this.configuration.occluder?e===se.TRANSPARENT_OCCLUDER_MATERIAL?this._occluderPipelineTransparent:e===se.OCCLUDER_MATERIAL?this._occluderPipelineOpaque:this._occluderPipelineMaskWrite:super.getPipelineState(e,t)}}es.shader=new gr(vd,()=>kt(()=>import("./RibbonLine.glsl.e2303360.js"),["assets/RibbonLine.glsl.e2303360.js","assets/Matrix4Uniform.b7dc351c.js","assets/index.9da382e4.js","assets/index.313b6d72.css","assets/enums.de935fa5.js","assets/Texture.599541db.js","assets/requestImageUtils.4ea1aefd.js","assets/geometryDataUtils.337d3a34.js","assets/triangle.70405bec.js","assets/vectorStacks.f85d4a03.js","assets/quatf64.ddec7ef6.js","assets/mat4f64.84d5c445.js","assets/lineSegment.901d4e43.js","assets/VertexAttribute.5551e0d8.js","assets/VertexArrayObject.4198c73f.js","assets/VertexElementDescriptor.d386088d.js","assets/BufferView.9de22bcf.js","assets/quat.2f83a288.js","assets/vec3f32.0772c8d8.js","assets/sphere.f1597b20.js","assets/plane.f3b639d8.js","assets/InterleavedLayout.e9290885.js","assets/types.28f12cac.js","assets/floatRGBA.b2358e75.js","assets/triangulationUtils.27ba054b.js","assets/earcut.d30cbec0.js","assets/deduplicate.c1f3fafb.js","assets/NestedMap.21c7ee53.js","assets/Octree.5f16cd20.js","assets/boundedPlane.2500e48f.js","assets/glUtil.345a77b1.js","assets/dehydratedFeatures.98692fb8.js"]));const Ha={factor:0,units:-4},_d=ni.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial");var Xe;(function(r){r[r.LEFT_JOIN_START=-2]="LEFT_JOIN_START",r[r.LEFT_JOIN_END=-1]="LEFT_JOIN_END",r[r.LEFT_CAP_START=-4]="LEFT_CAP_START",r[r.LEFT_CAP_END=-5]="LEFT_CAP_END",r[r.RIGHT_JOIN_START=2]="RIGHT_JOIN_START",r[r.RIGHT_JOIN_END=1]="RIGHT_JOIN_END",r[r.RIGHT_CAP_START=4]="RIGHT_CAP_START",r[r.RIGHT_CAP_END=5]="RIGHT_CAP_END"})(Xe||(Xe={}));class yd extends hi{constructor(e){super(e,new Td),this._vertexAttributeLocations=gn,this.techniqueConfig=new he,this.layout=this.createLayout()}isClosed(e,t){return vn(this.parameters,e,t)}getConfiguration(e,t){this.techniqueConfig.output=e,this.techniqueConfig.draped=t.slot===se.DRAPED_MATERIAL;const i=x(this.parameters.stipplePattern)&&e!==O.Highlight;return this.techniqueConfig.stippleEnabled=i,this.techniqueConfig.stippleOffColorEnabled=i&&x(this.parameters.stippleOffColor),this.techniqueConfig.stippleScaleWithLineWidth=i&&this.parameters.stippleScaleWithLineWidth,this.techniqueConfig.stipplePreferContinuous=i&&this.parameters.stipplePreferContinuous,this.techniqueConfig.hasSlicePlane=this.parameters.hasSlicePlane,this.techniqueConfig.hasOccludees=this.parameters.hasOccludees,this.techniqueConfig.roundJoins=this.parameters.join==="round",this.techniqueConfig.capType=this.parameters.cap,this.techniqueConfig.hasPolygonOffset=this.parameters.hasPolygonOffset,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.vvColor=this.parameters.vvColorEnabled,this.techniqueConfig.vvOpacity=this.parameters.vvOpacityEnabled,this.techniqueConfig.vvSize=this.parameters.vvSizeEnabled,this.techniqueConfig.innerColorEnabled=this.parameters.innerWidth>0&&x(this.parameters.innerColor),this.techniqueConfig.falloffEnabled=this.parameters.falloff>0,this.techniqueConfig.occluder=this.parameters.renderOccluded===Ht.OccludeAndTransparentStencil,this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.hasMultipassTerrain=t.multipassTerrain.enabled,this.techniqueConfig.cullAboveGround=t.multipassTerrain.cullAboveGround,this.techniqueConfig.wireframe=this.parameters.wireframe,this.techniqueConfig}intersect(e,t,i,s,a,o,n,c,l){x(l)?this._intersectDrapedLineGeometry(e,s,l,o,n):this._intersectLineGeometry(e,t,i,s,n)}_intersectDrapedLineGeometry(e,t,i,s,a){if(!t.options.selectionMode)return;const o=e.vertexAttributes.get(d.POSITION).data,n=e.vertexAttributes.get(d.SIZE);let c=this.parameters.width;if(this.parameters.vvSizeEnabled){const w=e.vertexAttributes.get(d.SIZEFEATUREATTRIBUTE).data[0];c*=jt(this.parameters.vvSizeOffset[0]+w*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else n&&(c*=n.data[0]);const l=s[0],h=s[1],u=(c/2+4)*e.screenToWorldRatio;let f=Number.MAX_VALUE,S=0;for(let w=0;w<o.length-5;w+=3){const b=o[w],U=o[w+1],R=l-b,E=h-U,y=o[w+3]-b,_=o[w+4]-U,m=jt((y*R+_*E)/(y*y+_*_),0,1),g=y*m-R,A=_*m-E,P=g*g+A*A;P<f&&(f=P,S=w/3)}f<u*u&&a(i.dist,i.normal,S,!1)}_intersectLineGeometry(e,t,i,s,a){if(!s.options.selectionMode||Ji(t))return;if(!Lo(i))return void _d.error("intersection assumes a translation-only matrix");const o=e.vertexAttributes,n=o.get(d.POSITION).data;let c=this.parameters.width;if(this.parameters.vvSizeEnabled){const R=o.get(d.SIZEFEATUREATTRIBUTE).data[0];c*=jt(this.parameters.vvSizeOffset[0]+R*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else o.has(d.SIZE)&&(c*=o.get(d.SIZE).data[0]);const l=s.camera,h=wd;Lr(h,s.point);const u=c*l.pixelRatio/2+4*l.pixelRatio;ae(Vr[0],h[0]-u,h[1]+u,0),ae(Vr[1],h[0]+u,h[1]+u,0),ae(Vr[2],h[0]+u,h[1]-u,0),ae(Vr[3],h[0]-u,h[1]-u,0);for(let R=0;R<4;R++)if(!l.unprojectFromRenderScreen(Vr[R],St[R]))return;Ft(l.eye,St[0],St[1],gs),Ft(l.eye,St[1],St[2],vs),Ft(l.eye,St[2],St[3],_s),Ft(l.eye,St[3],St[0],ys);let f=Number.MAX_VALUE,S=0;const w=qs(this.parameters,o,e.indices)?n.length-2:n.length-5;for(let R=0;R<w;R+=3){He[0]=n[R]+i[12],He[1]=n[R+1]+i[13],He[2]=n[R+2]+i[14];const E=(R+3)%n.length;if(Be[0]=n[E]+i[12],Be[1]=n[E+1]+i[13],Be[2]=n[E+2]+i[14],Ce(gs,He)<0&&Ce(gs,Be)<0||Ce(vs,He)<0&&Ce(vs,Be)<0||Ce(_s,He)<0&&Ce(_s,Be)<0||Ce(ys,He)<0&&Ce(ys,Be)<0)continue;if(l.projectToRenderScreen(He,Jt),l.projectToRenderScreen(Be,Yt),Jt[2]<0&&Yt[2]>0){Te(nt,He,Be);const _=l.frustum,m=-Ce(_[zt.NEAR],He)/At(nt,Li(_[zt.NEAR]));ce(nt,nt,m),_e(He,He,nt),l.projectToRenderScreen(He,Jt)}else if(Jt[2]>0&&Yt[2]<0){Te(nt,Be,He);const _=l.frustum,m=-Ce(_[zt.NEAR],Be)/At(nt,Li(_[zt.NEAR]));ce(nt,nt,m),_e(Be,Be,nt),l.projectToRenderScreen(Be,Yt)}else if(Jt[2]<0&&Yt[2]<0)continue;Jt[2]=0,Yt[2]=0;const y=cn(Er(Jt,Yt,Wa),h);y<f&&(f=y,te(Ba,He),te(Ga,Be),S=R/3)}const b=s.rayBegin,U=s.rayEnd;if(f<u*u){let R=Number.MAX_VALUE;if(dn(Er(Ba,Ga,Wa),Er(b,U,Od),Xt)){Te(Xt,Xt,b);const E=wt(Xt);ce(Xt,Xt,1/E),R=E/Rt(b,U)}a(R,Xt,S,!1)}}computeAttachmentOrigin(e,t){const i=e.vertexAttributes;if(!i)return null;const s=e.indices,a=i.get(d.POSITION);return an(a,s?s.get(d.POSITION):null,s&&qs(this.parameters,i,s),t)}createLayout(){const e=ui().vec3f(d.POSITION).f32(d.SUBDIVISIONFACTOR).vec2f(d.UV0).vec3f(d.AUXPOS1).vec3f(d.AUXPOS2);return this.parameters.vvSizeEnabled?e.f32(d.SIZEFEATUREATTRIBUTE):e.f32(d.SIZE),this.parameters.vvColorEnabled?e.f32(d.COLORFEATUREATTRIBUTE):e.vec4f(d.COLOR),this.parameters.vvOpacityEnabled&&e.f32(d.OPACITYFEATUREATTRIBUTE),e}createBufferWriter(){return new xd(this.layout,this.parameters)}requiresSlot(e,t){if(e===se.DRAPED_MATERIAL)return!0;if(this.parameters.renderOccluded===Ht.OccludeAndTransparentStencil)return e===se.OPAQUE_MATERIAL||e===se.OCCLUDER_MATERIAL||e===se.TRANSPARENT_OCCLUDER_MATERIAL;const i=ri(t);return i===O.Color||i===O.Alpha?e===(this.parameters.writeDepth?se.TRANSPARENT_MATERIAL:se.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL):e===se.OPAQUE_MATERIAL}createGLMaterial(e){return e.output===O.Color||e.output===O.Alpha||e.output===O.Highlight||e.output===O.Depth?new Sd(e):null}validateParameters(e){e.join!=="miter"&&(e.miterLimit=0)}}class Sd extends Yi{_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){return this._output!==O.Color&&this._output!==O.Alpha||this._updateOccludeeState(e),this.ensureTechnique(es,e)}}class Td extends uc{constructor(){super(...arguments),this.width=0,this.color=ki,this.join="miter",this.cap=_t.BUTT,this.miterLimit=5,this.writeDepth=!0,this.hasPolygonOffset=!1,this.stippleScaleWithLineWidth=!1,this.stipplePreferContinuous=!0,this.hasSlicePlane=!1,this.vvFastUpdate=!1,this.isClosed=!1,this.falloff=0,this.innerWidth=0,this.hasOccludees=!1,this.wireframe=!1}}class xd{constructor(e,t){this.parameters=t,this.numJoinSubdivisions=0,this.vertexBufferLayout=e;const i=t.stipplePattern?1:0;switch(this.parameters.join){case"miter":case"bevel":this.numJoinSubdivisions=i;break;case"round":this.numJoinSubdivisions=ji+i}}_isClosed(e){return qs(this.parameters,e.vertexAttributes,e.indices)}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){const i=e.indices.get(d.POSITION).length/2+1,s=this._isClosed(e);let a=s?2:2*2;return a+=((s?i:i-1)-(s?0:1))*(2*this.numJoinSubdivisions+4),a+=2,this.parameters.wireframe&&(a=2+4*(a-2)),a}write(e,t,i,s){var N;const a=Cd,o=Rd,n=Ad,c=t.vertexAttributes.get(d.POSITION).data,l=t.indices&&t.indices.get(d.POSITION),h=(N=t.vertexAttributes.get(d.DISTANCETOSTART))==null?void 0:N.data;l&&l.length!==2*(c.length/3-1)&&console.warn("RibbonLineMaterial does not support indices");let u=1,f=0;this.parameters.vvSizeEnabled?f=t.vertexAttributes.get(d.SIZEFEATUREATTRIBUTE).data[0]:t.vertexAttributes.has(d.SIZE)&&(u=t.vertexAttributes.get(d.SIZE).data[0]);let S=[1,1,1,1],w=0;this.parameters.vvColorEnabled?w=t.vertexAttributes.get(d.COLORFEATUREATTRIBUTE).data[0]:t.vertexAttributes.has(d.COLOR)&&(S=t.vertexAttributes.get(d.COLOR).data);let b=0;this.parameters.vvOpacityEnabled&&(b=t.vertexAttributes.get(d.OPACITYFEATUREATTRIBUTE).data[0]);const U=c.length/3,R=e.transformation,E=new Float32Array(i.buffer),y=this.vertexBufferLayout.stride/4;let _=s*y;const m=_;let g=0;const A=h?(L,M,W)=>g=h[W]:(L,M,W)=>g+=Rt(L,M),P=(L,M,W,F,H,V,J)=>{if(E[_++]=M[0],E[_++]=M[1],E[_++]=M[2],E[_++]=F,E[_++]=J,E[_++]=H,E[_++]=L[0],E[_++]=L[1],E[_++]=L[2],E[_++]=W[0],E[_++]=W[1],E[_++]=W[2],this.parameters.vvSizeEnabled?E[_++]=f:E[_++]=u,this.parameters.vvColorEnabled)E[_++]=w;else{const G=Math.min(4*V,S.length-4);E[_++]=S[G+0],E[_++]=S[G+1],E[_++]=S[G+2],E[_++]=S[G+3]}this.parameters.vvOpacityEnabled&&(E[_++]=b)};_+=y,ae(o,c[0],c[1],c[2]),R&&ue(o,o,R);const D=this._isClosed(t);if(D){const L=c.length-3;ae(a,c[L],c[L+1],c[L+2]),R&&ue(a,a,R)}else ae(n,c[3],c[4],c[5]),R&&ue(n,n,R),P(o,o,n,1,Xe.LEFT_CAP_START,0,0),P(o,o,n,1,Xe.RIGHT_CAP_START,0,0),te(a,o),te(o,n);const $=D?0:1,T=D?U:U-1;for(let L=$;L<T;L++){const M=(L+1)%U*3;ae(n,c[M+0],c[M+1],c[M+2]),R&&ue(n,n,R),A(a,o,L),P(a,o,n,0,Xe.LEFT_JOIN_END,L,g),P(a,o,n,0,Xe.RIGHT_JOIN_END,L,g);const W=this.numJoinSubdivisions;for(let F=0;F<W;++F){const H=(F+1)/(W+1);P(a,o,n,H,Xe.LEFT_JOIN_END,L,g),P(a,o,n,H,Xe.RIGHT_JOIN_END,L,g)}P(a,o,n,1,Xe.LEFT_JOIN_START,L,g),P(a,o,n,1,Xe.RIGHT_JOIN_START,L,g),te(a,o),te(o,n)}D?(ae(n,c[3],c[4],c[5]),R&&ue(n,n,R),g=A(a,o,T),P(a,o,n,0,Xe.LEFT_JOIN_END,$,g),P(a,o,n,0,Xe.RIGHT_JOIN_END,$,g)):(g=A(a,o,T),P(a,o,o,0,Xe.LEFT_CAP_END,T,g),P(a,o,o,0,Xe.RIGHT_CAP_END,T,g)),ms(E,m+y,E,m,y),_=ms(E,_-y,E,_,y),this.parameters.wireframe&&this._addWireframeVertices(i,m,_,y)}_addWireframeVertices(e,t,i,s){const a=new Float32Array(e.buffer,i*Float32Array.BYTES_PER_ELEMENT),o=new Float32Array(e.buffer,t*Float32Array.BYTES_PER_ELEMENT,i-t);let n=0;const c=l=>n=ms(o,l,a,n,s);for(let l=0;l<o.length-1;l+=2*s)c(l),c(l+2*s),c(l+1*s),c(l+2*s),c(l+1*s),c(l+3*s)}}function ms(r,e,t,i,s){for(let a=0;a<s;a++)t[i++]=r[e++];return i}function qs(r,e,t){return vn(r,e.get(d.POSITION).data,t?t.get(d.POSITION):null)}function vn(r,e,t){return!!r.isClosed&&(t?t.length>2:e.length>6)}const He=j(),Be=j(),nt=j(),Xt=j(),wd=j(),Jt=tt(),Yt=tt(),Ba=j(),Ga=j(),Wa=Ki(),Od=Ki(),Cd=j(),Rd=j(),Ad=j(),Vr=[tt(),tt(),tt(),tt()],St=[j(),j(),j(),j()],gs=bt(),vs=bt(),_s=bt(),ys=bt();function _n(r){return r.type==="point"}function yn(r){return"declaredClass"in r}function qa(r){return"declaredClass"in r}function bd(r){return"declaredClass"in r}function tf(r,e){if(!r)return null;if(bd(r))return r;const t=new Qn({layer:e,sourceLayer:e});return t.visible=r.visible,t.symbol=ya(r.symbol),t.attributes=ya(r.attributes),t.geometry=Sn(r.geometry),t}function Sn(r){return K(r)?null:yn(r)?r:Zn(Pd(r))}function Pd(r){const e=r.spatialReference.toJSON();switch(r.type){case"point":{const{x:t,y:i,z:s,m:a}=r;return{x:t,y:i,z:s,m:a,spatialReference:e}}case"polygon":{const{rings:t,hasZ:i,hasM:s}=r;return{rings:ka(t),hasZ:i,hasM:s,spatialReference:e}}case"polyline":{const{paths:t,hasZ:i,hasM:s}=r;return{paths:ka(t),hasZ:i,hasM:s,spatialReference:e}}case"extent":{const{xmin:t,xmax:i,ymin:s,ymax:a,zmin:o,zmax:n,mmin:c,mmax:l,hasZ:h,hasM:u}=r;return{xmin:t,xmax:i,ymin:s,ymax:a,zmin:o,zmax:n,mmin:c,mmax:l,hasZ:h,hasM:u,spatialReference:e}}case"multipoint":{const{points:t,hasZ:i,hasM:s}=r;return{points:xn(t)?Tn(t):t,hasZ:i,hasM:s,spatialReference:e}}default:return}}function ka(r){return Ed(r)?r.map(e=>Tn(e)):r}function Tn(r){return r.map(e=>Xn(e))}function Ed(r){for(const e of r)if(e.length!==0)return xn(e);return!1}function xn(r){return r.length&&(Jn(r[0])||Yn(r[0]))}function Dd(r,e){if(!r)return null;let t;if(qa(r)){if(e==null)return r.clone();if(qa(e))return e.copy(r)}return e!=null?(t=e,t.x=r.x,t.y=r.y,t.spatialReference=r.spatialReference,r.hasZ?(t.z=r.z,t.hasZ=r.hasZ):(t.z=null,t.hasZ=!1),r.hasM?(t.m=r.m,t.hasM=!0):(t.m=null,t.hasM=!1)):(t=Nr(r.x,r.y,r.z,r.spatialReference),r.hasM&&(t.m=r.m,t.hasM=!0)),t}function Id(r,e){if(r.type==="point")return Et(r,e,!1);if(yn(r))switch(r.type){case"extent":return Et(r.center,e,!1);case"polygon":return Et(r.centroid,e,!1);case"polyline":return Et(Za(r),e,!0);case"mesh":return Et(r.origin,e,!1)}else switch(r.type){case"extent":return Et(Md(r),e,!0);case"polygon":return Et($d(r),e,!0);case"polyline":return Et(Za(r),e,!0)}}function Za(r){const e=r.paths[0];if(!e||e.length===0)return null;const t=Fo(e,No(e)/2);return Nr(t[0],t[1],t[2],r.spatialReference)}function Md(r){const e=isFinite(r.zmin);return Nr(.5*(r.xmax+r.xmin),.5*(r.ymax+r.ymin),e?.5*(r.zmax+r.zmin):void 0,r.spatialReference)}function $d(r){const e=r.rings[0];if(!e||e.length===0)return null;const t=Kn(r.rings,r.hasZ);return Nr(t[0],t[1],t[2],r.spatialReference)}function Et(r,e,t){const i=t?r:Dd(r);return e&&r?el(r,i,e)?i:null:i}function rf(r,e,t,i=0){if(r){e||(e=br());const s=r;let a=.5*s.width*(t-1),o=.5*s.height*(t-1);return s.width<1e-7*s.height?a+=o/20:s.height<1e-7*s.width&&(o+=a/20),nr(e,s.xmin-a-i,s.ymin-o-i,s.xmax+a+i,s.ymax+o+i),e}return null}function Ld(r,e){for(let t=0;t<r.geometries.length;++t){const i=r.geometries[t].getMutableAttribute(d.AUXPOS1);i&&i.data[3]!==e&&(i.data[3]=e,r.geometryVertexAttrsUpdated(r.geometryRecords[t]))}}function sf(r,e){const t=tl(ki);return x(r)&&(t[0]=r[0],t[1]=r[1],t[2]=r[2]),x(e)?t[3]=e:x(r)&&r.length>3&&(t[3]=r[3]),t}function af(r=al,e,t,i=1){const s=new Array(3);if(K(e)||K(t))s[0]=1,s[1]=1,s[2]=1;else{let a,o=0;for(let n=2;n>=0;n--){const c=r[n];let l;const h=c!=null,u=n===0&&!a&&!h,f=t[n];c==="symbol-value"||u?l=f!==0?e[n]/f:1:h&&c!=="proportional"&&isFinite(c)&&(l=f!==0?c/f:1),l!=null&&(s[n]=l,a=l,o=Math.max(o,Math.abs(l)))}for(let n=2;n>=0;n--)s[n]==null?s[n]=a:s[n]===0&&(s[n]=.001*o)}for(let a=2;a>=0;a--)s[a]/=i;return sl(s)}function Fd(r){return r.isPrimitive!=null}function of(r){return Fd(r)&&(r=[r.width,r.depth,r.height]),wn(r)?null:"Symbol sizes may not be negative values"}function wn(r){if(Array.isArray(r)){for(const e of r)if(!wn(e))return!1;return!0}return r==null||r>=0}function nf(r,e,t,i=le()){const s=r||0,a=e||0,o=t||0;return s!==0&&ol(i,i,-s/180*Math.PI),a!==0&&nl(i,i,a/180*Math.PI),o!==0&&ll(i,i,o/180*Math.PI),i}function lf(r,e){return e.minDemResolution!=null?e.minDemResolution:rl(r)?e.minDemResolutionForPoints:.01*il(r)}class cf{constructor(e,t=null,i=0){this.array=e,this.spatialReference=t,this.offset=i}}function On(r){return"array"in r}function _i(r,e,t="ground"){if(_n(e))return r.getElevation(e.x,e.y,e.z||0,e.spatialReference,t);if(On(e)){let i=e.offset;return r.getElevation(e.array[i++],e.array[i++],e.array[i]||0,ne(e.spatialReference,r.spatialReference),t)}return r.getElevation(e[0],e[1],e[2]||0,r.spatialReference,t)}function Cn(r,e,t,i,s,a,o,n,c,l,h){const u=Gd[h.mode];let f,S,w=0;if(Mi(r,e,t,i,c.spatialReference,s,n))return u.requiresAlignment(h)?(w=u.applyElevationAlignmentBuffer(i,s,a,o,n,c,l,h),f=a,S=o):(f=i,S=s),Mi(f,c.spatialReference,S,a,l.spatialReference,o,n)?w:void 0}function Rn(r,e,t,i,s){const a=(_n(r)?r.z:On(r)?r.array[r.offset+2]:r[2])||0;switch(t.mode){case"on-the-ground":{const o=ne(_i(e,r,"ground"),0);return s.verticalDistanceToGround=0,s.sampledElevation=o,void(s.z=o)}case"relative-to-ground":{const o=ne(_i(e,r,"ground"),0),n=t.geometryZWithOffset(a,i);return s.verticalDistanceToGround=n,s.sampledElevation=o,void(s.z=n+o)}case"relative-to-scene":{const o=ne(_i(e,r,"scene"),0),n=t.geometryZWithOffset(a,i);return s.verticalDistanceToGround=n,s.sampledElevation=o,void(s.z=n+o)}case"absolute-height":{const o=t.geometryZWithOffset(a,i),n=ne(_i(e,r,"ground"),0);return s.verticalDistanceToGround=o-n,s.sampledElevation=n,void(s.z=o)}default:return cl(t.mode),void(s.z=0)}}function df(r,e,t,i){return Rn(r,e,t,i,Ar),Ar.z}function hf(r,e,t){return e==null||t==null?r.definedChanged:e==="on-the-ground"&&t==="on-the-ground"?r.staysOnTheGround:e===t||e!=="on-the-ground"&&t!=="on-the-ground"?ks.UPDATE:r.onTheGroundChanged}function uf(r){return r==="relative-to-ground"||r==="relative-to-scene"}function pf(r){return r!=="absolute-height"}function Nd(r,e,t,i,s){Rn(e,t,s,i,Ar),Ld(r,Ar.verticalDistanceToGround);const a=Ar.sampledElevation,o=ft(Wd,r.transformation);return yi[0]=e.x,yi[1]=e.y,yi[2]=Ar.z,dl(e.spatialReference,yi,o,i.spatialReference)?r.transformation=o:console.warn("Could not locate symbol object properly, it might be misplaced"),a}function zd(r,e,t,i,s,a){let o=0;const n=a.spatialReference;e*=3,i*=3;for(let c=0;c<s;++c){const l=r[e+0],h=r[e+1],u=r[e+2],f=ne(a.getElevation(l,h,u,n,"ground"),0);o+=f,t[i+0]=l,t[i+1]=h,t[i+2]=f,e+=3,i+=3}return o/s}function Ud(r,e,t,i,s,a,o,n){let c=0;const l=n.calculateOffsetRenderUnits(o),h=n.featureExpressionInfoContext,u=a.spatialReference;e*=3,i*=3;for(let f=0;f<s;++f){const S=r[e+0],w=r[e+1],b=r[e+2],U=ne(a.getElevation(S,w,b,u,"ground"),0);c+=U,t[i+0]=S,t[i+1]=w,t[i+2]=h==null?b+U+l:U+l,e+=3,i+=3}return c/s}function Vd(r,e,t,i,s,a,o,n){let c=0;const l=n.calculateOffsetRenderUnits(o),h=n.featureExpressionInfoContext,u=a.spatialReference;e*=3,i*=3;for(let f=0;f<s;++f){const S=r[e+0],w=r[e+1],b=r[e+2],U=ne(a.getElevation(S,w,b,u,"scene"),0);c+=U,t[i+0]=S,t[i+1]=w,t[i+2]=h==null?b+U+l:U+l,e+=3,i+=3}return c/s}function jd(r){const e=r.meterUnitOffset,t=r.featureExpressionInfoContext;return e!==0||t!=null}function Hd(r,e,t,i,s,a,o,n){const c=n.calculateOffsetRenderUnits(o),l=n.featureExpressionInfoContext;e*=3,i*=3;for(let h=0;h<s;++h){const u=r[e+0],f=r[e+1],S=r[e+2];t[i+0]=u,t[i+1]=f,t[i+2]=l==null?S+c:c,e+=3,i+=3}return 0}class Bd{constructor(){this.verticalDistanceToGround=0,this.sampledElevation=0,this.z=0}}var ks;(function(r){r[r.NONE=0]="NONE",r[r.UPDATE=1]="UPDATE",r[r.RECREATE=2]="RECREATE"})(ks||(ks={}));const Gd={"absolute-height":{applyElevationAlignmentBuffer:Hd,requiresAlignment:jd},"on-the-ground":{applyElevationAlignmentBuffer:zd,requiresAlignment:()=>!0},"relative-to-ground":{applyElevationAlignmentBuffer:Ud,requiresAlignment:()=>!0},"relative-to-scene":{applyElevationAlignmentBuffer:Vd,requiresAlignment:()=>!0}},Wd=le(),Ar=new Bd,yi=j(),qd=ni.getLogger("esri.views.3d.layers.graphics.featureExpressionInfoUtils");function kd(r){return{cachedResult:r.cachedResult,arcade:r.arcade?{func:r.arcade.func,context:r.arcade.modules.arcadeUtils.createExecContext(null,{sr:r.arcade.context.spatialReference}),modules:r.arcade.modules}:null}}async function ff(r,e,t){const i=r&&r.expression;if(typeof i!="string")return null;const s=Yd(i);if(s!=null)return{cachedResult:s};const a=await hl(),o=a.arcadeUtils,n=o.createSyntaxTree(i);return o.dependsOnView(n)?(t!=null&&t.error("Expressions containing '$view' are not supported on ElevationInfo"),{cachedResult:0}):{arcade:{func:o.createFunction(n),context:o.createExecContext(null,{sr:e}),modules:a}}}function Zd(r,e,t){return r.arcadeUtils.createFeature(e.attributes,e.geometry,t)}function Xd(r,e){if(r!=null&&!An(r)){if(!e||!r.arcade)return void qd.errorOncePerTick("Arcade support required but not provided");const t=e;t._geometry&&(t._geometry=Sn(t._geometry)),r.arcade.modules.arcadeUtils.updateExecContext(r.arcade.context,e)}}function Jd(r){if(r!=null){if(An(r))return r.cachedResult;const e=r.arcade;let t=r.arcade.modules.arcadeUtils.executeFunction(e.func,e.context);return typeof t!="number"&&(r.cachedResult=0,t=0),t}return 0}function mf(r,e=!1){let t=r&&r.featureExpressionInfo;const i=t&&t.expression;return e||i==="0"||(t=null),t}const gf={cachedResult:0};function An(r){return r.cachedResult!=null}function Yd(r){return r==="0"?0:null}class bn{constructor(){this._meterUnitOffset=0,this._renderUnitOffset=0,this._unit="meters",this._metersPerElevationInfoUnit=1,this._featureExpressionInfoContext=null,this.centerPointInElevationSR=null,this.mode=null}get featureExpressionInfoContext(){return this._featureExpressionInfoContext}get meterUnitOffset(){return this._meterUnitOffset}get unit(){return this._unit}set unit(e){this._unit=e,this._metersPerElevationInfoUnit=ul(e)}get requiresSampledElevationInfo(){return this.mode!=="absolute-height"}reset(){this.mode=null,this._meterUnitOffset=0,this._renderUnitOffset=0,this._featureExpressionInfoContext=null,this.unit="meters"}set offsetMeters(e){this._meterUnitOffset=e,this._renderUnitOffset=0}set offsetElevationInfoUnits(e){this._meterUnitOffset=e*this._metersPerElevationInfoUnit,this._renderUnitOffset=0}addOffsetRenderUnits(e){this._renderUnitOffset+=e}geometryZWithOffset(e,t){const i=this.calculateOffsetRenderUnits(t);return this.featureExpressionInfoContext!=null?i:e+i}calculateOffsetRenderUnits(e){let t=this._meterUnitOffset;const i=this.featureExpressionInfoContext;return i!=null&&(t+=Jd(i)*this._metersPerElevationInfoUnit),t/e.unitInMeters+this._renderUnitOffset}setFromElevationInfo(e){this.mode=e.mode,this.unit=pl(e.unit)?e.unit:"meters",this.offsetElevationInfoUnits=ne(e.offset,0)}updateFeatureExpressionInfoContext(e,t,i){if(K(e))return void(this._featureExpressionInfoContext=null);const s=e&&e.arcade;s&&x(t)&&x(i)?(this._featureExpressionInfoContext=kd(e),Xd(this._featureExpressionInfoContext,Zd(s.modules,t,i))):this._featureExpressionInfoContext=e}static fromElevationInfo(e){const t=new bn;return x(e)&&t.setFromElevationInfo(e),t}}const ma=128,Pn=.5;function vf(r,e=ma,t=e*Pn,i=0){const s=Qd(r,e,t,i);return new pc(s,{mipmap:!1,wrap:{s:dr.CLAMP_TO_EDGE,t:dr.CLAMP_TO_EDGE},width:e,height:e,components:4,noUnpackFlip:!0})}function Qd(r,e=ma,t=e*Pn,i=0){switch(r){case"circle":default:return Kd(e,t);case"square":return eh(e,t);case"cross":return rh(e,t,i);case"x":return ih(e,t,i);case"kite":return th(e,t);case"triangle":return sh(e,t);case"arrow":return ah(e,t)}}function Kd(r,e){const t=r/2-.5;return pi(r,In(t,t,e/2))}function eh(r,e){return En(r,e,!1)}function th(r,e){return En(r,e,!0)}function rh(r,e,t=0){return Dn(r,e,!1,t)}function ih(r,e,t=0){return Dn(r,e,!0,t)}function sh(r,e){return pi(r,Mn(r/2,e,e/2))}function ah(r,e){const t=e,i=e/2,s=r/2,a=.8*t,o=In(s,(r-e)/2-a,Math.sqrt(a*a+i*i)),n=Mn(s,t,i);return pi(r,(c,l)=>Math.max(n(c,l),-o(c,l)))}function En(r,e,t){return t&&(e/=Math.SQRT2),pi(r,(i,s)=>{let a=i-.5*r+.25,o=.5*r-s-.75;if(t){const n=(a+o)/Math.SQRT2;o=(o-a)/Math.SQRT2,a=n}return Math.max(Math.abs(a),Math.abs(o))-.5*e})}function Dn(r,e,t,i=0){e-=i,t&&(e*=Math.SQRT2);const s=.5*e;return pi(r,(a,o)=>{let n,c=a-.5*r,l=.5*r-o-1;if(t){const h=(c+l)/Math.SQRT2;l=(l-c)/Math.SQRT2,c=h}return c=Math.abs(c),l=Math.abs(l),n=c>l?c>s?Math.sqrt((c-s)*(c-s)+l*l):l:l>s?Math.sqrt(c*c+(l-s)*(l-s)):c,n-=i/2,n})}function In(r,e,t){return(i,s)=>{const a=i-r,o=s-e;return Math.sqrt(a*a+o*o)-t}}function Mn(r,e,t){const i=Math.sqrt(e*e+t*t);return(s,a)=>{const o=Math.abs(s-r)-t,n=a-r+e/2+.75,c=(e*o+t*n)/i,l=-n;return Math.max(c,l)}}function pi(r,e){const t=new Uint8Array(4*r*r);for(let i=0;i<r;i++)for(let s=0;s<r;s++){const a=s+r*i;let o=e(s,i);o=o/r+.5,on(o,t,4*a)}return t}function oh(r){return r instanceof Float32Array&&r.length>=16}function nh(r){return Array.isArray(r)&&r.length>=16}function lh(r){return oh(r)||nh(r)}var Hi;(function(r){r[r.Occluded=0]="Occluded",r[r.NotOccluded=1]="NotOccluded",r[r.Both=2]="Both",r[r.COUNT=3]="COUNT"})(Hi||(Hi={}));var st;function ch(r,e){r.include(Yo),r.attributes.add(d.POSITION,"vec3"),r.attributes.add(d.NORMAL,"vec3"),r.attributes.add(d.AUXPOS1,"vec4");const t=r.vertex;di(r,e),oa(t,e),t.uniforms.add([new We("viewport",(i,s)=>s.camera.fullViewport),new pe("polygonOffset",i=>i.shaderPolygonOffset),new pe("cameraGroundRelative",(i,s)=>s.camera.aboveGround?1:-1),new pe("renderTransparentlyOccludedHUD",(i,s)=>s.renderTransparentlyOccludedHUD===Hi.Occluded?1:s.renderTransparentlyOccludedHUD===Hi.NotOccluded?0:.75),new $r("hudVisibilityTexture",(i,s)=>s.hudVisibilityTexture)]),e.hasVerticalOffset&&fc(t),t.constants.add("smallOffsetAngle","float",.984807753012208),t.code.add(p`struct ProjectHUDAux {
vec3 posModel;
vec3 posView;
vec3 vnormal;
float distanceToCamera;
float absCosAngle;
};`),t.code.add(p`float applyHUDViewDependentPolygonOffset(float pointGroundDistance, float absCosAngle, inout vec3 posView) {
float pointGroundSign = sign(pointGroundDistance);
if (pointGroundSign == 0.0) {
pointGroundSign = cameraGroundRelative;
}
float groundRelative = cameraGroundRelative * pointGroundSign;
if (polygonOffset > .0) {
float cosAlpha = clamp(absCosAngle, 0.01, 1.0);
float tanAlpha = sqrt(1.0 - cosAlpha * cosAlpha) / cosAlpha;
float factor = (1.0 - tanAlpha / viewport[2]);
if (groundRelative > 0.0) {
posView *= factor;
}
else {
posView /= factor;
}
}
return groundRelative;
}`),e.isDraped&&!e.hasVerticalOffset||t.uniforms.add(new ar("viewNormal",(i,s)=>s.camera.viewInverseTransposeMatrix)),e.isDraped||(t.uniforms.add(new pe("perDistancePixelRatio",(i,s)=>Math.tan(s.camera.fovY/2)/(s.camera.fullViewport[2]/2))),t.code.add(p`void applyHUDVerticalGroundOffset(vec3 normalModel, inout vec3 posModel, inout vec3 posView) {
float distanceToCamera = length(posView);
float pixelOffset = distanceToCamera * perDistancePixelRatio * 0.5;
vec3 modelOffset = normalModel * cameraGroundRelative * pixelOffset;
vec3 viewOffset = (viewNormal * vec4(modelOffset, 1.0)).xyz;
posModel += modelOffset;
posView += viewOffset;
}`)),e.screenCenterOffsetUnitsEnabled===st.Screen&&t.uniforms.add(new pe("pixelRatio",(i,s)=>s.camera.pixelRatio)),e.hasScreenSizePerspective&&Qo(t),t.code.add(p`
    vec4 projectPositionHUD(out ProjectHUDAux aux) {
      // centerOffset is in view space and is used to implement world size offsetting
      // of labels with respect to objects. It also pulls the label towards the viewer
      // so that the label is visible in front of the object.
      vec3 centerOffset = auxpos1.xyz;

      // The pointGroundDistance is the distance of the geometry to the ground and is
      // negative if the point is below the ground, or positive if the point is above
      // ground.
      float pointGroundDistance = auxpos1.w;

      aux.posModel = position;
      aux.posView = (view * vec4(aux.posModel, 1.0)).xyz;
      aux.vnormal = normal;
      ${e.isDraped?"":"applyHUDVerticalGroundOffset(aux.vnormal, aux.posModel, aux.posView);"}

      // Screen sized offset in world space, used for example for line callouts
      // Note: keep this implementation in sync with the CPU implementation, see
      //   - MaterialUtil.verticalOffsetAtDistance
      //   - HUDMaterial.applyVerticalOffsetTransformation

      aux.distanceToCamera = length(aux.posView);

      vec3 viewDirObjSpace = normalize(cameraPosition - aux.posModel);
      float cosAngle = dot(aux.vnormal, viewDirObjSpace);

      aux.absCosAngle = abs(cosAngle);

      ${e.hasScreenSizePerspective&&(e.hasVerticalOffset||e.screenCenterOffsetUnitsEnabled===st.Screen)?"vec4 perspectiveFactor = screenSizePerspectiveScaleFactor(aux.absCosAngle, aux.distanceToCamera, screenSizePerspectiveAlignment);":""}

      ${e.hasVerticalOffset?e.hasScreenSizePerspective?"float verticalOffsetScreenHeight = applyScreenSizePerspectiveScaleFactorFloat(verticalOffset.x, perspectiveFactor);":"float verticalOffsetScreenHeight = verticalOffset.x;":""}

      ${e.hasVerticalOffset?p`
            float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * aux.distanceToCamera, verticalOffset.z, verticalOffset.w);
            vec3 modelOffset = aux.vnormal * worldOffset;
            aux.posModel += modelOffset;
            vec3 viewOffset = (viewNormal * vec4(modelOffset, 1.0)).xyz;
            aux.posView += viewOffset;
            // Since we elevate the object, we need to take that into account
            // in the distance to ground
            pointGroundDistance += worldOffset;`:""}

      float groundRelative = applyHUDViewDependentPolygonOffset(pointGroundDistance, aux.absCosAngle, aux.posView);

      ${e.screenCenterOffsetUnitsEnabled!==st.Screen?p`
            // Apply x/y in view space, but z in screen space (i.e. along posView direction)
            aux.posView += vec3(centerOffset.x, centerOffset.y, 0.0);

            // Same material all have same z != 0.0 condition so should not lead to
            // branch fragmentation and will save a normalization if it's not needed
            if (centerOffset.z != 0.0) {
              aux.posView -= normalize(aux.posView) * centerOffset.z;
            }
          `:""}

      vec4 posProj = proj * vec4(aux.posView, 1.0);

      ${e.screenCenterOffsetUnitsEnabled===st.Screen?e.hasScreenSizePerspective?"float centerOffsetY = applyScreenSizePerspectiveScaleFactorFloat(centerOffset.y, perspectiveFactor);":"float centerOffsetY = centerOffset.y;":""}

      ${e.screenCenterOffsetUnitsEnabled===st.Screen?"posProj.xy += vec2(centerOffset.x, centerOffsetY) * pixelRatio * 2.0 / viewport.zw * posProj.w;":""}

      // constant part of polygon offset emulation
      posProj.z -= groundRelative * polygonOffset * posProj.w;
      return posProj;
    }
  `),t.code.add(p`bool testVisibilityHUD(vec4 posProj) {
vec4 posProjCenter = alignToPixelCenter(posProj, viewport.zw);
vec4 occlusionPixel = texture2D(hudVisibilityTexture, .5 + .5 * posProjCenter.xy / posProjCenter.w);
if (renderTransparentlyOccludedHUD > 0.5) {
return occlusionPixel.r * occlusionPixel.g > 0.0 && occlusionPixel.g * renderTransparentlyOccludedHUD < 1.0;
}
return occlusionPixel.r * occlusionPixel.g > 0.0 && occlusionPixel.g == 1.0;
}`)}(function(r){r[r.World=0]="World",r[r.Screen=1]="Screen",r[r.COUNT=2]="COUNT"})(st||(st={}));function dh(r){const e=p`vec4 alignToPixelCenter(vec4 clipCoord, vec2 widthHeight) {
vec2 xy = vec2(0.500123) + 0.5 * clipCoord.xy / clipCoord.w;
vec2 pixelSz = vec2(1.0) / widthHeight;
vec2 ij = (floor(xy * widthHeight) + vec2(0.5)) * pixelSz;
vec2 result = (ij * 2.0 - vec2(1.0)) * clipCoord.w;
return vec4(result, clipCoord.zw);
}`,t=p`vec4 alignToPixelOrigin(vec4 clipCoord, vec2 widthHeight) {
vec2 xy = vec2(0.5) + 0.5 * clipCoord.xy / clipCoord.w;
vec2 pixelSz = vec2(1.0) / widthHeight;
vec2 ij = floor((xy + 0.5 * pixelSz) * widthHeight) * pixelSz;
vec2 result = (ij * 2.0 - vec2(1.0)) * clipCoord.w;
return vec4(result, clipCoord.zw);
}`;r.vertex.code.add(e),r.vertex.code.add(t),r.fragment.code.add(e),r.fragment.code.add(t)}function hh(r){r.include(ei),r.uniforms.add([new $r("geometryDepthTexture",(e,t)=>t.multipassGeometry.linearDepthTexture),new qe("nearFar",(e,t)=>t.camera.nearFar)]),r.code.add(p`bool geometryDepthTest(vec2 pos, float elementDepth) {
float geometryDepth = linearDepthFromTexture(geometryDepthTexture, pos, nearFar);
return (elementDepth < (geometryDepth - 1.0));
}`)}class uh{constructor(){this.enabled=!1}}function ph(r,e){const{vertex:t,fragment:i}=r;e.hasMultipassGeometry&&t.include(hh),e.hasMultipassTerrain&&r.varyings.add("depth","float"),t.code.add(p`
  void main(void) {
    vec4 posProjCenter;
    if (dot(position, position) > 0.0) {
      // Render single point to center of the pixel to avoid subpixel
      // filtering to affect the marker color
      ProjectHUDAux projectAux;
      vec4 posProj = projectPositionHUD(projectAux);
      posProjCenter = alignToPixelCenter(posProj, viewport.zw);

      ${e.hasMultipassGeometry?p`
        // Don't draw vertices behind geometry
        if(geometryDepthTest(.5 + .5 * posProjCenter.xy / posProjCenter.w, projectAux.posView.z)){
          posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);
        }`:""}

      ${e.hasMultipassTerrain?"depth = projectAux.posView.z;":""}
      vec3 vpos = projectAux.posModel;
      if (rejectBySlice(vpos)) {
        // Project out of clip space
        posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);
      }

    } else {
      // Project out of clip space
      posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);
    }

    gl_Position = posProjCenter;
    gl_PointSize = 1.0;
  }
  `),e.hasMultipassTerrain&&i.include(ei),e.hasMultipassTerrain&&i.uniforms.add([new $r("terrainDepthTexture",(s,a)=>a.multipassTerrain.linearDepthTexture),new qe("nearFar",(s,a)=>a.camera.nearFar),new qe("inverseViewport",(s,a)=>a.inverseViewport)]),i.include(aa),i.code.add(p`
  void main() {
    gl_FragColor = vec4(1, 1, 1, 1);
    ${e.hasMultipassTerrain?p`
          vec2 uv = gl_FragCoord.xy * inverseViewport;

          //Read the rgba data from the texture linear depth
          vec4 terrainDepthData = texture2D(terrainDepthTexture, uv);

          float terrainDepth = linearDepthFromFloat(rgba2float(terrainDepthData), nearFar);

          //If HUD vertex is behind terrain and the terrain depth is not the initialize value (e.g. we are not looking at the sky)
          //Mark the HUD vertex as occluded by transparent terrain
          if(depth < terrainDepth && terrainDepthData != vec4(0,0,0,1)){
            gl_FragColor.g = 0.5;
          }`:""}
  }
  `)}function fh(r){const e=new pr,t=r.signedDistanceFieldEnabled;if(e.include(dh),e.include(ch,r),e.include(Nt,r),r.output===O.Occlusion)return e.include(ph,r),e;const{vertex:i,fragment:s}=e;e.include(Yo),s.include(aa),s.include(Xi),e.include(mc,r),e.varyings.add("vcolor","vec4"),e.varyings.add("vtc","vec2"),e.varyings.add("vsize","vec2"),r.binaryHighlightOcclusionEnabled&&e.varyings.add("voccluded","float"),i.uniforms.add([new We("viewport",(l,h)=>h.camera.fullViewport),new qe("screenOffset",(l,h)=>yt($n,2*l.screenOffset[0]*h.camera.pixelRatio,2*l.screenOffset[1]*h.camera.pixelRatio)),new qe("anchorPosition",l=>Bi(l)),new We("materialColor",l=>l.color),new pe("pixelRatio",(l,h)=>h.camera.pixelRatio)]),t&&(i.uniforms.add(new We("outlineColor",l=>l.outlineColor)),s.uniforms.add([new We("outlineColor",l=>Xa(l)?l.outlineColor:qi),new pe("outlineSize",l=>Xa(l)?l.outlineSize:0)])),r.hasScreenSizePerspective&&(gc(i),Qo(i)),(r.debugDrawLabelBorder||r.binaryHighlightOcclusionEnabled)&&e.varyings.add("debugBorderCoords","vec4"),e.attributes.add(d.UV0,"vec2"),e.attributes.add(d.COLOR,"vec4"),e.attributes.add(d.SIZE,"vec2"),e.attributes.add(d.AUXPOS2,"vec4"),i.code.add(p`
    void main(void) {
      ProjectHUDAux projectAux;
      vec4 posProj = projectPositionHUD(projectAux);

      if (rejectBySlice(projectAux.posModel)) {
        // Project outside of clip plane
        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);
        return;
      }
      vec2 inputSize;
      ${r.hasScreenSizePerspective?p`
      inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);
      vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);
         `:p`
      inputSize = size;
      vec2 screenOffsetScaled = screenOffset;`}

      ${r.vvSize?"inputSize *= vvScale(auxpos2).xx;":""}

      vec2 combinedSize = inputSize * pixelRatio;
      vec4 quadOffset = vec4(0.0);

      ${r.occlusionTestEnabled||r.binaryHighlightOcclusionEnabled?"bool visible = testVisibilityHUD(posProj);":""}

      ${r.binaryHighlightOcclusionEnabled?"voccluded = visible ? 0.0 : 1.0;":""}
    `);const a=p`vec2 uv01 = floor(uv0);
vec2 uv = uv0 - uv01;
quadOffset.xy = ((uv01 - anchorPosition) * 2.0 * combinedSize + screenOffsetScaled) / viewport.zw * posProj.w;`,o=r.pixelSnappingEnabled?t?p`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;`:p`posProj += quadOffset;
if (inputSize.x == size.x) {
posProj = alignToPixelOrigin(posProj, viewport.zw);
}`:p`posProj += quadOffset;`;r.vvColor&&i.uniforms.add([new Zo("vvColorColors",l=>l.vvColorColors,Jr),new bi("vvColorValues",l=>l.vvColorValues,Jr)]),i.uniforms.add(new qe("textureCoordinateScaleFactor",l=>x(l.texture)&&x(l.texture.descriptor.textureCoordinateScaleFactor)?l.texture.descriptor.textureCoordinateScaleFactor:fl)),i.code.add(p`
    ${r.occlusionTestEnabled?"if (visible) {":""}
    ${a}
    ${r.vvColor?"vcolor = vvGetColor(auxpos2, vvColorValues, vvColorColors) * materialColor;":"vcolor = color / 255.0 * materialColor;"}

    bool alphaDiscard = vcolor.a < ${p.float(rt)};
    ${t?`alphaDiscard = alphaDiscard && outlineColor.a < ${p.float(rt)};`:""}
    if (alphaDiscard) {
      // "early discard" if both symbol color (= fill) and outline color (if applicable) are transparent
      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
      return;
    } else {
      ${o}
      gl_Position = posProj;
    }

    vtc = uv * textureCoordinateScaleFactor;

    ${r.debugDrawLabelBorder?"debugBorderCoords = vec4(uv01, 1.5 / combinedSize);":""}
    vsize = inputSize;
    ${r.occlusionTestEnabled?p`} else { vtc = vec2(0.0);
      ${r.debugDrawLabelBorder?"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);}":"}"}`:""}
  }
  `),s.uniforms.add(new $r("tex",l=>l.texture));const n=r.debugDrawLabelBorder?p`(isBorder > 0.0 ? 0.0 : ${p.float(Ma)})`:p.float(Ma),c=p`
    ${r.debugDrawLabelBorder?p`
      float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));`:""}

    ${t?p`
      vec4 fillPixelColor = vcolor;

      // Attempt to sample texel centers to avoid that thin cross outlines
      // disappear with large symbol sizes.
      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/7058#issuecomment-603041
      const float txSize = ${p.float(ma)};
      const float texelSize = 1.0 / txSize;
      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel
      vec2 scaleFactor = (vsize - txSize) * texelSize;
      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;

      // Get distance and map it into [-0.5, 0.5]
      float d = rgba2float(texture2D(tex, samplePos)) - 0.5;

      // Distance in output units (i.e. pixels)
      float dist = d * vsize.x;

      // Create smooth transition from the icon into its outline
      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);
      fillPixelColor.a *= fillAlphaFactor;

      if (outlineSize > 0.25) {
        vec4 outlinePixelColor = outlineColor;
        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);

        // Create smooth transition around outline
        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);
        outlinePixelColor.a *= outlineAlphaFactor;

        if (
          outlineAlphaFactor + fillAlphaFactor < ${n} ||
          fillPixelColor.a + outlinePixelColor.a < ${p.float(rt)}
        ) {
          discard;
        }

        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)
        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);
        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +
          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);

        gl_FragColor = vec4(compositeColor, compositeAlpha);
      } else {
        if (fillAlphaFactor < ${n}) {
          discard;
        }

        gl_FragColor = premultiplyAlpha(fillPixelColor);
      }

      // visualize SDF:
      // gl_FragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);
      `:p`
          vec4 texColor = texture2D(tex, vtc, -0.5);
          if (texColor.a < ${n}) {
            discard;
          }
          gl_FragColor = texColor * premultiplyAlpha(vcolor);
          `}

    // Draw debug border with transparency, so that original texels along border are still partially visible
    ${r.debugDrawLabelBorder?p`gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);`:""}
  `;return r.output===O.Alpha&&s.code.add(p`
      void main() {
        ${c}
        gl_FragColor = vec4(gl_FragColor.a);
      }
      `),r.output===O.Color&&s.code.add(p`
    void main() {
      ${c}
      ${r.transparencyPassType===xe.FrontFace?"gl_FragColor.rgb /= gl_FragColor.a;":""}
    }
    `),r.output===O.Highlight&&(e.include(Qi),s.code.add(p`
    void main() {
      ${c}
      ${r.binaryHighlightOcclusionEnabled?p`
          if (voccluded == 1.0) {
            gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);
          } else {
            gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);
          }`:"outputHighlight();"}
    }
    `)),e}function Xa(r){return r.outlineColor[3]>0&&r.outlineSize>0}function Bi(r,e=$n){return r.textureIsSignedDistanceField?mh(r.anchorPosition,r.distanceFieldBoundingBox,e):Lr(e,r.anchorPosition),e}function mh(r,e,t){x(e)?yt(t,r[0]*(e[2]-e[0])+e[0],r[1]*(e[3]-e[1])+e[1]):yt(t,0,0)}const $n=fe(),gh=Object.freeze(Object.defineProperty({__proto__:null,build:fh,calculateAnchorPosForRendering:Bi},Symbol.toStringTag,{value:"Module"}));class fi extends fr{initializeConfiguration(e,t){t.spherical=e.viewingMode===Bt.Global}initializeProgram(e){const t=fi.shader.get().build(this.configuration);return new mr(e.rctx,t,Fr)}_setPipelineState(e){const t=this.configuration,i=e===xe.NONE,s=e===xe.FrontFace,a=this.configuration.hasPolygonOffset&&vh,o=(i||s)&&t.output!==O.Highlight?(t.depthEnabled||t.output===O.Occlusion)&&Mr:null;return at({blending:t.output===O.Color||t.output===O.Alpha||t.output===O.Highlight?i?_h:Zi(e):null,depthTest:{func:kc.LEQUAL},depthWrite:o,colorWrite:vt,polygonOffset:a})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return this.configuration.output===O.Occlusion?Ct.POINTS:Ct.TRIANGLES}}fi.shader=new gr(gh,()=>kt(()=>import("./HUDMaterial.glsl.b11792d0.js"),["assets/HUDMaterial.glsl.b11792d0.js","assets/index.9da382e4.js","assets/index.313b6d72.css","assets/floatRGBA.b2358e75.js","assets/Matrix4Uniform.b7dc351c.js","assets/enums.de935fa5.js","assets/Texture.599541db.js","assets/requestImageUtils.4ea1aefd.js","assets/geometryDataUtils.337d3a34.js","assets/triangle.70405bec.js","assets/vectorStacks.f85d4a03.js","assets/quatf64.ddec7ef6.js","assets/mat4f64.84d5c445.js","assets/lineSegment.901d4e43.js","assets/VertexAttribute.5551e0d8.js","assets/VertexArrayObject.4198c73f.js","assets/VertexElementDescriptor.d386088d.js","assets/BufferView.9de22bcf.js","assets/quat.2f83a288.js","assets/vec3f32.0772c8d8.js","assets/sphere.f1597b20.js","assets/plane.f3b639d8.js","assets/InterleavedLayout.e9290885.js","assets/types.28f12cac.js","assets/triangulationUtils.27ba054b.js","assets/earcut.d30cbec0.js","assets/deduplicate.c1f3fafb.js","assets/NestedMap.21c7ee53.js","assets/Octree.5f16cd20.js","assets/boundedPlane.2500e48f.js","assets/glUtil.345a77b1.js","assets/dehydratedFeatures.98692fb8.js"]));const vh={factor:0,units:-4},_h=ac(gt.ONE,gt.ONE_MINUS_SRC_ALPHA);class ve extends ci{constructor(){super(...arguments),this.output=O.Color,this.screenCenterOffsetUnitsEnabled=st.World,this.transparencyPassType=xe.NONE,this.spherical=!1,this.occlusionTestEnabled=!0,this.signedDistanceFieldEnabled=!1,this.vvSize=!1,this.vvColor=!1,this.hasVerticalOffset=!1,this.hasScreenSizePerspective=!1,this.debugDrawLabelBorder=!1,this.binaryHighlightOcclusionEnabled=!0,this.hasSlicePlane=!1,this.hasPolygonOffset=!1,this.depthEnabled=!0,this.pixelSnappingEnabled=!0,this.isDraped=!1,this.hasMultipassGeometry=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}v([C({count:O.COUNT})],ve.prototype,"output",void 0),v([C({count:st.COUNT})],ve.prototype,"screenCenterOffsetUnitsEnabled",void 0),v([C({count:xe.COUNT})],ve.prototype,"transparencyPassType",void 0),v([C()],ve.prototype,"spherical",void 0),v([C()],ve.prototype,"occlusionTestEnabled",void 0),v([C()],ve.prototype,"signedDistanceFieldEnabled",void 0),v([C()],ve.prototype,"vvSize",void 0),v([C()],ve.prototype,"vvColor",void 0),v([C()],ve.prototype,"hasVerticalOffset",void 0),v([C()],ve.prototype,"hasScreenSizePerspective",void 0),v([C()],ve.prototype,"debugDrawLabelBorder",void 0),v([C()],ve.prototype,"binaryHighlightOcclusionEnabled",void 0),v([C()],ve.prototype,"hasSlicePlane",void 0),v([C()],ve.prototype,"hasPolygonOffset",void 0),v([C()],ve.prototype,"depthEnabled",void 0),v([C()],ve.prototype,"pixelSnappingEnabled",void 0),v([C()],ve.prototype,"isDraped",void 0),v([C()],ve.prototype,"hasMultipassGeometry",void 0),v([C()],ve.prototype,"hasMultipassTerrain",void 0),v([C()],ve.prototype,"cullAboveGround",void 0),v([C({constValue:!0})],ve.prototype,"hasSliceInVertexProgram",void 0),v([C({constValue:!1})],ve.prototype,"hasVvInstancing",void 0);class _f extends hi{constructor(e){super(e,new bh),this.techniqueConfig=new ve}getConfiguration(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.hasSlicePlane=this.parameters.hasSlicePlane,this.techniqueConfig.hasVerticalOffset=!!this.parameters.verticalOffset,this.techniqueConfig.hasScreenSizePerspective=!!this.parameters.screenSizePerspective,this.techniqueConfig.screenCenterOffsetUnitsEnabled=this.parameters.centerOffsetUnits==="screen"?st.Screen:st.World,this.techniqueConfig.hasPolygonOffset=this.parameters.polygonOffset,this.techniqueConfig.isDraped=this.parameters.isDraped,this.techniqueConfig.occlusionTestEnabled=this.parameters.occlusionTest,this.techniqueConfig.pixelSnappingEnabled=this.parameters.pixelSnappingEnabled,this.techniqueConfig.signedDistanceFieldEnabled=this.parameters.textureIsSignedDistanceField,this.techniqueConfig.vvSize=!!this.parameters.vvSizeEnabled,this.techniqueConfig.vvColor=!!this.parameters.vvColorEnabled,e===O.Color&&(this.techniqueConfig.debugDrawLabelBorder=!!this.parameters.debugDrawLabelBorder),e===O.Highlight&&(this.techniqueConfig.binaryHighlightOcclusionEnabled=this.parameters.binaryHighlightOcclusion),this.techniqueConfig.depthEnabled=this.parameters.depthEnabled,this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.hasMultipassGeometry=t.multipassGeometry.enabled,this.techniqueConfig.hasMultipassTerrain=t.multipassTerrain.enabled,this.techniqueConfig.cullAboveGround=t.multipassTerrain.cullAboveGround,this.techniqueConfig}intersect(e,t,i,s,a,o,n,c,l){x(l)?this._intersectDrapedHudGeometry(e,o,n,c,l):this._intersectHudGeometry(e,t,i,s,n,c)}_intersectDrapedHudGeometry(e,t,i,s,a){const o=e.vertexAttributes.get(d.POSITION),n=e.vertexAttributes.get(d.SIZE),c=this.parameters,l=Bi(c);let h=1,u=1;if(x(s)){const S=s(Qa);h=S[0],u=S[5]}h*=e.screenToWorldRatio,u*=e.screenToWorldRatio;const f=Rh*e.screenToWorldRatio;for(let S=0;S<o.data.length/o.size;S++){const w=S*o.size,b=o.data[w],U=o.data[w+1],R=S*n.size;let E;Dt[0]=n.data[R]*h,Dt[1]=n.data[R+1]*u,c.textureIsSignedDistanceField&&(E=c.outlineSize*e.screenToWorldRatio/2),Ja(t,b,U,Dt,f,E,c,l)&&i(a.dist,a.normal,-1,!1)}}_intersectHudGeometry(e,t,i,s,a,o){if(!s.options.selectionMode||!s.options.hud||Ji(t))return;const n=this.parameters;let c=1,l=1;if(Sa(Ts,i),x(o)){const E=o(Qa);c=E[0],l=E[5],Th(Ts)}const h=e.vertexAttributes.get(d.POSITION),u=e.vertexAttributes.get(d.SIZE),f=e.vertexAttributes.get(d.NORMAL),S=e.vertexAttributes.get(d.AUXPOS1);Ee(h.size>=3);const w=s.point,b=s.camera,U=Bi(n);c*=b.pixelRatio,l*=b.pixelRatio;const R=this.parameters.centerOffsetUnits==="screen";for(let E=0;E<h.data.length/h.size;E++){const y=E*h.size;ae(Ie,h.data[y],h.data[y+1],h.data[y+2]),ue(Ie,Ie,i);const _=E*u.size;Dt[0]=u.data[_]*c,Dt[1]=u.data[_+1]*l,ue(Ie,Ie,b.viewMatrix);const m=E*S.size;if(ae(Je,S.data[m+0],S.data[m+1],S.data[m+2]),!R&&(Ie[0]+=Je[0],Ie[1]+=Je[1],Je[2]!==0)){const A=Je[2];Oe(Je,Ie),Te(Ie,Ie,ce(Je,Je,A))}const g=E*f.size;if(ae(jr,f.data[g],f.data[g+1],f.data[g+2]),this._normalAndViewAngle(jr,Ts,b,xs),this._applyVerticalOffsetTransformationView(Ie,xs,b,Ss),b.applyProjection(Ie,Ne),Ne[0]>-1){Ne[0]=Math.floor(Ne[0]),Ne[1]=Math.floor(Ne[1]),R&&(Je[0]||Je[1])&&(Ne[0]+=Je[0],Je[1]!==0&&(Ne[1]+=vc(Je[1],Ss.factorAlignment)),b.unapplyProjection(Ne,Ie)),Ne[0]+=this.parameters.screenOffset[0],Ne[1]+=this.parameters.screenOffset[1],_c(Dt,Ss.factor,Dt);const A=Ch*b.pixelRatio;let P;if(n.textureIsSignedDistanceField&&(P=n.outlineSize*b.pixelRatio/2),Ja(w,Ne[0],Ne[1],Dt,A,P,n,U)){const D=s.ray;if(ue(Ya,Ie,Pr(Oh,b.viewMatrix)),Ne[0]=w[0],Ne[1]=w[1],b.unprojectFromRenderScreen(Ne,Ie)){const $=j();te($,D.direction);const T=1/wt($);ce($,$,T),a(Rt(D.origin,Ie)*T,$,-1,!0,1,Ya)}}}}}computeAttachmentOrigin(e,t){const i=e.vertexAttributes;if(!i)return!1;const s=i.get(d.POSITION),a=e.indices.get(d.POSITION);return Gc(s,a,t)}createBufferWriter(){return new Eh(this)}_normalAndViewAngle(e,t,i,s){return lh(t)&&(t=Sa(wh,t)),ml(s.normal,e,t),ue(s.normal,s.normal,i.viewInverseTransposeMatrix),s.cosAngle=At(Fn,Ah),s}_updateScaleInfo(e,t,i){const s=this.parameters;x(s.screenSizePerspective)?$a(i,t,s.screenSizePerspective,e.factor):(e.factor.scale=1,e.factor.factor=0,e.factor.minPixelSize=0,e.factor.paddingPixels=0),x(s.screenSizePerspectiveAlignment)?$a(i,t,s.screenSizePerspectiveAlignment,e.factorAlignment):(e.factorAlignment.factor=e.factor.factor,e.factorAlignment.scale=e.factor.scale,e.factorAlignment.minPixelSize=e.factor.minPixelSize,e.factorAlignment.paddingPixels=e.factor.paddingPixels)}applyShaderOffsetsView(e,t,i,s,a,o,n){const c=this._normalAndViewAngle(t,i,a,xs);return this._applyVerticalGroundOffsetView(e,c,a,n),this._applyVerticalOffsetTransformationView(n,c,a,o),this._applyPolygonOffsetView(n,c,s[3],a,n),this._applyCenterOffsetView(n,s,n),n}applyShaderOffsetsNDC(e,t,i,s,a){return this._applyCenterOffsetNDC(e,t,i,s),x(a)&&te(a,s),this._applyPolygonOffsetNDC(s,t,i,s),s}_applyPolygonOffsetView(e,t,i,s,a){const o=s.aboveGround?1:-1;let n=Math.sign(i);n===0&&(n=o);const c=o*n;if(this.parameters.shaderPolygonOffset<=0)return te(a,e);const l=jt(Math.abs(t.cosAngle),.01,1),h=1-Math.sqrt(1-l*l)/l/s.viewport[2];return ce(a,e,c>0?h:1/h),a}_applyVerticalGroundOffsetView(e,t,i,s){const a=wt(e),o=i.aboveGround?1:-1,n=.5*i.computeRenderPixelSizeAtDist(a),c=ce(Ie,t.normal,o*n);return _e(s,e,c),s}_applyVerticalOffsetTransformationView(e,t,i,s){const a=this.parameters;if(!a.verticalOffset||!a.verticalOffset.screenLength){if(a.screenSizePerspective||a.screenSizePerspectiveAlignment){const l=wt(e);this._updateScaleInfo(s,l,t.cosAngle)}else s.factor.scale=1,s.factorAlignment.scale=1;return e}const o=wt(e),n=ne(a.screenSizePerspectiveAlignment,a.screenSizePerspective),c=yc(i,o,a.verticalOffset,t.cosAngle,n);return this._updateScaleInfo(s,o,t.cosAngle),ce(t.normal,t.normal,c),_e(e,e,t.normal)}_applyCenterOffsetView(e,t,i){const s=this.parameters.centerOffsetUnits!=="screen";return i!==e&&te(i,e),s&&(i[0]+=t[0],i[1]+=t[1],t[2]&&(Oe(jr,i),_e(i,i,ce(jr,jr,t[2])))),i}_applyCenterOffsetNDC(e,t,i,s){const a=this.parameters.centerOffsetUnits!=="screen";return s!==e&&te(s,e),a||(s[0]+=t[0]/i.fullWidth*2,s[1]+=t[1]/i.fullHeight*2),s}_applyPolygonOffsetNDC(e,t,i,s){const a=this.parameters.shaderPolygonOffset;if(e!==s&&te(s,e),a){const o=i.aboveGround?1:-1,n=o*Math.sign(t[3]);s[2]-=(n||o)*a}return s}requiresSlot(e){if(e===se.DRAPED_MATERIAL)return!0;const{drawInSecondSlot:t,occlusionTest:i}=this.parameters;return e===(t?se.LABEL_MATERIAL:se.HUD_MATERIAL)||i&&e===se.OCCLUSION_PIXELS}createGLMaterial(e){return e.output===O.Color||e.output===O.Alpha?new yh(e):e.output===O.Highlight?new Ln(e):null}calculateRelativeScreenBounds(e,t,i=br()){return Sh(this.parameters,e,t,i),i[2]=i[0]+e[0],i[3]=i[1]+e[1],i}}class Ln extends Sc{constructor(e){super({...e,...e.material.parameters})}selectProgram(e){return this.ensureTechnique(fi,e)}beginSlot(e){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.selectProgram(e)}}class yh extends Ln{_isOcclusionSlot(e){return e.slot===se.OCCLUSION_PIXELS&&this._material.parameters.occlusionTest&&(this._output===O.Color||this._output===O.Alpha)}selectProgram(e){return this.ensureTechnique(fi,e,this._isOcclusionSlot(e)?O.Occlusion:this._output)}}function Sh(r,e,t,i=xh){return Lr(i,r.anchorPosition),i[0]*=-e[0],i[1]*=-e[1],i[0]+=r.screenOffset[0]*t,i[1]+=r.screenOffset[1]*t,i}function Th(r){const e=r[0],t=r[1],i=r[2],s=r[3],a=r[4],o=r[5],n=r[6],c=r[7],l=r[8],h=1/Math.sqrt(e*e+t*t+i*i),u=1/Math.sqrt(s*s+a*a+o*o),f=1/Math.sqrt(n*n+c*c+l*l);return r[0]=e*h,r[1]=t*h,r[2]=i*h,r[3]=s*u,r[4]=a*u,r[5]=o*u,r[6]=n*f,r[7]=c*f,r[8]=l*f,r}function Ja(r,e,t,i,s,a,o,n){let c=e-s-(n[0]>0?i[0]*n[0]:0),l=c+i[0]+2*s,h=t-s-(n[1]>0?i[1]*n[1]:0),u=h+i[1]+2*s;const f=o.distanceFieldBoundingBox;return o.textureIsSignedDistanceField&&x(f)&&(c+=i[0]*f[0],h+=i[1]*f[1],l-=i[0]*(1-f[2]),u-=i[1]*(1-f[3]),c-=a,l+=a,h-=a,u+=a),r[0]>c&&r[0]<l&&r[1]>h&&r[1]<u}const Ss={factor:{scale:0,factor:0,minPixelSize:0,paddingPixels:0},factorAlignment:{scale:0,factor:0,minPixelSize:0,paddingPixels:0}},xh=fe(),Ie=j(),jr=j(),Ne=ot(),Fn=j(),Ya=j(),Ts=ua(),wh=ua(),Oh=le(),Je=j(),xs={normal:Fn,cosAngle:0},Qa=le(),Ch=1,Rh=2,Dt=[0,0],Ah=Ir(0,0,1);class bh extends Tc{constructor(){super(...arguments),this.renderOccluded=Ht.Occlude,this.color=[1,1,1,1],this.texCoordScale=[1,1],this.polygonOffset=!1,this.anchorPosition=ea(.5,.5),this.screenOffset=[0,0],this.shaderPolygonOffset=1e-5,this.textureIsSignedDistanceField=!1,this.outlineColor=[1,1,1,1],this.outlineSize=0,this.vvSizeEnabled=!1,this.vvSizeMinSize=[1,1,1],this.vvSizeMaxSize=[100,100,100],this.vvSizeOffset=[0,0,0],this.vvSizeFactor=[1,1,1],this.vvColorEnabled=!1,this.vvColorValues=[0,0,0,0,0,0,0,0],this.vvColorColors=[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],this.hasSlicePlane=!1,this.pixelSnappingEnabled=!0,this.occlusionTest=!0,this.binaryHighlightOcclusion=!0,this.debugDrawLabelBorder=!1,this.centerOffsetUnits="world",this.drawInSecondSlot=!1,this.depthEnabled=!0,this.isDraped=!1}}const Ph=ui().vec3f(d.POSITION).vec3f(d.NORMAL).vec2f(d.UV0).vec4u8(d.COLOR).vec2f(d.SIZE).vec4f(d.AUXPOS1).vec4f(d.AUXPOS2);class Eh{constructor(e){this.material=e,this.vertexBufferLayout=Ph}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return 6*e.indices.get(d.POSITION).length}write(e,t,i,s){xc(t.indices.get(d.POSITION),t.vertexAttributes.get(d.POSITION).data,e.transformation,i.position,s,6),wc(t.indices.get(d.NORMAL),t.vertexAttributes.get(d.NORMAL).data,e.invTranspTransformation,i.normal,s,6);{const a=t.vertexAttributes.get(d.UV0).data;let o,n,c,l;if(a==null||a.length<4){const S=this.material.parameters;o=0,n=0,c=S.texCoordScale[0],l=S.texCoordScale[1]}else o=a[0],n=a[1],c=a[2],l=a[3];c=Math.min(1.99999,c+1),l=Math.min(1.99999,l+1);const h=t.indices.get(d.POSITION).length,u=i.uv0;let f=s;for(let S=0;S<h;++S)u.set(f,0,o),u.set(f,1,n),f+=1,u.set(f,0,c),u.set(f,1,n),f+=1,u.set(f,0,c),u.set(f,1,l),f+=1,u.set(f,0,c),u.set(f,1,l),f+=1,u.set(f,0,o),u.set(f,1,l),f+=1,u.set(f,0,o),u.set(f,1,n),f+=1}Oc(t.indices.get(d.COLOR),t.vertexAttributes.get(d.COLOR).data,4,i.color,s,6);{const a=t.indices.get(d.SIZE),o=t.vertexAttributes.get(d.SIZE).data,n=a.length,c=i.size;let l=s;for(let h=0;h<n;++h){const u=o[2*a[h]],f=o[2*a[h]+1];for(let S=0;S<6;++S)c.set(l,0,u),c.set(l,1,f),l+=1}}t.indices.get(d.AUXPOS1)&&t.vertexAttributes.get(d.AUXPOS1)&&La(t.indices.get(d.AUXPOS1),t.vertexAttributes.get(d.AUXPOS1).data,i.auxpos1,s,6),t.indices.get(d.AUXPOS2)&&t.vertexAttributes.get(d.AUXPOS2)&&La(t.indices.get(d.AUXPOS2),t.vertexAttributes.get(d.AUXPOS2).data,i.auxpos2,s,6)}}const Dh=ui().vec3f(d.POSITION),Ih=ui().vec3f(d.POSITION).vec2f(d.UV0),Nn=ui().vec3f(d.POSITION).vec4u8(d.COLOR);class ga{constructor(e){this.vertexBufferLayout=e}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get(d.POSITION).length}write(e,t,i,s){Ko(t,this.vertexBufferLayout,e.transformation,e.invTranspTransformation,i,s)}}function Mh(r){const e=new pr,t=r.output===O.Depth,i=r.hasMultipassTerrain&&(r.output===O.Color||r.output===O.Alpha);di(e,r),e.include(ca,{hasModelTransformation:!1,linearDepth:t}),e.include(en,r),e.attributes.add(d.POSITION,"vec3"),e.varyings.add("vpos","vec3"),i&&e.varyings.add("depth","float");const{vertex:s,fragment:a}=e;return t&&(e.include(Xo,r),s.uniforms.add(new qe("nearFar",(o,n)=>n.camera.nearFar)),e.varyings.add("linearDepth","float")),s.code.add(p`
    void main(void) {
      vpos = position;
      forwardNormalizedVertexColor();
      ${i?"depth = (view * vec4(vpos, 1.0)).z;":""}
      gl_Position = ${t?p`transformPositionWithDepth(proj, view, vpos, nearFar, linearDepth);`:p`transformPosition(proj, view, vpos);`}
    }
  `),e.include(Nt,r),i&&e.include(na,r),a.include(Xi),a.uniforms.add(new We("eColor",o=>o.color)),r.output===O.Highlight&&e.include(Qi),a.code.add(p`
  void main() {
    discardBySlice(vpos);
    ${i?"terrainDepthTest(gl_FragCoord, depth);":""}
    vec4 fColor = ${r.hasVertexColors?"vColor * eColor;":"eColor;"}

    if (fColor.a < ${p.float(rt)}) {
      discard;
    }

    ${r.output===O.Alpha?p`gl_FragColor = vec4(fColor.a);`:""}

    ${r.output===O.Color?p`gl_FragColor = highlightSlice(fColor, vpos); ${r.transparencyPassType===xe.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}`:""}
    ${r.output===O.Highlight?p`outputHighlight();`:""};
    ${r.output===O.Depth?p`outputDepth(linearDepth);`:""};
  }
  `),e}const $h=Object.freeze(Object.defineProperty({__proto__:null,build:Mh},Symbol.toStringTag,{value:"Module"}));class ts extends fr{initializeProgram(e){const t=ts.shader.get().build(this.configuration);return new mr(e.rctx,t,Fr)}_createPipeline(e,t){const i=this.configuration,s=e===xe.NONE,a=e===xe.FrontFace;return at({blending:i.output!==O.Color&&i.output!==O.Alpha||!i.transparent?null:s?Xr:Zi(e),culling:oc(i.cullFace),depthTest:{func:ia(e)},depthWrite:s||a?i.writeDepth&&Mr:null,colorWrite:vt,stencilWrite:i.hasOccludees?Fi:null,stencilTest:i.hasOccludees?t?Ni:la:null,polygonOffset:s||a?i.polygonOffset&&Lh:Bo(i.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._createPipeline(this.configuration.transparencyPassType,!0),this._createPipeline(this.configuration.transparencyPassType,!1)}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}ts.shader=new gr($h,()=>kt(()=>import("./ColorMaterial.glsl.1d46537c.js"),["assets/ColorMaterial.glsl.1d46537c.js","assets/Matrix4Uniform.b7dc351c.js","assets/index.9da382e4.js","assets/index.313b6d72.css","assets/enums.de935fa5.js","assets/Texture.599541db.js","assets/requestImageUtils.4ea1aefd.js","assets/geometryDataUtils.337d3a34.js","assets/triangle.70405bec.js","assets/vectorStacks.f85d4a03.js","assets/quatf64.ddec7ef6.js","assets/mat4f64.84d5c445.js","assets/lineSegment.901d4e43.js","assets/VertexAttribute.5551e0d8.js","assets/VertexArrayObject.4198c73f.js","assets/VertexElementDescriptor.d386088d.js","assets/BufferView.9de22bcf.js","assets/quat.2f83a288.js","assets/vec3f32.0772c8d8.js","assets/sphere.f1597b20.js","assets/plane.f3b639d8.js","assets/InterleavedLayout.e9290885.js","assets/types.28f12cac.js","assets/floatRGBA.b2358e75.js","assets/triangulationUtils.27ba054b.js","assets/earcut.d30cbec0.js","assets/deduplicate.c1f3fafb.js","assets/NestedMap.21c7ee53.js","assets/Octree.5f16cd20.js","assets/boundedPlane.2500e48f.js","assets/glUtil.345a77b1.js","assets/dehydratedFeatures.98692fb8.js"]));const Lh={factor:1,units:1};class Qe extends ci{constructor(){super(...arguments),this.output=O.Color,this.cullFace=sa.None,this.hasSlicePlane=!1,this.hasVertexColors=!1,this.transparent=!1,this.polygonOffset=!1,this.enableOffset=!0,this.writeDepth=!0,this.hasOccludees=!1,this.transparencyPassType=xe.NONE,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}v([C({count:O.COUNT})],Qe.prototype,"output",void 0),v([C({count:sa.COUNT})],Qe.prototype,"cullFace",void 0),v([C()],Qe.prototype,"hasSlicePlane",void 0),v([C()],Qe.prototype,"hasVertexColors",void 0),v([C()],Qe.prototype,"transparent",void 0),v([C()],Qe.prototype,"polygonOffset",void 0),v([C()],Qe.prototype,"enableOffset",void 0),v([C()],Qe.prototype,"writeDepth",void 0),v([C()],Qe.prototype,"hasOccludees",void 0),v([C({count:xe.COUNT})],Qe.prototype,"transparencyPassType",void 0),v([C()],Qe.prototype,"hasMultipassTerrain",void 0),v([C()],Qe.prototype,"cullAboveGround",void 0);class yf extends hi{constructor(e){super(e,new Nh),this.supportsEdges=!0,this._configuration=new Qe}getConfiguration(e,t){return this._configuration.output=e,this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasVertexColors=this.parameters.hasVertexColors,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.enableOffset=t.camera.relativeElevation<Go,this._configuration.hasMultipassTerrain=t.multipassTerrain.enabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration}intersect(e,t,i,s,a,o,n){tn(e,t,s,a,o,void 0,n)}requiresSlot(e,t){return e===se.DRAPED_MATERIAL?!0:ri(t)===O.Highlight?e===se.OPAQUE_MATERIAL:e===(this.parameters.transparent?this.parameters.writeDepth?se.TRANSPARENT_MATERIAL:se.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:se.OPAQUE_MATERIAL)}createGLMaterial(e){return e.output===O.Color||e.output===O.Alpha||e.output===O.Highlight||e.output===O.Depth&&this.parameters.writeLinearDepth?new Fh(e):null}createBufferWriter(){return new ga(Nn)}}class Fh extends Yi{_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){return this._output!==O.Color&&this._output!==O.Alpha||this._updateOccludeeState(e),this.ensureTechnique(ts,e)}}class Nh extends da{constructor(){super(...arguments),this.color=qi,this.transparent=!1,this.writeDepth=!0,this.writeLinearDepth=!1,this.hasVertexColors=!1,this.polygonOffset=!1,this.hasSlicePlane=!1,this.cullFace=sa.None,this.hasOccludees=!1}}const Me={dash:[4,3],dot:[1,3],"long-dash":[8,3],"short-dash":[4,1],"short-dot":[1,1]},zh={dash:Me.dash,"dash-dot":[...Me.dash,...Me.dot],dot:Me.dot,"long-dash":Me["long-dash"],"long-dash-dot":[...Me["long-dash"],...Me.dot],"long-dash-dot-dot":[...Me["long-dash"],...Me.dot,...Me.dot],none:null,"short-dash":Me["short-dash"],"short-dash-dot":[...Me["short-dash"],...Me["short-dot"]],"short-dash-dot-dot":[...Me["short-dash"],...Me["short-dot"],...Me["short-dot"]],"short-dot":Me["short-dot"],solid:null},Uh=8;function Vh(r,e=2){return K(r)?r:{pattern:r.slice(),pixelRatio:e}}function Sf(r,e=2){return{pattern:[r,r],pixelRatio:e}}function Tf(r){return x(r)&&r.type==="style"?jh(r.style):null}function jh(r){return x(r)?Vh(zh[r],Uh):null}var Qr,Zs;(function(r){r[r.RasterImage=0]="RasterImage",r[r.Features=1]="Features"})(Qr||(Qr={})),function(r){r[r.WithRasterImage=0]="WithRasterImage",r[r.WithoutRasterImage=1]="WithoutRasterImage"}(Zs||(Zs={}));var et;(function(r){var e,t;(e=r.Geometry||(r.Geometry={}))[e.ADD=1]="ADD",e[e.UPDATE=2]="UPDATE",e[e.REMOVE=4]="REMOVE",(t=r.State||(r.State={}))[t.VISIBILITIES=1]="VISIBILITIES",t[t.VERTEXATTRS=2]="VERTEXATTRS",t[t.TRANSFORMATION=4]="TRANSFORMATION",t[t.HIGHLIGHTS=8]="HIGHLIGHTS",t[t.OCCLUDEES=16]="OCCLUDEES"})(et||(et={}));const xf=1.2,wf=qi,Hh=ki;let me=class extends ta{constructor(){super(...arguments),this.SCENEVIEW_HITTEST_RETURN_INTERSECTOR=!1,this.DECONFLICTOR_SHOW_VISIBLE=!1,this.DECONFLICTOR_SHOW_INVISIBLE=!1,this.DECONFLICTOR_SHOW_GRID=!1,this.LABELS_SHOW_BORDER=!1,this.TEXT_SHOW_BASELINE=!1,this.TEXT_SHOW_BORDER=!1,this.OVERLAY_DRAW_DEBUG_TEXTURE=!1,this.OVERLAY_SHOW_CENTER=!1,this.SHOW_POI=!1,this.TESTS_DISABLE_OPTIMIZATIONS=!1,this.TESTS_DISABLE_FAST_UPDATES=!1,this.DRAW_MESH_GEOMETRY_NORMALS=!1,this.FEATURE_TILE_FETCH_SHOW_TILES=!1,this.FEATURE_TILE_TREE_SHOW_TILES=!1,this.TERRAIN_TILE_TREE_SHOW_TILES=!1,this.I3S_TREE_SHOW_TILES=!1,this.I3S_SHOW_MODIFICATIONS=!1,this.LOD_INSTANCE_RENDERER_DISABLE_UPDATES=!1,this.LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL=!1,this.EDGES_SHOW_HIDDEN_TRANSPARENT_EDGES=!1,this.LINE_WIREFRAMES=!1}};v([ie()],me.prototype,"SCENEVIEW_HITTEST_RETURN_INTERSECTOR",void 0),v([ie()],me.prototype,"DECONFLICTOR_SHOW_VISIBLE",void 0),v([ie()],me.prototype,"DECONFLICTOR_SHOW_INVISIBLE",void 0),v([ie()],me.prototype,"DECONFLICTOR_SHOW_GRID",void 0),v([ie()],me.prototype,"LABELS_SHOW_BORDER",void 0),v([ie()],me.prototype,"TEXT_SHOW_BASELINE",void 0),v([ie()],me.prototype,"TEXT_SHOW_BORDER",void 0),v([ie()],me.prototype,"OVERLAY_DRAW_DEBUG_TEXTURE",void 0),v([ie()],me.prototype,"OVERLAY_SHOW_CENTER",void 0),v([ie()],me.prototype,"SHOW_POI",void 0),v([ie()],me.prototype,"TESTS_DISABLE_OPTIMIZATIONS",void 0),v([ie()],me.prototype,"TESTS_DISABLE_FAST_UPDATES",void 0),v([ie()],me.prototype,"DRAW_MESH_GEOMETRY_NORMALS",void 0),v([ie()],me.prototype,"FEATURE_TILE_FETCH_SHOW_TILES",void 0),v([ie()],me.prototype,"FEATURE_TILE_TREE_SHOW_TILES",void 0),v([ie()],me.prototype,"TERRAIN_TILE_TREE_SHOW_TILES",void 0),v([ie()],me.prototype,"I3S_TREE_SHOW_TILES",void 0),v([ie()],me.prototype,"I3S_SHOW_MODIFICATIONS",void 0),v([ie()],me.prototype,"LOD_INSTANCE_RENDERER_DISABLE_UPDATES",void 0),v([ie()],me.prototype,"LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL",void 0),v([ie()],me.prototype,"EDGES_SHOW_HIDDEN_TRANSPARENT_EDGES",void 0),v([ie()],me.prototype,"LINE_WIREFRAMES",void 0),me=v([ra("esri.views.3d.support.DebugFlags")],me);const Ka=new me;class Bh{constructor(e,t){this.vec3=e,this.id=t}}function Di(r,e,t,i){return new Bh(Ir(r,e,t),i)}var Kr;(function(r){r[r.None=0]="None",r[r.ColorAndWater=1]="ColorAndWater",r[r.Highlight=2]="Highlight",r[r.Occluded=3]="Occluded"})(Kr||(Kr={}));class eo{constructor(e,t){this.index=e,this.renderTargets=t,this._extent=br(),this.resolution=0,this.renderLocalOrigin=Di(0,0,0,"O"),this.pixelRatio=1,this.mapUnitsPerPixel=1,this.canvasGeometries=new Gh,this.validTargets=null,this.hasDrapedFeatureSource=!1,this.hasDrapedRasterSource=!1,this.hasTargetWithoutRasterImage=!1,this.index=e,this.validTargets=new Array(t.renderTargets.length).fill(!1)}get extent(){return this._extent}getValidTexture(e){return this.validTargets[e]?this.renderTargets.getTarget(e).getTexture():null}get _needsColorWithoutRasterImage(){return this.hasDrapedRasterSource&&this.hasDrapedFeatureSource&&this.hasTargetWithoutRasterImage}getColorTexture(e){const t=e===Kr.ColorAndWater?this.renderTargets.getTarget(Pe.Color):e===Kr.Highlight?this.renderTargets.getTarget(Pe.Highlight):this.renderTargets.getTarget(Pe.Occluded);return t?t.getTexture():null}getColorTextureNoRasterImage(){return this._needsColorWithoutRasterImage?this.getValidTexture(Pe.ColorNoRasterImage):this.hasDrapedFeatureSource?this.getValidTexture(Pe.Color):null}getNormalTexture(e){const t=e===Kr.ColorAndWater?this.renderTargets.getTarget(Pe.Water):null;return t?t.getTexture():null}draw(e,t){const i=this.computeRenderTargetValidityBitfield();for(const s of this.renderTargets.renderTargets)s.type!==Pe.ColorNoRasterImage||this._needsColorWithoutRasterImage?this.validTargets[s.type]=e.drawTarget(this,s,t):this.validTargets[s.type]=!1;return i^this.computeRenderTargetValidityBitfield()?Da.CHANGED:Da.UNCHANGED}computeRenderTargetValidityBitfield(){const e=this.validTargets;return+e[Pe.Color]|+e[Pe.ColorNoRasterImage]<<1|+e[Pe.Highlight]<<2|+e[Pe.Water]<<3|+e[Pe.Occluded]<<4}setupGeometryViewsCyclical(e){this.setupGeometryViewsDirect();const t=.001*e.range;if(this._extent[0]-t<=e.min){const i=this.canvasGeometries.extents[this.canvasGeometries.numViews++];Ta(this._extent,e.range,0,i)}if(this._extent[2]+t>=e.max){const i=this.canvasGeometries.extents[this.canvasGeometries.numViews++];Ta(this._extent,-e.range,0,i)}}setupGeometryViewsDirect(){this.canvasGeometries.numViews=1,gl(this.canvasGeometries.extents[0],this._extent)}hasSomeSizedView(){for(let e=0;e<this.canvasGeometries.numViews;e++){const t=this.canvasGeometries.extents[e];if(t[0]!==t[2]&&t[1]!==t[3])return!0}return!1}applyViewport(e){e.setViewport(this.index===Ai.INNER?0:this.resolution,0,this.resolution,this.resolution)}}class Gh{constructor(){this.extents=[br(),br(),br()],this.numViews=0}}class zn{constructor(e,t){this.size=vl(),this._fbo=null,this._fbo=new Yr(e,{colorTarget:pa.TEXTURE,depthStencilTarget:fa.NONE},{target:or.TEXTURE_2D,pixelFormat:Gt.RGBA,dataType:hr.UNSIGNED_BYTE,wrapMode:dr.CLAMP_TO_EDGE,samplingMode:ti.LINEAR_MIPMAP_LINEAR,hasMipmap:t,maxAnisotropy:8,width:0,height:0})}dispose(){this._fbo=Fe(this._fbo)}getTexture(){return this._fbo?this._fbo.colorTexture:null}isValid(){return this._fbo!==null}resize(e,t){this.size[0]=e,this.size[1]=t,this._fbo.resize(this.size[0],this.size[1])}bind(e){e.bindFramebuffer(this._fbo)}generateMipMap(){this._fbo.colorTexture.descriptor.hasMipmap&&this._fbo.colorTexture.generateMipmap()}disposeRenderTargetMemory(){var e;(e=this._fbo)==null||e.resize(0,0)}get gpuMemoryUsage(){var e,t;return(t=(e=this._fbo)==null?void 0:e.gpuMemoryUsage)!=null?t:0}}class Wh{constructor(e){const t=(i,s,a=!0)=>({type:s,fbo:new zn(e,a),renderPass:i,valid:!1,lastUsed:1/0});this.renderTargets=[t(ye.MATERIAL,Pe.Color),t(ye.MATERIAL,Pe.ColorNoRasterImage),t(ye.MATERIAL_HIGHLIGHT,Pe.Highlight,!1),t(ye.MATERIAL_NORMAL,Pe.Water),t(ye.MATERIAL,Pe.Occluded)]}getTarget(e){return this.renderTargets[e].fbo}dispose(){for(const e of this.renderTargets)e.fbo.dispose()}disposeRenderTargetMemory(){for(const e of this.renderTargets)e.fbo.disposeRenderTargetMemory()}validateUsageForTarget(e,t,i){if(e)t.lastUsed=i;else if(i-t.lastUsed>qh)t.fbo.disposeRenderTargetMemory(),t.lastUsed=1/0;else if(t.lastUsed<1/0)return!0;return!1}get gpuMemoryUsage(){return this.renderTargets.reduce((e,t)=>e+t.fbo.gpuMemoryUsage,0)}}const qh=1e3;class kh{constructor(e){this._context=e,this._perConstructorInstances=new ln,this._frameCounter=0,this._keepAliveFrameCount=to}get viewingMode(){return this._context.viewingMode}get constructionContext(){return this._context}dispose(){this._perConstructorInstances.forEach(e=>e.forEach(t=>t.technique.destroy())),this._perConstructorInstances.clear()}acquire(e,t){const i=t.key;let s=this._perConstructorInstances.get(e,i);if(K(s)){const a=new e(this._context,t,()=>this.release(a));s=new Zh(a),this._perConstructorInstances.set(e,i,s)}return++s.refCount,s.technique}releaseAndAcquire(e,t,i){if(x(i)){if(t.key===i.key)return i;this.release(i)}return this.acquire(e,t)}release(e){if(K(e)||this._perConstructorInstances.empty)return;const t=this._perConstructorInstances.get(e.constructor,e.key);K(t)||(--t.refCount,t.refCount===0&&(t.refZeroFrame=this._frameCounter))}frameUpdate(){this._frameCounter++,this._keepAliveFrameCount!==to&&this._perConstructorInstances.forEach((e,t)=>{e.forEach((i,s)=>{i.refCount===0&&i.refZeroFrame+this._keepAliveFrameCount<this._frameCounter&&(i.technique.destroy(),this._perConstructorInstances.delete(t,s))})})}async reloadAll(){const e=new Array;this._perConstructorInstances.forEach((t,i)=>{const s=async(a,o)=>{const n=o.shader;n&&(await n.reload(),a.forEach(c=>{c.technique.reload(this._context)}))};e.push(s(t,i))}),await Promise.all(e)}}class Zh{constructor(e){this.technique=e,this.refCount=0,this.refZeroFrame=0}}const to=-1,Xh=r=>{class e extends r{constructor(){super(...arguments),this._isDisposed=!1}dispose(){var i;for(const s of(i=this._managedDisposables)!=null?i:[]){const a=this[s];this[s]=null,a&&typeof a.dispose=="function"&&a.dispose()}this._isDisposed=!0}get isDisposed(){return this._isDisposed}}return e};function ro(){return(r,e)=>{var t,i;r.hasOwnProperty("_managedDisposables")||(r._managedDisposables=(i=(t=r._managedDisposables)==null?void 0:t.slice())!=null?i:[]),r._managedDisposables.unshift(e)}}const Jh=ni.getLogger("esri.views.3d.webgl-engine.lib.Camera");class mi{constructor(e=null,t=null,i=null){this._viewUp=j(),this._viewForward=j(),this._viewRight=j(),this._ray=$t(),this._viewport=$i(0,0,1,1),this._padding=$i(0,0,0,0),this._fov=55/180*Math.PI,this._nearFar=ea(1,1e3),this._viewDirty=!0,this._viewMatrix=le(),this._projectionDirty=!0,this._projectionMatrix=le(),this._viewProjectionDirty=!0,this._viewProjectionMatrix=le(),this._viewInverseTransposeMatrixDirty=!0,this._viewInverseTransposeMatrix=le(),this._inverseProjectionDirty=!0,this._inverseProjectionMatrix=null,this._frustumDirty=!0,this._frustum=Kc(),this._fullViewport=ot(),this._pixelRatio=1,this.relativeElevation=0,x(e)&&te(this._ray.origin,e),this._center=x(t)?Ii(t):j(),this._up=x(i)?Ii(i):Ir(0,0,1)}get pixelRatio(){return this._pixelRatio}set pixelRatio(e){this._pixelRatio=e>0?e:1}get eye(){return this._ray.origin}set eye(e){this._compareAndSetView(e,this._ray.origin)}get center(){return this._center}set center(e){this._compareAndSetView(e,this._center)}get ray(){return Te(this._ray.direction,this.center,this.eye),this._ray}get up(){return this._up}set up(e){this._compareAndSetView(e,this._up)}get viewMatrix(){return this._ensureViewClean(),this._viewMatrix}set viewMatrix(e){ft(this._viewMatrix,e),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get viewForward(){return this._ensureViewClean(),this._viewForward}get viewUp(){return this._ensureViewClean(),this._viewUp}get viewRight(){return this._ensureViewClean(),this._viewRight}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(e){this._nearFar[0]!==e&&(this._nearFar[0]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get far(){return this._nearFar[1]}set far(e){this._nearFar[1]!==e&&(this._nearFar[1]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get viewport(){return this._viewport}set viewport(e){this.x=e[0],this.y=e[1],this.width=e[2],this.height=e[3]}get x(){return this._viewport[0]}set x(e){e+=this._padding[Q.LEFT],this._viewport[0]!==e&&(this._viewport[0]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get y(){return this._viewport[1]}set y(e){e+=this._padding[Q.BOTTOM],this._viewport[1]!==e&&(this._viewport[1]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get width(){return this._viewport[2]}set width(e){this._viewport[2]!==e&&(this._viewport[2]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get height(){return this._viewport[3]}set height(e){this._viewport[3]!==e&&(this._viewport[3]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get fullWidth(){return this._viewport[2]+this._padding[Q.RIGHT]+this._padding[Q.LEFT]}set fullWidth(e){this.width=e-(this._padding[Q.RIGHT]+this._padding[Q.LEFT])}get fullHeight(){return this._viewport[3]+this._padding[Q.TOP]+this._padding[Q.BOTTOM]}set fullHeight(e){this.height=e-(this._padding[Q.TOP]+this._padding[Q.BOTTOM])}get fullViewport(){return this._fullViewport[0]=this._viewport[0]-this._padding[Q.LEFT],this._fullViewport[1]=this._viewport[1]-this._padding[Q.BOTTOM],this._fullViewport[2]=this.fullWidth,this._fullViewport[3]=this.fullHeight,this._fullViewport}get aspect(){return this.width/this.height}get padding(){return this._padding}set padding(e){this._padding[Q.TOP]===e[Q.TOP]&&this._padding[Q.RIGHT]===e[Q.RIGHT]&&this._padding[Q.BOTTOM]===e[Q.BOTTOM]&&this._padding[Q.LEFT]===e[Q.LEFT]||(this._viewport[0]+=e[Q.LEFT]-this._padding[Q.LEFT],this._viewport[1]+=e[Q.BOTTOM]-this._padding[Q.BOTTOM],this._viewport[2]-=e[Q.RIGHT]+e[Q.LEFT]-(this._padding[Q.RIGHT]+this._padding[Q.LEFT]),this._viewport[3]-=e[Q.TOP]+e[Q.BOTTOM]-(this._padding[Q.TOP]+this._padding[Q.BOTTOM]),gi(this._padding,e),this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get viewProjectionMatrix(){return this._viewProjectionDirty&&(lr(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1),this._viewProjectionMatrix}get projectionMatrix(){if(this._projectionDirty){const e=this.width,t=this.height,i=this.near*Math.tan(this.fovY/2),s=i*this.aspect;_l(this._projectionMatrix,-s*(1+2*this._padding[Q.LEFT]/e),s*(1+2*this._padding[Q.RIGHT]/e),-i*(1+2*this._padding[Q.BOTTOM]/t),i*(1+2*this._padding[Q.TOP]/t),this.near,this.far),this._projectionDirty=!1}return this._projectionMatrix}get inverseProjectionMatrix(){return K(this._inverseProjectionMatrix)&&(this._inverseProjectionMatrix=le()),this._inverseProjectionDirty&&Pr(this._inverseProjectionMatrix,this.projectionMatrix),this._inverseProjectionMatrix}set projectionMatrix(e){ft(this._projectionMatrix,e),this._projectionDirty=!1,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fov(){return this._fov}set fov(e){this._fov=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovX(){return yl(this._fov,this.width,this.height)}set fovX(e){this._fov=Sl(e,this.width,this.height),this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovY(){return Tl(this._fov,this.width,this.height)}set fovY(e){this._fov=xl(e,this.width,this.height),this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get distance(){return Rt(this._center,this.eye)}get frustum(){return this._recomputeFrustum(),this._frustum}get viewInverseTransposeMatrix(){return(this._viewInverseTransposeMatrixDirty||this._viewDirty)&&(Pr(this._viewInverseTransposeMatrix,this.viewMatrix),zo(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),this._viewInverseTransposeMatrix}depthNDCToWorld(e){const t=2*e-1;return 2*this.near*this.far/(this.far+this.near-t*(this.far-this.near))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this._pixelRatio}get aboveGround(){return this.relativeElevation&&this.relativeElevation>=0}copyFrom(e){te(this._ray.origin,e.eye),te(this._center,e.center),te(this._up,e.up),gi(this._viewport,e.viewport),gi(this._padding,e.padding),Lr(this._nearFar,e.nearFar),this._fov=e.fov,this.relativeElevation=e.relativeElevation;const t=e;return this._viewDirty=t._viewDirty,this._viewDirty||(ft(this._viewMatrix,e.viewMatrix),te(this._viewRight,e.viewRight),te(this._viewUp,e.viewUp),te(this._viewForward,e.viewForward)),t._projectionDirty?this._projectionDirty=!0:(ft(this._projectionMatrix,e.projectionMatrix),this._projectionDirty=!1),this._viewProjectionDirty=!0,this._inverseProjectionDirty=!0,this._frustumDirty=t._frustumDirty,this._frustumDirty||(ed(this._frustum,e.frustum),this._frustumDirty=!1),t._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:(ft(this._viewInverseTransposeMatrix,e.viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),gi(this._fullViewport,e.fullViewport),this._pixelRatio=e.pixelRatio,this}copyViewFrom(e){this.eye=e.eye,this.center=e.center,this.up=e.up}clone(){return new mi().copyFrom(this)}equals(e){return kr(this.eye,e.eye)&&kr(this._center,e.center)&&kr(this._up,e.up)&&xa(this._viewport,e.viewport)&&xa(this._padding,e.padding)&&wl(this._nearFar,e.nearFar)&&this._fov===e.fov&&this._pixelRatio===e.pixelRatio&&this.relativeElevation===e.relativeElevation}almostEquals(e){if(this._pixelRatio!==e.pixelRatio||Math.abs(e.fov-this._fov)>=.001)return!1;const t=5e-4,i=1-1e-10;wa($e,e.eye,e.center),wa(ws,this.eye,this._center);const s=At($e,ws),a=Oa($e),o=Oa(ws);return s*s>=i*a*o&&Ol(e.eye,this.eye)<Math.max(a,o)*t*t&&Ca(e.padding,this._padding)<.5&&Ca(e.viewport,this._viewport)<.5}computeRenderPixelSizeAt(e){return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(e))}computeRenderPixelSizeAtDist(e){return e*this.perRenderPixelRatio}computeScreenPixelSizeAt(e){return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(e))}_viewDirectionDistance(e){return Math.abs(rc(this.viewForward,Te($e,e,this.eye)))}computeScreenPixelSizeAtDist(e){return e*this.perScreenPixelRatio}computeDistanceFromRadius(e,t){return e/Math.tan(Math.min(this.fovX,this.fovY)/(2*(t||1)))}getScreenCenter(e=Cl()){return e[0]=(this.padding[Q.LEFT]+this.width/2)/this._pixelRatio,e[1]=(this.padding[Q.TOP]+this.height/2)/this._pixelRatio,e}getRenderCenter(e,t=.5,i=.5){return e[0]=this.padding[Q.LEFT]+this.width*t,e[1]=this.padding[Q.BOTTOM]+this.height*i,e[2]=.5,e}setGLViewport(e){const t=this.viewport,i=this.padding;e.setViewport(t[0]-i[3],t[1]-i[2],t[2]+i[1]+i[3],t[3]+i[0]+i[2])}applyProjection(e,t){e!==Z&&te(Z,e),Z[3]=1,Rr(Z,Z,this.projectionMatrix);const i=Math.abs(Z[3]);ce(Z,Z,1/i);const s=this.fullViewport;t[0]=rr(0,s[0]+s[2],.5+.5*Z[0]),t[1]=rr(0,s[1]+s[3],.5+.5*Z[1]),t[2]=.5*(Z[2]+1),t[3]=i}unapplyProjection(e,t){const i=this.fullViewport;Z[0]=(e[0]/(i[0]+i[2])*2-1)*e[3],Z[1]=(e[1]/(i[1]+i[3])*2-1)*e[3],Z[2]=(2*e[2]-1)*e[3],Z[3]=e[3],Rr(Z,Z,this.inverseProjectionMatrix),t[0]=Z[0],t[1]=Z[1],t[2]=Z[2]}projectToScreen(e,t){this.projectToRenderScreen(e,Os),this.renderToScreen(Os,t)}projectToRenderScreen(e,t){if(Z[0]=e[0],Z[1]=e[1],Z[2]=e[2],Z[3]=1,Rr(Z,Z,this.viewProjectionMatrix),Z[3]===0)return null;ce(Z,Z,1/Math.abs(Z[3]));const i=this.fullViewport;return"x"in t?(t.x=rr(0,i[0]+i[2],.5+.5*Z[0]),t.y=rr(0,i[1]+i[3],.5+.5*Z[1])):(t[0]=rr(0,i[0]+i[2],.5+.5*Z[0]),t[1]=rr(0,i[1]+i[3],.5+.5*Z[1]),t.length>2&&(t[2]=.5*(Z[2]+1))),t}unprojectFromScreen(e,t){return this.unprojectFromRenderScreen(this.screenToRender(e,Os),t)}unprojectFromRenderScreen(e,t){if(lr(Si,this.projectionMatrix,this.viewMatrix),!Pr(Si,Si))return null;const i=this.fullViewport;return Z[0]=2*(e[0]-i[0])/i[2]-1,Z[1]=2*(e[1]-i[1])/i[3]-1,Z[2]=2*e[2]-1,Z[3]=1,Rr(Z,Z,Si),Z[3]===0?null:(t[0]=Z[0]/Z[3],t[1]=Z[1]/Z[3],t[2]=Z[2]/Z[3],t)}constrainWindowSize(e,t,i,s=i){const a=e*this._pixelRatio,o=t*this._pixelRatio,n=Math.max(a-i/2,0),c=Math.max(this.fullHeight-o-s/2,0),l=-Math.min(a-i/2,0),h=-Math.min(this.fullHeight-o-s/2,0);return[n,c,i-l- -Math.min(this.fullWidth-a-i/2,0),s-h- -Math.min(o-s/2,0)]}computeUp(e){e===Bt.Global?this._computeUpGlobal():this._computeUpLocal()}screenToRender(e,t){const i=e[0]*this._pixelRatio,s=this.fullHeight-e[1]*this._pixelRatio;return t[0]=i,t[1]=s,t}renderToScreen(e,t){const i=e[0]/this._pixelRatio,s=(this.fullHeight-e[1])/this._pixelRatio;t[0]=i,t[1]=s}_computeUpGlobal(){Te($e,this.center,this.eye);const e=wt(this.center);e<1?(ae(this._up,0,0,1),this._markViewDirty()):Math.abs(At($e,this.center))>.9999*wt($e)*e||(ut(this._up,$e,this.center),ut(this._up,this._up,$e),Oe(this._up,this._up),this._markViewDirty())}_computeUpLocal(){Rl($e,this.eye,this.center),Math.abs($e[2])<=.9999&&(ce($e,$e,$e[2]),ae(this._up,-$e[0],-$e[1],1-$e[2]),Oe(this._up,this._up),this._markViewDirty())}_compareAndSetView(e,t){typeof e[0]=="number"&&isFinite(e[0])&&typeof e[1]=="number"&&isFinite(e[1])&&typeof e[2]=="number"&&isFinite(e[2])?kr(e,t)||(te(t,e),this._markViewDirty()):Jh.warn("Camera vector contains invalid number, ignoring value")}_markViewDirty(){this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0}_recomputeFrustum(){this._frustumDirty&&(td(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&(Uo(this._viewMatrix,this.eye,this._center,this._up),ae(this._viewForward,-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10]),ae(this._viewUp,this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9]),ae(this._viewRight,this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8]),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}}const Z=ot(),Si=le(),$e=j(),ws=j(),Os=tt();var Q;(function(r){r[r.TOP=0]="TOP",r[r.RIGHT=1]="RIGHT",r[r.BOTTOM=2]="BOTTOM",r[r.LEFT=3]="LEFT"})(Q||(Q={}));const Yh=ni.getLogger("esri.views.3d.webgl-engine.lib.GLMaterialRepository");class Qh{constructor(e,t,i,s){this._textureRepository=e,this._techniqueRepository=t,this.materialChanged=i,this.requestRender=s,this._id2glMaterialRef=new ln}dispose(){this._textureRepository.dispose()}acquire(e,t){this._ownMaterial(e);let i=this._id2glMaterialRef.get(t,e.id);if(K(i)){const s=e.createGLMaterial({material:e,techniqueRep:this._techniqueRepository,textureRep:this._textureRepository,output:t});i=new Kh(s),this._id2glMaterialRef.set(t,e.id,i)}return i.ref(),i.glMaterial}release(e,t){const i=this._id2glMaterialRef.get(t,e.id);x(i)&&(i.unref(),i.referenced||(Fe(i.glMaterial),this._id2glMaterialRef.delete(t,e.id)))}_ownMaterial(e){x(e.repository)&&e.repository!==this&&Yh.error("Material is already owned by a different material repository"),e.repository=this}}class Kh{constructor(e){this.glMaterial=e,this.refCnt=0}ref(){++this.refCnt}unref(){--this.refCnt,Ee(this.refCnt>=0)}get referenced(){return this.refCnt>0}}const eu={rootOrigin:null};class tu{constructor(e,t=125e4){this._originSR=e,this._gridSize=t,this._origins=new Map,this._objects=new Map,this._rootOriginId="root/"+oi()}getOrigin(e){const t=this._origins.get(this._rootOriginId);if(t==null){const h=eu.rootOrigin;if(x(h))return this._origins.set(this._rootOriginId,Di(h[0],h[1],h[2],this._rootOriginId)),this.getOrigin(e);const u=Di(e[0]+Math.random()-.5,e[1]+Math.random()-.5,e[2]+Math.random()-.5,this._rootOriginId);return this._origins.set(this._rootOriginId,u),u}const i=this._gridSize,s=Math.round(e[0]/i),a=Math.round(e[1]/i),o=Math.round(e[2]/i),n=`${s}/${a}/${o}`;let c=this._origins.get(n);const l=.5*i;if(Te(Ae,e,t.vec3),Ae[0]=Math.abs(Ae[0]),Ae[1]=Math.abs(Ae[1]),Ae[2]=Math.abs(Ae[2]),Ae[0]<l&&Ae[1]<l&&Ae[2]<l){if(c){const h=Math.max(...Ae);if(Te(Ae,e,c.vec3),Ae[0]=Math.abs(Ae[0]),Ae[1]=Math.abs(Ae[1]),Ae[2]=Math.abs(Ae[2]),Math.max(...Ae)<h)return c}return t}return c||(c=Di(s*i,a*i,o*i,n),this._origins.set(n,c)),c}_drawOriginBox(e,t=$i(1,1,0,1)){const i=window.view,s=i._stage,a=t.toString();if(!this._objects.has(a)){this._material=new yd({width:2,color:t}),s.add(this._material);const S=new ld({isPickable:!1}),w=new pn({castShadow:!1});s.add(w),S.add(w),s.add(S),this._objects.set(a,w)}const o=this._objects.get(a),n=[0,1,5,4,0,2,1,7,6,2,0,1,3,7,5,4,6,2,0],c=n.length,l=new Array(3*c),h=new Uint16Array(2*(c-1)),u=.5*this._gridSize;for(let S=0;S<c;S++)l[3*S+0]=e[0]+(1&n[S]?u:-u),l[3*S+1]=e[1]+(2&n[S]?u:-u),l[3*S+2]=e[2]+(4&n[S]?u:-u),S>0&&(h[2*S+0]=S-1,h[2*S+1]=S);Mi(l,this._originSR,0,l,i.renderSpatialReference,0,c);const f=new Ve([[d.POSITION,{size:3,data:l,exclusive:!0}]],[[d.POSITION,h]],Zr.Line);s.add(f),o.addGeometry(f,this._material,cr)}}const Ae=j();class ru{constructor(){this.startTime=0,this.startTimeHeightFade=0,this.cameraPositionLastFrame=j(),this.parallax={anchorPointClouds:j(),cloudsHeight:1e5,radiusCurvatureCorrectionFactor:0,transform:le()},this.parallaxNew={anchorPointClouds:j(),cloudsHeight:1e5,radiusCurvatureCorrectionFactor:0,transform:le()},this.crossFade={enabled:!1,factor:0,distanceThresholdFactor:.3},this.fadeInOut={stage:Gi.FINISHED,factor:0,distanceThresholdFactor:.6},this.fadeIn={stage:Xs.FINISHED,factor:0,distanceThresholdFactor:2},this.fadeInOutHeight={stage:Js.FINISHED,factor:-1}}}var Xs,Gi,Js;(function(r){r[r.FINISHED=0]="FINISHED",r[r.CHANGE_ANCHOR=1]="CHANGE_ANCHOR",r[r.FADE_IN=2]="FADE_IN"})(Xs||(Xs={})),function(r){r[r.FINISHED=0]="FINISHED",r[r.FADE_OUT=1]="FADE_OUT",r[r.SWITCH=2]="SWITCH",r[r.FADE_IN=3]="FADE_IN"}(Gi||(Gi={})),function(r){r[r.FINISHED=0]="FINISHED",r[r.HEIGHT_FADE=1]="HEIGHT_FADE"}(Js||(Js={}));function iu(r,e){const t=r.fragment.uniforms;t.add(new qe("nearFar",(i,s)=>s.camera.nearFar)),t.add(new $r("depthMap",(i,s)=>s.linearDepthTexture)),t.add(new ar("view",(i,s)=>s.ssr.camera.viewMatrix)),t.add(new ar("proj",(i,s)=>s.ssr.camera.projectionMatrix)),t.add(new pe("invResolutionHeight",(i,s)=>1/s.ssr.camera.height)),t.add(new $r("lastFrameColorMap",(i,s)=>s.ssr.lastFrameColorTexture)),t.add(new ar("reprojectionMatrix",(i,s)=>s.ssr.reprojectionMatrix)),r.fragment.include(ei),r.fragment.code.add(p`
  vec2 reprojectionCoordinate(vec3 projectionCoordinate)
  {
    vec4 zw = proj * vec4(0.0, 0.0, -projectionCoordinate.z, 1.0);
    vec4 reprojectedCoord = reprojectionMatrix * vec4(zw.w * (projectionCoordinate.xy * 2.0 - 1.0), zw.z, zw.w);
    reprojectedCoord.xy /= reprojectedCoord.w;
    return reprojectedCoord.xy * 0.5 + 0.5;
  }

  const int maxSteps = ${e.highStepCount?"150;":"75;"}

  vec4 applyProjectionMat(mat4 projectionMat, vec3 x)
  {
    vec4 projectedCoord =  projectionMat * vec4(x, 1.0);
    projectedCoord.xy /= projectedCoord.w;
    projectedCoord.xy = projectedCoord.xy*0.5 + 0.5;
    return projectedCoord;
  }

  vec3 screenSpaceIntersection(vec3 dir, vec3 startPosition, vec3 viewDir, vec3 normal)
  {
    vec3 viewPos = startPosition;
    vec3 viewPosEnd = startPosition;

    // Project the start position to the screen
    vec4 projectedCoordStart = applyProjectionMat(proj, viewPos);
    vec3  Q0 = viewPos / projectedCoordStart.w; // homogeneous camera space
    float k0 = 1.0/ projectedCoordStart.w;

    // advance the position in the direction of the reflection
    viewPos += dir;

    vec4 projectedCoordVanishingPoint = applyProjectionMat(proj, dir);

    // Project the advanced position to the screen
    vec4 projectedCoordEnd = applyProjectionMat(proj, viewPos);
    vec3  Q1 = viewPos / projectedCoordEnd.w; // homogeneous camera space
    float k1 = 1.0/ projectedCoordEnd.w;

    // calculate the reflection direction in the screen space
    vec2 projectedCoordDir = (projectedCoordEnd.xy - projectedCoordStart.xy);
    vec2 projectedCoordDistVanishingPoint = (projectedCoordVanishingPoint.xy - projectedCoordStart.xy);

    float yMod = min(abs(projectedCoordDistVanishingPoint.y), 1.0);

    float projectedCoordDirLength = length(projectedCoordDir);
    float maxSt = float(maxSteps);

    // normalize the projection direction depending on maximum steps
    // this determines how blocky the reflection looks
    vec2 dP = yMod * (projectedCoordDir)/(maxSt * projectedCoordDirLength);

    // Normalize the homogeneous camera space coordinates
    vec3  dQ = yMod * (Q1 - Q0)/(maxSt * projectedCoordDirLength);
    float dk = yMod * (k1 - k0)/(maxSt * projectedCoordDirLength);

    // initialize the variables for ray marching
    vec2 P = projectedCoordStart.xy;
    vec3 Q = Q0;
    float k = k0;
    float rayStartZ = -startPosition.z; // estimated ray start depth value
    float rayEndZ = -startPosition.z;   // estimated ray end depth value
    float prevEstimateZ = -startPosition.z;
    float rayDiffZ = 0.0;
    float dDepth;
    float depth;
    float rayDiffZOld = 0.0;

    // early outs
    if (dot(normal, dir) < 0.0 || dot(-viewDir, normal) < 0.0)
      return vec3(P, 0.0);

    for(int i = 0; i < maxSteps-1; i++)
    {
      depth = -linearDepthFromTexture(depthMap, P, nearFar); // get linear depth from the depth buffer

      // estimate depth of the marching ray
      rayStartZ = prevEstimateZ;
      dDepth = -rayStartZ - depth;
      rayEndZ = (dQ.z * 0.5 + Q.z)/ ((dk * 0.5 + k));
      rayDiffZ = rayEndZ- rayStartZ;
      prevEstimateZ = rayEndZ;

      if(-rayEndZ > nearFar[1] || -rayEndZ < nearFar[0] || P.y < 0.0  || P.y > 1.0 )
      {
        return vec3(P, 0.);
      }

      // If we detect a hit - return the intersection point, two conditions:
      //  - dDepth > 0.0 - sampled point depth is in front of estimated depth
      //  - if difference between dDepth and rayDiffZOld is not too large
      //  - if difference between dDepth and 0.025/abs(k) is not too large
      //  - if the sampled depth is not behind far plane or in front of near plane

      if((dDepth) < 0.025/abs(k) + abs(rayDiffZ) && dDepth > 0.0 && depth > nearFar[0] && depth < nearFar[1] && abs(P.y - projectedCoordStart.y) > invResolutionHeight)
      {
        return vec3(P, depth);
      }

      // continue with ray marching
      P += dP;
      Q.z += dQ.z;
      k += dk;
      rayDiffZOld = rayDiffZ;
    }
    return vec3(P, 0.0);
  }
  `)}class su{constructor(){this.reprojectionMatrix=le()}}class au{constructor(e,t,i){this.shadowMap=e,this.ssaoHelper=t,this.slicePlane=i,this.slot=se.OPAQUE_MATERIAL,this.hasOccludees=!1,this.enableFillLights=!0,this._inverseViewport=fe(),this.lighting=new Cc,this.ssr=new su,this.multipassTerrain=new Rc,this.multipassGeometry=new uh,this.clouds=new ru,this.overlays=[]}get camera(){return this._camera}set camera(e){this._camera=this.ssr.camera=e,this._inverseViewport[0]=1/e.fullViewport[2],this._inverseViewport[1]=1/e.fullViewport[3]}get inverseViewport(){return this._inverseViewport}}class ou{constructor(e,t,i,s=null){this.rctx=e,this.sliceHelper=s,this.lastFrameCamera=new mi,this.pass=ye.MATERIAL,this.renderOccludedMask=io,this.bindParameters=new au(t,i,x(s)?s.plane:null)}resetRenderOccludedMask(){this.renderOccludedMask=io}get isHighlightPass(){return this.pass===ye.MATERIAL_HIGHLIGHT}}const io=Ht.Occlude|Ht.OccludeAndTransparent|Ht.OccludeAndTransparentStencil;var so;(function(r){r[r.Highlight=0]="Highlight",r[r.Default=1]="Default"})(so||(so={}));class Ti{constructor(){this.camera=new mi,this.lightMat=le()}}class nu{constructor(e,t,i=0){this.rctx=e,this.viewingMode=t,this._enabled=!1,this._snapshots=new Array,this._textureSize=0,this.maxTextureSize=0,this.numCascades=1,this.maxNumCascades=4,this.splitSchemeLambda=0,this.warp=!0,this._cascadeDistances=[0,0,0,0,0],this._usedCascadeDistances=ot(),this._cascades=[new Ti,new Ti,new Ti,new Ti],this.maxTextureSize=this.rctx.parameters.maxTextureSize,this.snapshotCount=i}get depthTexture(){return this._depthTexture}get textureSize(){return this._textureSize}get cascadeDistances(){return nr(this._usedCascadeDistances,this._cascadeDistances[0],this.numCascades>1?this._cascadeDistances[1]:1/0,this.numCascades>2?this._cascadeDistances[2]:1/0,this.numCascades>3?this._cascadeDistances[3]:1/0)}dispose(){this._discardDepthTexture(),this._discardAllSnapshots()}set maxCascades(e){this.maxNumCascades=jt(Math.floor(e),1,4)}get maxCascades(){return this.maxNumCascades}set enabled(e){this._enabled=e,e||(this._discardDepthTexture(),this._discardAllSnapshots())}get enabled(){return this._enabled}get ready(){return this._enabled&&x(this._depthTexture)}get snapshotCount(){return this._snapshots.length}set snapshotCount(e){const t=this._snapshots.length;if(e>t){const i=e-t;this._snapshots.length=e;for(let s=0;s<i;++s)this._snapshots[t+s]=null}else if(e<this.snapshotCount){const i=t-e;for(let s=0;s<i;++s)this._discardSnapshot(e+s);this._snapshots.length=e}}getSnapshot(e){return this.enabled?this._snapshots[e]:null}getCascades(){for(let e=0;e<this.numCascades;++e)Rs[e]=this._cascades[e];return Rs.length=this.numCascades,Rs}start(e,t,i){Ee(this.enabled),this._textureSize=this._computeTextureSize(e.fullWidth,e.fullHeight),this._ensureDepthTexture();const{near:s,far:a}=this._clampNearFar(i);this._computeCascadeDistances(a,s),this._setupMatrices(e,t);const o=e.viewMatrix,n=e.projectionMatrix;for(let c=0;c<this.numCascades;++c)this._constructCascade(c,n,o,t);this.lastOrigin=null,this.clear()}finish(e){Ee(this.enabled),this.rctx.bindFramebuffer(e)}getShadowMapMatrices(e){if(!this.lastOrigin||!kr(e,this.lastOrigin)){this.lastOrigin=this.lastOrigin||j(),te(this.lastOrigin,e);for(let t=0;t<this.numCascades;++t){Ra(mo,this._cascades[t].lightMat,e);for(let i=0;i<16;++i)go[16*t+i]=mo[i]}}return go}takeCascadeSnapshotTo(e,t){Ee(this.enabled);const i=this._ensureSnapshot(t);this._bindFbo();const s=this.rctx,a=s.bindTexture(i,ir.TEXTURE_UNIT_FOR_UPDATES);s.gl.copyTexSubImage2D(or.TEXTURE_2D,0,e.camera.viewport[0],e.camera.viewport[1],e.camera.viewport[0],e.camera.viewport[1],e.camera.viewport[2],e.camera.viewport[3]),s.bindTexture(a,ir.TEXTURE_UNIT_FOR_UPDATES)}clear(){const e=this.rctx;this._bindFbo(),e.setClearColor(1,1,1,1),e.clearSafe(zi.COLOR_BUFFER_BIT|zi.DEPTH_BUFFER_BIT)}_computeTextureSize(e,t){const i=.5*Math.log(e*e+t*t)*Math.LOG2E,s=.35,a=2**Math.round(i+s);return Math.min(this.maxTextureSize,2*a)}_ensureDepthTexture(){if(x(this._depthTexture)&&this._depthTexture.descriptor.width===this._textureSize)return;this._discardDepthTexture();const e={target:or.TEXTURE_2D,pixelFormat:Gt.RGBA,dataType:hr.UNSIGNED_BYTE,wrapMode:dr.CLAMP_TO_EDGE,samplingMode:ti.NEAREST,flipped:!0,width:this._textureSize,height:this._textureSize};this._depthTexture=new ir(this.rctx,e),this._fbo=new Yr(this.rctx,{colorTarget:pa.TEXTURE,depthStencilTarget:fa.DEPTH_RENDER_BUFFER,width:this._textureSize,height:this._textureSize},this._depthTexture)}_ensureSnapshot(e){let t=this._snapshots[e];if(x(t)&&t.descriptor.width===this._textureSize)return t;this._discardSnapshot(e);const i={target:or.TEXTURE_2D,pixelFormat:Gt.RGBA,dataType:hr.UNSIGNED_BYTE,wrapMode:dr.CLAMP_TO_EDGE,samplingMode:ti.NEAREST,flipped:!0,width:this._textureSize,height:this._textureSize};return t=new ir(this.rctx,i),this._snapshots[e]=t,t}_discardDepthTexture(){this._fbo=Fe(this._fbo),this._depthTexture=Fe(this._depthTexture)}_discardSnapshot(e){this._snapshots[e]=Fe(this._snapshots[e])}_discardAllSnapshots(){for(let e=0;e<this.snapshotCount;++e)this._discardSnapshot(e)}_bindFbo(){const e=this.rctx;e.unbindTexture(this._depthTexture),e.bindFramebuffer(this._fbo)}_constructCascade(e,t,i,s){const a=this._cascades[e],o=-this._cascadeDistances[e],n=-this._cascadeDistances[e+1],c=(t[10]*o+t[14])/Math.abs(t[11]*o+t[15]),l=(t[10]*n+t[14])/Math.abs(t[11]*n+t[15]);Ee(c<l);for(let u=0;u<8;++u){nr(lo,u%4==0||u%4==3?-1:1,u%4==0||u%4==1?-1:1,u<4?c:l,1),Rr(Ze[u],lo,no);for(let f=0;f<3;++f)Ze[u][f]/=Ze[u][3]}Al(Cs,Ze[0]),Ra(ao,fo,Cs),a.camera.viewMatrix=ao;for(let u=0;u<8;++u)ue(Ze[u],Ze[u],a.camera.viewMatrix);te(lt,Ze[0]),te(ct,Ze[0]);for(let u=1;u<8;++u)for(let f=0;f<3;++f)lt[f]=Math.min(lt[f],Ze[u][f]),ct[f]=Math.max(ct[f],Ze[u][f]);lt[2]-=200,ct[2]+=200,a.camera.near=-ct[2],a.camera.far=-lt[2],this.warp?this._constructTrapezoidalProjection(i,s,a):this._constructOrthogonalProjection(a),lr(a.lightMat,a.camera.projectionMatrix,a.camera.viewMatrix);const h=this._textureSize/2;a.camera.viewport[0]=e%2==0?0:h,a.camera.viewport[1]=Math.floor(e/2)===0?0:h,a.camera.viewport[2]=h,a.camera.viewport[3]=h}_constructOrthogonalProjection(e){Vo(e.camera.projectionMatrix,lt[0],ct[0],lt[1],ct[1],e.camera.near,e.camera.far)}_constructTrapezoidalProjection(e,t,i){const s=1/Ze[0][3],a=1/Ze[4][3];Ee(s<a);let o=s+Math.sqrt(s*a);const n=Math.sin(bl(e[2]*t[0]+e[6]*t[1]+e[10]*t[2]));o/=n,cu(Ze,o,n,co,ho,lu,uo,po),du(co,ho,uo,po,i.camera.projectionMatrix),i.camera.projectionMatrix[10]=2/(lt[2]-ct[2]),i.camera.projectionMatrix[14]=-(lt[2]+ct[2])/(lt[2]-ct[2])}_setupMatrices(e,t){lr(oo,e.projectionMatrix,e.viewMatrix),Pr(no,oo);const i=this.viewingMode===Bt.Global?e.eye:ae(Cs,0,0,1);Uo(fo,[0,0,0],[-t[0],-t[1],-t[2]],i)}_clampNearFar(e){let{near:t,far:i}=e;return t<2&&(t=2),i<2&&(i=2),t>=i&&(t=2,i=4),{near:t,far:i}}_computeCascadeDistances(e,t){this.numCascades=Math.min(1+Math.floor(Pl(e/t,4)),this.maxNumCascades);const i=(e-t)/this.numCascades,s=(e/t)**(1/this.numCascades);let a=t,o=t;for(let n=0;n<this.numCascades+1;++n)this._cascadeDistances[n]=rr(a,o,this.splitSchemeLambda),a*=s,o+=i}get gpuMemoryUsage(){var e,t;return this._snapshots.reduce((i,s)=>i+Xc(s),(t=(e=this._fbo)==null?void 0:e.gpuMemoryUsage)!=null?t:0)}get test(){const e=this;return{maxNumCascades:this.maxNumCascades,cascades:this._cascades,textureSize:this._textureSize,set splitSchemeLambda(t){e.splitSchemeLambda=t},get splitSchemeLambda(){return e.splitSchemeLambda},set warp(t){e.warp=t},get warp(){return e.warp}}}}const ao=le(),oo=le(),no=le(),lo=ot(),Ze=[];for(let r=0;r<8;++r)Ze.push(ot());const lt=j(),ct=j(),co=fe(),ho=fe(),lu=fe(),uo=fe(),po=fe(),fo=le(),Cs=j(),Rs=[],mo=le(),go=new Float32Array(64),Ye=fe(),Sr=fe(),Qt=[fe(),fe(),fe(),fe()],Se=fe(),As=fe(),It=fe(),Hr=fe(),Tr=fe(),xr=fe(),xi=fe();function cu(r,e,t,i,s,a,o,n){yt(Ye,0,0);for(let m=0;m<4;++m)Zt(Ye,Ye,r[m]);wr(Ye,Ye,.25),yt(Sr,0,0);for(let m=4;m<8;++m)Zt(Sr,Sr,r[m]);wr(Sr,Sr,.25),Ur(Qt[0],r[4],r[5],.5),Ur(Qt[1],r[5],r[6],.5),Ur(Qt[2],r[6],r[7],.5),Ur(Qt[3],r[7],r[4],.5);let c=0,l=Aa(Qt[0],Ye);for(let m=1;m<4;++m){const g=Aa(Qt[m],Ye);g<l&&(l=g,c=m)}Or(Se,Qt[c],r[c+4]);const h=Se[0];let u,f;Se[0]=-Se[1],Se[1]=h,Or(As,Sr,Ye),Le(As,Se)<0&&El(Se,Se),Ur(Se,Se,As,t),ba(Se,Se),u=f=Le(Or(It,r[0],Ye),Se);for(let m=1;m<8;++m){const g=Le(Or(It,r[m],Ye),Se);g<u?u=g:g>f&&(f=g)}Lr(i,Ye),wr(It,Se,u-e),Zt(i,i,It);let S=-1,w=1,b=0,U=0;for(let m=0;m<8;++m){Or(Hr,r[m],i),ba(Hr,Hr);const g=Se[0]*Hr[1]-Se[1]*Hr[0];g>0?g>S&&(S=g,b=m):g<w&&(w=g,U=m)}vr(S>0,"leftArea"),vr(w<0,"rightArea"),wr(Tr,Se,u),Zt(Tr,Tr,Ye),wr(xr,Se,f),Zt(xr,xr,Ye),xi[0]=-Se[1],xi[1]=Se[0];const R=vi(i,r[U],xr,Zt(It,xr,xi),1,s),E=vi(i,r[b],xr,It,1,a),y=vi(i,r[b],Tr,Zt(It,Tr,xi),1,o),_=vi(i,r[U],Tr,It,1,n);vr(R,"rayRay"),vr(E,"rayRay"),vr(y,"rayRay"),vr(_,"rayRay")}function Y(r,e){return 3*e+r}const vo=fe();function ke(r,e){return yt(vo,r[e],r[e+3]),vo}const Ge=fe(),I=ua();function du(r,e,t,i,s){Or(Ge,t,i),wr(Ge,Ge,.5),I[0]=Ge[0],I[1]=Ge[1],I[2]=0,I[3]=Ge[1],I[4]=-Ge[0],I[5]=0,I[6]=Ge[0]*Ge[0]+Ge[1]*Ge[1],I[7]=Ge[0]*Ge[1]-Ge[1]*Ge[0],I[8]=1,I[Y(0,2)]=-Le(ke(I,0),r),I[Y(1,2)]=-Le(ke(I,1),r);let a=Le(ke(I,0),t)+I[Y(0,2)],o=Le(ke(I,1),t)+I[Y(1,2)],n=Le(ke(I,0),i)+I[Y(0,2)],c=Le(ke(I,1),i)+I[Y(1,2)];a=-(a+n)/(o+c),I[Y(0,0)]+=I[Y(1,0)]*a,I[Y(0,1)]+=I[Y(1,1)]*a,I[Y(0,2)]+=I[Y(1,2)]*a,a=1/(Le(ke(I,0),t)+I[Y(0,2)]),o=1/(Le(ke(I,1),t)+I[Y(1,2)]),I[Y(0,0)]*=a,I[Y(0,1)]*=a,I[Y(0,2)]*=a,I[Y(1,0)]*=o,I[Y(1,1)]*=o,I[Y(1,2)]*=o,I[Y(2,0)]=I[Y(1,0)],I[Y(2,1)]=I[Y(1,1)],I[Y(2,2)]=I[Y(1,2)],I[Y(1,2)]+=1,a=Le(ke(I,1),e)+I[Y(1,2)],o=Le(ke(I,2),e)+I[Y(2,2)],n=Le(ke(I,1),t)+I[Y(1,2)],c=Le(ke(I,2),t)+I[Y(2,2)],a=-.5*(a/o+n/c),I[Y(1,0)]+=I[Y(2,0)]*a,I[Y(1,1)]+=I[Y(2,1)]*a,I[Y(1,2)]+=I[Y(2,2)]*a,a=Le(ke(I,1),e)+I[Y(1,2)],o=Le(ke(I,2),e)+I[Y(2,2)],n=-o/a,I[Y(1,0)]*=n,I[Y(1,1)]*=n,I[Y(1,2)]*=n,s[0]=I[0],s[1]=I[1],s[2]=0,s[3]=I[2],s[4]=I[3],s[5]=I[4],s[6]=0,s[7]=I[5],s[8]=0,s[9]=0,s[10]=1,s[11]=0,s[12]=I[6],s[13]=I[7],s[14]=0,s[15]=I[8]}class hu{constructor(){this.adds=new Ot,this.removes=new Ot,this.updates=new Ot({allocator:e=>e||new uu,deallocator:e=>(e.renderGeometry=null,e)})}clear(){this.adds.clear(),this.removes.clear(),this.updates.clear()}prune(){this.adds.prune(),this.removes.prune(),this.updates.prune()}}class uu{}class pu{constructor(){this.adds=new Array,this.removes=new Array,this.updates=new Array}}var Wt,ur;(function(r){r[r.OBJECT=0]="OBJECT",r[r.HUD=1]="HUD",r[r.TERRAIN=2]="TERRAIN",r[r.OVERLAY=3]="OVERLAY",r[r.I3S=4]="I3S",r[r.PCL=5]="PCL",r[r.LOD=6]="LOD",r[r.VOXEL=7]="VOXEL"})(Wt||(Wt={}));class fu{constructor(){this.verticalOffset=0,this.selectionMode=!1,this.hud=!0,this.selectOpaqueTerrainOnly=!0,this.invisibleTerrain=!1,this.backfacesTerrain=!0,this.isFiltered=!1,this.store=ur.ALL}}(function(r){r[r.MIN=0]="MIN",r[r.MINMAX=1]="MINMAX",r[r.ALL=2]="ALL"})(ur||(ur={}));function mu(r){return x(r)&&x(r.dist)}const _o=1e-5;class gu{constructor(e){this.options=new fu,this._results=new vu,this.transform=new Ac,this.tolerance=_o,this.verticalOffset=null,this._ray=$t(),this._rayEnd=j(),this._rayBeginTransformed=j(),this._rayEndTransformed=j(),this.viewingMode=e==null?Bt.Global:e}get results(){return this._results}get ray(){return this._ray}get rayBegin(){return this._ray.origin}get rayEnd(){return this._rayEnd}reset(e,t,i){this.resetWithRay(ic(e,t,this._ray),i)}resetWithRay(e,t){this.camera=t,e!==this._ray&&zs(e,this._ray),this.options.verticalOffset!==0?this.viewingMode===Bt.Local?this._ray.origin[2]-=this.options.verticalOffset:this.verticalOffset=this.options.verticalOffset:this.verticalOffset=null,_e(this._rayEnd,this._ray.origin,this._ray.direction),this._results.init(this._ray)}intersect(e=null,t,i,s,a){this.point=t,this.filterPredicate=s,this.tolerance=i==null?_o:i;const o=Fa(this.verticalOffset);if(x(e)&&e.length>0){const n=a?c=>{a(c)&&this.intersectObject(c)}:c=>{this.intersectObject(c)};for(const c of e){const l=c.getSpatialQueryAccelerator&&c.getSpatialQueryAccelerator();x(l)?(x(o)?l.forEachAlongRayWithVerticalOffset(this._ray.origin,this._ray.direction,n,o):l.forEachAlongRay(this._ray.origin,this._ray.direction,n),this.options.selectionMode&&this.options.hud&&l.forEachDegenerateObject(n)):c.objects.forAll(h=>n(h))}}this.sortResults()}intersectObject(e){const t=e.geometryRecords;if(!t)return;const i=e.transformation,s=Fa(this.verticalOffset);for(const a of t){const{geometry:o,material:n,instanceParameters:c}=a;if(Ji(c))continue;const l=o.id;this.transform.setAndInvalidateLazyTransforms(i,a.getShaderTransformation()),ue(this._rayBeginTransformed,this.rayBegin,this.transform.inverse),ue(this._rayEndTransformed,this.rayEnd,this.transform.inverse);const h=this.transform.transform;x(s)&&(s.objectTransform=this.transform),n.intersect(o,c,this.transform.transform,this,this._rayBeginTransformed,this._rayEndTransformed,(u,f,S,w,b,U)=>{if(u>=0){if(x(this.filterPredicate)&&!this.filterPredicate(this._ray.origin,this._rayEnd,u))return;const R=w?this._results.hud:this._results,E=w?y=>{const _={object:e,geometryId:l,triangleNr:S,center:x(U)?[U[0],U[1],U[2]]:null};y.set(Wt.HUD,_,u,f,cr,b)}:y=>y.set(Wt.OBJECT,{object:e,geometryId:l,triangleNr:S},u,f,h,b);if((R.min.drapedLayerOrder==null||b>=R.min.drapedLayerOrder)&&(R.min.dist==null||u<R.min.dist)&&E(R.min),this.options.store!==ur.MIN&&(R.max.drapedLayerOrder==null||b<R.max.drapedLayerOrder)&&(R.max.dist==null||u>R.max.dist)&&E(R.max),this.options.store===ur.ALL)if(w){const y=new Ys(this._ray);E(y),this._results.hud.all.push(y)}else{const y=new Dr(this._ray);E(y),this._results.all.push(y)}}},a.shaderTransformation)}}sortResults(e=this._results.all){e.sort((t,i)=>t.dist!==i.dist?ne(t.dist,0)-ne(i.dist,0):t.drapedLayerOrder!==i.drapedLayerOrder?ne(t.drapedLayerOrder,Number.MAX_VALUE)-ne(i.drapedLayerOrder,Number.MAX_VALUE):ne(i.drapedLayerGraphicOrder,Number.MIN_VALUE)-ne(t.drapedLayerGraphicOrder,Number.MIN_VALUE))}}function Of(r){return new gu(r)}class vu{constructor(){this.min=new Dr($t()),this.max=new Dr($t()),this.hud={min:new Ys($t()),max:new Ys($t()),all:new Array},this.ground=new Dr($t()),this.all=[]}init(e){this.min.init(e),this.max.init(e),this.ground.init(e),this.all.length=0,this.hud.min.init(e),this.hud.max.init(e),this.hud.all.length=0}}class Dr{constructor(e){this.intersector=Wt.OBJECT,this.normal=j(),this.transformation=le(),this._ray=$t(),this.init(e)}get ray(){return this._ray}get distanceInRenderSpace(){return x(this.dist)?(ce(wi,this.ray.direction,this.dist),wt(wi)):null}getIntersectionPoint(e){return!!mu(this)&&(ce(wi,this.ray.direction,this.dist),_e(e,this.ray.origin,wi),!0)}getTransformedNormal(e){return te(Br,this.normal),Br[3]=0,Rr(Br,Br,this.transformation),te(e,Br),Oe(e,e)}init(e){this.dist=null,this.target=null,this.drapedLayerOrder=null,this.drapedLayerGraphicOrder=null,this.intersector=Wt.OBJECT,zs(e,this._ray)}set(e,t,i,s,a,o,n){this.intersector=e,this.dist=i,te(this.normal,ne(s,Dl)),ft(this.transformation,ne(a,cr)),this.target=t,this.drapedLayerOrder=o,this.drapedLayerGraphicOrder=n}copy(e){zs(e.ray,this._ray),this.intersector=e.intersector,this.dist=e.dist,this.target=e.target,this.drapedLayerOrder=e.drapedLayerOrder,this.drapedLayerGraphicOrder=e.drapedLayerGraphicOrder,te(this.normal,e.normal),ft(this.transformation,e.transformation)}}class Ys extends Dr{constructor(){super(...arguments),this.intersector=Wt.HUD}}function _u(r){return new Dr(r)}const wi=j(),Br=ot();function yu(r){const e=new Map,t=i=>{let s=e.get(i);return s||(s=new pu,e.set(i,s)),s};return r.removes.forAll(i=>{bs(i)&&t(i.material).removes.push(i)}),r.adds.forAll(i=>{bs(i)&&t(i.material).adds.push(i)}),r.updates.forAll(i=>{bs(i.renderGeometry)&&t(i.renderGeometry.material).updates.push(i)}),e}function bs(r){return r.data.indexCount>=1}class Su extends bc{constructor(e=j()){super(),this.origin=e,this.slicePlaneLocalOrigin=this.origin}}class Tu{constructor(){this.enabled=!0,this._time=0}get time(){return Il(this._time)}advance(e){return x(e.forcedTime)?this._time!==e.forcedTime&&(this._time=e.forcedTime,!0):!(!this.enabled||e.dt===0)&&(this._time+=e.dt,!0)}}function yo(r,e){e.spherical?r.vertex.code.add(p`vec3 getLocalUp(in vec3 pos, in vec3 origin) {
return normalize(pos + origin);
}`):r.vertex.code.add(p`vec3 getLocalUp(in vec3 pos, in vec3 origin) {
return vec3(0.0, 0.0, 1.0);
}`),e.spherical?r.vertex.code.add(p`mat3 getTBNMatrix(in vec3 n) {
vec3 t = normalize(cross(vec3(0.0, 0.0, 1.0), n));
vec3 b = normalize(cross(n, t));
return mat3(t, b, n);
}`):r.vertex.code.add(p`mat3 getTBNMatrix(in vec3 n) {
vec3 t = vec3(1.0, 0.0, 0.0);
vec3 b = normalize(cross(n, t));
return mat3(t, b, n);
}`)}function xu(r){r.fragment.code.add(p`float normals2FoamIntensity(vec3 n, float waveStrength){
float normalizationFactor =  max(0.015, waveStrength);
return max((n.x + n.y)*0.3303545/normalizationFactor + 0.3303545, 0.0);
}`)}function wu(r){r.fragment.code.add(p`vec3 foamIntensity2FoamColor(float foamIntensityExternal, float foamPixelIntensity, vec3 skyZenitColor, float dayMod){
return foamIntensityExternal * (0.075 * skyZenitColor * pow(foamPixelIntensity, 4.) +  50.* pow(foamPixelIntensity, 23.0)) * dayMod;
}`)}function Ou(r){r.fragment.code.add(p`const float GAMMA = 2.2;
const float INV_GAMMA = 0.4545454545;
vec4 delinearizeGamma(vec4 color) {
return vec4(pow(color.rgb, vec3(INV_GAMMA)), color.w);
}
vec3 linearizeGamma(vec3 color) {
return pow(color, vec3(GAMMA));
}`)}class Cu extends li{constructor(e,t){super(e,"samplerCube",Pc.Pass,(i,s,a)=>i.bindTexture(e,t(s,a)))}}function Ru(r){const e=r.fragment;e.uniforms.add([new ar("rotationMatrixClouds",(t,i)=>i.clouds.parallax.transform),new ar("rotationMatrixCloudsCrossFade",(t,i)=>i.clouds.parallaxNew.transform),new mt("anchorPosition",(t,i)=>i.clouds.parallax.anchorPointClouds),new mt("anchorPositionCrossFade",(t,i)=>i.clouds.parallaxNew.anchorPointClouds),new qe("cloudVariables",(t,i)=>x(i.clouds.data)?yt(Au,i.clouds.data.coverage,i.clouds.data.absorption):Ml),new pe("cloudsHeight",(t,i)=>i.clouds.parallax.cloudsHeight),new pe("radiusCurvatureCorrectionFactor",(t,i)=>i.clouds.parallax.radiusCurvatureCorrectionFactor),new pe("totalFadeInOut",(t,i)=>i.clouds.fadeInOut.stage===Gi.FINISHED?i.clouds.fadeInOutHeight.factor+Math.max(jt(i.clouds.fadeIn.factor,0,1)):i.clouds.fadeInOutHeight.factor+Math.max(jt(i.clouds.fadeInOut.factor,0,1))),new pe("crossFadeAnchorFactor",(t,i)=>jt(i.clouds.crossFade.factor,0,1)),new Cu("cubeMap",(t,i)=>x(i.clouds.data)?i.clouds.data.cubeMap.colorTexture:null),new Ec("crossFade",(t,i)=>i.clouds.crossFade.enabled)]),e.constants.add("planetRadius","float",$l.radius),e.code.add(p`vec3 intersectWithCloudLayer(vec3 dir, vec3 cameraPosition, vec3 spherePos)
{
float radiusClouds = planetRadius + cloudsHeight;
float B = 2.0 * dot(cameraPosition, dir);
float C = dot(cameraPosition, cameraPosition) - radiusClouds * radiusClouds;
float det = B * B - 4.0 * C;
float pointIntDist = max(0.0, 0.5 *(-B + sqrt(det)));
vec3 intersectionPont = cameraPosition + dir * pointIntDist;
intersectionPont =  intersectionPont - spherePos;
return intersectionPont;
}`),e.code.add(p`vec3 correctForPlanetCurvature(vec3 dir)
{
dir.z = dir.z*(1.-radiusCurvatureCorrectionFactor) + radiusCurvatureCorrectionFactor;
return dir;
}`),e.code.add(p`vec3 rotateDirectionToAnchorPoint(mat4 rotMat, vec3 inVec)
{
return (rotMat * vec4(inVec, 0.0)).xyz;
}`),e.uniforms.add([new mt("lightingMainDirection",(t,i)=>i.lighting.lightingMainDirection),new mt("lightingMainIntensity",(t,i)=>i.lighting.mainLight.intensity)]),e.code.add(p`const float SUNSET_TRANSITION_FACTOR = 0.3;
const vec3 RIM_COLOR = vec3(0.28, 0.175, 0.035);
const float RIM_SCATTERING_FACTOR = 140.0;
const float BACKLIGHT_FACTOR = 0.2;
const float BACKLIGHT_SCATTERING_FACTOR = 10.0;
const float BACKLIGHT_TRANSITION_FACTOR = 0.3;
vec3 calculateCloudColor(vec3 cameraPosition, vec3 worldSpaceRay, vec4 clouds)
{
float upDotLight = dot(normalize(cameraPosition), normalize(lightingMainDirection));
float dirDotLight = max(dot(normalize(-worldSpaceRay), normalize(lightingMainDirection)), 0.0);
float sunsetTransition = clamp(pow(max(upDotLight, 0.0), SUNSET_TRANSITION_FACTOR), 0.0, 1.0);
vec3 ambientLight = calculateAmbientIrradiance(normalize(cameraPosition),  0.0);
vec3 mainLight = evaluateMainLighting(normalize(cameraPosition),  0.0);
vec3 combinedLight = clamp((lightingMainIntensity + ambientLight )/PI, vec3(0.0), vec3(1.0));
vec3 baseCloudColor = pow(combinedLight * pow(clouds.xyz, vec3(GAMMA)), vec3(INV_GAMMA));
float scatteringMod = max(clouds.a < 0.5 ? clouds.a / 0.5 : - clouds.a / 0.5 + 2.0, 0.0);
float rimLightIntensity = 0.5 + 0.5 *pow(max(upDotLight, 0.0), 0.35);
vec3 directSunScattering = RIM_COLOR * rimLightIntensity * pow(dirDotLight, RIM_SCATTERING_FACTOR) * scatteringMod;
float additionalLight = BACKLIGHT_FACTOR * pow(dirDotLight, BACKLIGHT_SCATTERING_FACTOR) * (1. - pow(sunsetTransition, BACKLIGHT_TRANSITION_FACTOR)) ;
return vec3(baseCloudColor * (1. + additionalLight) + directSunScattering);
}`),e.code.add(p`vec4 getCloudData(vec3 rayDir)
{
vec4 cloudData = textureCube(cubeMap, rayDir);
float mu = dot(rayDir, vec3(0, 0, 1));
return mix(vec4(vec3(clamp(1.0 - cloudVariables.y, 0.6, 1.0)), 0.0), cloudData, smoothstep(-0.01, mix(0.0, 0.075, cloudVariables.x), abs(mu)));
}`),e.code.add(p`vec4 renderCloudsNoFade(vec3 worldRay, vec3 cameraPosition)
{
vec3 intersectionPoint = intersectWithCloudLayer(normalize(worldRay), cameraPosition, anchorPosition);
vec3 worldRayRotated = rotateDirectionToAnchorPoint(rotationMatrixClouds, normalize(intersectionPoint));
vec3 worldRayRotatedCorrected = correctForPlanetCurvature(worldRayRotated);
vec4 cloudData = getCloudData(worldRayRotatedCorrected);
float totalTransmittance = clamp(cloudData.a * (1.0 - totalFadeInOut) + totalFadeInOut, 0.0 , 1.0);
if (length(cloudData.rgb) == 0.0) {
totalTransmittance = 1.0;
}
return vec4(calculateCloudColor(cameraPosition, normalize(-worldRay), cloudData), totalTransmittance);
}`),e.code.add(p`vec4 renderCloudsCrossFade(vec3 worldRay, vec3 cameraPosition)
{
vec3 intersectionPoint = intersectWithCloudLayer(normalize(worldRay), cameraPosition, anchorPosition);
vec3 worldRayRotated = rotateDirectionToAnchorPoint(rotationMatrixClouds, normalize(intersectionPoint));
vec3 worldRayRotatedCorrected = correctForPlanetCurvature(worldRayRotated);
vec4 cloudData = getCloudData(worldRayRotatedCorrected);
vec4 cloudColor = vec4(calculateCloudColor(cameraPosition, normalize(-worldRay), cloudData), cloudData.a);
intersectionPoint = intersectWithCloudLayer(normalize(worldRay), cameraPosition, anchorPositionCrossFade);
worldRayRotated = rotateDirectionToAnchorPoint(rotationMatrixCloudsCrossFade, normalize(intersectionPoint));
worldRayRotatedCorrected = correctForPlanetCurvature(worldRayRotated);
cloudData = getCloudData(worldRayRotatedCorrected);
vec4 cloudColorCrossFade = vec4(calculateCloudColor(cameraPosition, normalize(-worldRay), cloudData), cloudData.a);
cloudColor = mix(cloudColor, cloudColorCrossFade, crossFadeAnchorFactor);
float totalTransmittance = clamp(cloudColor.a * (1.0 - totalFadeInOut) + totalFadeInOut, 0.0 , 1.0);
if (length(cloudColor.rgb) == 0.0) {
totalTransmittance = 1.0;
}
return vec4(cloudColor.rgb, totalTransmittance);
}`),e.code.add(p`vec4 renderClouds(vec3 worldRay, vec3 cameraPosition)
{
return crossFade ? renderCloudsCrossFade(worldRay, cameraPosition) : renderCloudsNoFade(worldRay, cameraPosition);
}`)}const Au=fe();function bu(r,e){r.include(Dc,e),r.include(Ou),r.include(wu),e.hasCloudsReflections&&r.include(Ru,e),e.hasScreenSpaceReflections&&r.include(iu,e);const t=r.fragment;t.constants.add("fresnelSky","vec3",[.02,1,15]).add("fresnelMaterial","vec2",[.02,.1]).add("roughness","float",.015).add("foamIntensityExternal","float",1.7).add("ssrIntensity","float",.65).add("ssrHeightFadeStart","float",3e5).add("ssrHeightFadeEnd","float",5e5).add("waterDiffusion","float",.92).add("waterSeaColorMod","float",.8).add("correctionViewingPowerFactor","float",.4).add("skyZenitColor","vec3",[.52,.68,.9]).add("skyColor","vec3",[.67,.79,.9]).add("cloudFresnelModifier","vec2",[1.2,.01]),t.code.add(p`PBRShadingWater shadingInfo;
vec3 getSkyGradientColor(in float cosTheta, in vec3 horizon, in vec3 zenit) {
float exponent = pow((1.0 - cosTheta), fresnelSky[2]);
return mix(zenit, horizon, exponent);
}`),t.uniforms.add([new pe("lightingSpecularStrength",(i,s)=>s.lighting.mainLight.specularStrength),new pe("lightingEnvironmentStrength",(i,s)=>s.lighting.mainLight.environmentStrength)]),t.code.add(p`vec3 getSeaColor(in vec3 n, in vec3 v, in vec3 l, vec3 color, in vec3 lightIntensity, in vec3 localUp, in float shadow, float foamIntensity, vec3 viewPosition, vec3 position) {
float reflectionHit = 0.0;
float reflectionHitDiffused = 0.0;
vec3 seaWaterColor = linearizeGamma(color);
vec3 h = normalize(l + v);
shadingInfo.NdotL = clamp(dot(n, l), 0.0, 1.0);
shadingInfo.NdotV = clamp(dot(n, v), 0.001, 1.0);
shadingInfo.VdotN = clamp(dot(v, n), 0.001, 1.0);
shadingInfo.NdotH = clamp(dot(n, h), 0.0, 1.0);
shadingInfo.VdotH = clamp(dot(v, h), 0.0, 1.0);
shadingInfo.LdotH = clamp(dot(l, h), 0.0, 1.0);
float upDotV = max(dot(localUp,v), 0.0);
vec3 skyHorizon = linearizeGamma(skyColor);
vec3 skyZenit = linearizeGamma(skyZenitColor);
vec3 skyColor = getSkyGradientColor(upDotV, skyHorizon, skyZenit );
float upDotL = max(dot(localUp,l),0.0);
float daytimeMod = 0.1 + upDotL * 0.9;
skyColor *= daytimeMod;
float shadowModifier = clamp(shadow, 0.8, 1.0);
vec3 fresnelModifier = fresnelReflection(shadingInfo.VdotN, vec3(fresnelSky[0]), fresnelSky[1]);
vec3 reflSky = lightingEnvironmentStrength * fresnelModifier * skyColor * shadowModifier;
vec3 reflSea = seaWaterColor * mix(skyColor, upDotL * lightIntensity * LIGHT_NORMALIZATION, 2.0 / 3.0) * shadowModifier;
vec3 specular = vec3(0.0);
if(upDotV > 0.0 && upDotL > 0.0) {
vec3 specularSun = brdfSpecularWater(shadingInfo, roughness, vec3(fresnelMaterial[0]), fresnelMaterial[1]);
vec3 incidentLight = lightIntensity * LIGHT_NORMALIZATION * shadow;
specular = lightingSpecularStrength * shadingInfo.NdotL * incidentLight * specularSun;
}
vec3 foam = vec3(0.0);
if(upDotV > 0.0) {
foam = foamIntensity2FoamColor(foamIntensityExternal, foamIntensity, skyZenitColor, daytimeMod);
}
float correctionViewingFactor = pow(max(dot(v, localUp), 0.0), correctionViewingPowerFactor);
vec3 normalCorrectedClouds = mix(localUp, n, correctionViewingFactor);
vec3 reflectedWorld = normalize(reflect(-v, normalCorrectedClouds));`),e.hasCloudsReflections&&t.code.add(p`vec4 cloudsColor = renderClouds(reflectedWorld, position);
cloudsColor.a = 1.0 - cloudsColor.a;
cloudsColor = pow(cloudsColor, vec4(GAMMA));
cloudsColor *= clamp(fresnelModifier.y*cloudFresnelModifier[0] - cloudFresnelModifier[1], 0.0, 1.0) * clamp((1.0 - totalFadeInOut), 0.0, 1.0);`),e.hasScreenSpaceReflections?t.code.add(p`vec3 viewDir = normalize(viewPosition);
vec4 viewNormalVectorCoordinate = view *vec4(n, 0.0);
vec3 viewNormal = normalize(viewNormalVectorCoordinate.xyz);
vec4 viewUp = view *vec4(localUp, 0.0);
vec3 viewNormalCorrectedSSR = mix(viewUp.xyz, viewNormal, correctionViewingFactor);
vec3 reflected = normalize(reflect(viewDir, viewNormalCorrectedSSR));
vec3 hitCoordinate = screenSpaceIntersection(reflected, viewPosition, viewDir, viewUp.xyz);
vec3 reflectedColor = vec3(0.0);
if (hitCoordinate.z > 0.0)
{
vec2 reprojectedCoordinate = reprojectionCoordinate(hitCoordinate);
vec2 dCoords = smoothstep(0.3, 0.6, abs(vec2(0.5, 0.5) - hitCoordinate.xy));
float heightMod = smoothstep(ssrHeightFadeEnd, ssrHeightFadeStart, -viewPosition.z);
reflectionHit = clamp(1.0 - (1.3*dCoords.y), 0.0, 1.0) * heightMod;
reflectionHitDiffused = waterDiffusion * reflectionHit;
reflectedColor = linearizeGamma(texture2D(lastFrameColorMap, reprojectedCoordinate).xyz)* reflectionHitDiffused * fresnelModifier.y * ssrIntensity;
}
float seaColorMod =  mix(waterSeaColorMod, waterSeaColorMod*0.5, reflectionHitDiffused);
vec3 waterRenderedColor = tonemapACES((1.0 - reflectionHitDiffused) * reflSky + reflectedColor + reflSea * seaColorMod + specular  + foam);`):t.code.add(p`vec3 waterRenderedColor = tonemapACES(reflSky + reflSea * waterSeaColorMod + specular + foam);`),e.hasCloudsReflections?e.hasScreenSpaceReflections?t.code.add(p`return waterRenderedColor * (1.0 - (1.0 - reflectionHit) * cloudsColor.a) + (1.0 - reflectionHit) * cloudsColor.xyz;
}`):t.code.add(p`return waterRenderedColor * (1.0 - cloudsColor.a) + cloudsColor.xyz;
}`):t.code.add(p`return waterRenderedColor;
}`)}function So(r){r.fragment.uniforms.add(new pt("texWaveNormal")),r.fragment.uniforms.add(new pt("texWavePerturbation")),r.fragment.uniforms.add([new We("waveParams",e=>nr(Pu,e.waveStrength,e.waveTextureRepeat,e.flowStrength,e.flowOffset)),new qe("waveDirection",e=>yt(Eu,e.waveDirection[0]*e.waveVelocity,e.waveDirection[1]*e.waveVelocity))]),r.include(xu),r.fragment.code.add(p`const vec2  FLOW_JUMP = vec2(6.0/25.0, 5.0/24.0);
vec2 textureDenormalized2D(sampler2D _tex, vec2 _uv) {
return 2.0 * texture2D(_tex, _uv).rg - 1.0;
}
float sampleNoiseTexture(vec2 _uv) {
return texture2D(texWavePerturbation, _uv).b;
}
vec3 textureDenormalized3D(sampler2D _tex, vec2 _uv) {
return 2.0 * texture2D(_tex, _uv).rgb - 1.0;
}
float computeProgress(vec2 uv, float time) {
return fract(time);
}
float computeWeight(vec2 uv, float time) {
float progress = computeProgress(uv, time);
return 1.0 - abs(1.0 - 2.0 * progress);
}
vec3 computeUVPerturbedWeigth(sampler2D texFlow, vec2 uv, float time, float phaseOffset) {
float flowStrength = waveParams[2];
float flowOffset = waveParams[3];
vec2 flowVector = textureDenormalized2D(texFlow, uv) * flowStrength;
float progress = computeProgress(uv, time + phaseOffset);
float weight = computeWeight(uv, time + phaseOffset);
vec2 result = uv;
result -= flowVector * (progress + flowOffset);
result += phaseOffset;
result += (time - progress) * FLOW_JUMP;
return vec3(result, weight);
}
const float TIME_NOISE_TEXTURE_REPEAT = 0.3737;
const float TIME_NOISE_STRENGTH = 7.77;
vec3 getWaveLayer(sampler2D _texNormal, sampler2D _dudv, vec2 _uv, vec2 _waveDir, float time) {
float waveStrength = waveParams[0];
vec2 waveMovement = time * -_waveDir;
float timeNoise = sampleNoiseTexture(_uv * TIME_NOISE_TEXTURE_REPEAT) * TIME_NOISE_STRENGTH;
vec3 uv_A = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.0);
vec3 uv_B = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.5);
vec3 normal_A = textureDenormalized3D(_texNormal, uv_A.xy) * uv_A.z;
vec3 normal_B = textureDenormalized3D(_texNormal, uv_B.xy) * uv_B.z;
vec3 mixNormal = normalize(normal_A + normal_B);
mixNormal.xy *= waveStrength;
mixNormal.z = sqrt(1.0 - dot(mixNormal.xy, mixNormal.xy));
return mixNormal;
}
vec4 getSurfaceNormalAndFoam(vec2 _uv, float _time) {
float waveTextureRepeat = waveParams[1];
vec3 normal = getWaveLayer(texWaveNormal, texWavePerturbation, _uv * waveTextureRepeat, waveDirection, _time);
float foam  = normals2FoamIntensity(normal, waveParams[0]);
return vec4(normal, foam);
}`)}const Pu=ot(),Eu=fe();function Du(r){const e=new pr,{vertex:t,fragment:i}=e,s=di(e,r);return e.include(ca),e.attributes.add(d.POSITION,"vec3"),e.attributes.add(d.UV0,"vec2"),t.uniforms.add(new We("waterColor",a=>a.color)),r.output!==O.Color&&r.output!==O.Alpha||(e.include(yo,r),e.include(Ic,r),e.varyings.add("vuv","vec2"),e.varyings.add("vpos","vec3"),e.varyings.add("vnormal","vec3"),e.varyings.add("vtbnMatrix","mat3"),i.uniforms.add(s),r.hasMultipassTerrain&&e.varyings.add("depth","float"),t.code.add(p`
      void main(void) {
        if (waterColor.a < ${p.float(rt)}) {
          // Discard this vertex
          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
          return;
        }

        vuv = uv0;
        vpos = position;

        vnormal = getLocalUp(vpos, localOrigin);
        vtbnMatrix = getTBNMatrix(vnormal);

        ${r.hasMultipassTerrain?"depth = (view * vec4(vpos, 1.0)).z;":""}

        gl_Position = transformPosition(proj, view, vpos);
        ${r.output===O.Color?"forwardLinearDepth();":""}
      }
    `)),e.include(na,r),r.output===O.Alpha&&(e.include(Nt,r),i.uniforms.add(new Ei("waterColor")),i.code.add(p`
        void main() {
          discardBySlice(vpos);
          ${r.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}

          gl_FragColor = vec4(waterColor.a);
        }
      `)),r.output===O.Color&&(e.include(Mc,{isGround:!1}),e.include($c,{pbrMode:rn.Disabled,lightingSphericalHarmonicsOrder:2}),e.include(So),e.include(Nt,r),e.include(Lc,r),e.include(bu,r),i.uniforms.add([new Ei("waterColor"),new mt("lightingMainDirection",(a,o)=>o.lighting.lightingMainDirection),new mt("lightingMainIntensity",(a,o)=>o.lighting.mainLight.intensity),new pe("timeElapsed",a=>a.timeElapsed),new Fc("view")]),oa(i,r),i.include(Xi),i.code.add(p`
      void main() {
        discardBySlice(vpos);
        ${r.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
        vec3 localUp = vnormal;
        // the created normal is in tangent space
        vec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);

        // we rotate the normal according to the tangent-bitangent-normal-Matrix
        vec3 n = normalize(vtbnMatrix * tangentNormalFoam.xyz);
        vec3 v = -normalize(vpos - cameraPosition);
        float shadow = ${r.receiveShadows?p`1.0 - readShadowMap(vpos, linearDepth)`:"1.0"};
        vec4 vPosView = view*vec4(vpos, 1.0);
        vec4 final = vec4(getSeaColor(n, v, lightingMainDirection, waterColor.rgb, lightingMainIntensity, localUp, shadow, tangentNormalFoam.w, vPosView.xyz, vpos + localOrigin), waterColor.w);

        // gamma correction
        gl_FragColor = delinearizeGamma(final);
        gl_FragColor = highlightSlice(gl_FragColor, vpos);
        ${r.transparencyPassType===xe.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
      }
    `)),r.output===O.Normal&&(e.include(yo,r),e.include(So,r),e.include(Nt,r),e.varyings.add("vpos","vec3"),e.varyings.add("vuv","vec2"),t.code.add(p`
        void main(void) {
          if (waterColor.a < ${p.float(rt)}) {
            // Discard this vertex
            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
            return;
          }

          vuv = uv0;
          vpos = position;

          gl_Position = transformPosition(proj, view, vpos);
        }
    `),i.uniforms.add(new pe("timeElapsed",a=>a.timeElapsed)),i.code.add(p`void main() {
discardBySlice(vpos);
vec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);
tangentNormalFoam.xyz = normalize(tangentNormalFoam.xyz);
gl_FragColor = vec4((tangentNormalFoam.xyz + vec3(1.0)) * 0.5, tangentNormalFoam.w);
}`)),r.output===O.Draped&&(e.varyings.add("vpos","vec3"),t.code.add(p`
        void main(void) {
          if (waterColor.a < ${p.float(rt)}) {
            // Discard this vertex
            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
            return;
          }

          vpos = position;
          gl_Position = transformPosition(proj, view, vpos);
        }
    `),i.uniforms.add(new Ei("waterColor")),i.code.add(p`void main() {
gl_FragColor = waterColor;
}`)),r.output===O.Highlight&&(e.include(Qi),e.varyings.add("vpos","vec3"),t.code.add(p`
      void main(void) {
        if (waterColor.a < ${p.float(rt)}) {
          // Discard this vertex
          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
          return;
        }

        vpos = position;
        gl_Position = transformPosition(proj, view, vpos);
      }
    `),e.include(Nt,r),i.code.add(p`void main() {
discardBySlice(vpos);
outputHighlight();
}`)),e}const Iu=Object.freeze(Object.defineProperty({__proto__:null,build:Du},Symbol.toStringTag,{value:"Module"}));class rs extends fr{constructor(e,t,i){super(e,t,i),this._textureRepository=e.waterTextureRepository}initializeConfiguration(e,t){t.spherical=e.viewingMode===Bt.Global,t.doublePrecisionRequiresObfuscation=Nc(e.rctx)}initializeProgram(e){const t=rs.shader.get().build(this.configuration);return new mr(e.rctx,t,Fr)}bindPass(e,t){this.program.bindPass(e,t),this.configuration.output!==O.Color&&this.configuration.output!==O.Normal||this._textureRepository.bind(this.program)}_setPipelineState(e){const t=this.configuration,i=e===xe.NONE,s=e===xe.FrontFace;return at({blending:t.output!==O.Normal&&t.output!==O.Highlight&&t.transparent?i?Xr:Zi(e):null,depthTest:{func:ia(e)},depthWrite:i?t.writeDepth&&Mr:Ho(e),colorWrite:vt,polygonOffset:i||s?null:Bo(t.enableOffset)})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}rs.shader=new gr(Iu,()=>kt(()=>import("./WaterSurface.glsl.845f30a4.js"),["assets/WaterSurface.glsl.845f30a4.js","assets/Matrix4Uniform.b7dc351c.js","assets/index.9da382e4.js","assets/index.313b6d72.css","assets/enums.de935fa5.js","assets/Texture.599541db.js","assets/requestImageUtils.4ea1aefd.js","assets/geometryDataUtils.337d3a34.js","assets/triangle.70405bec.js","assets/vectorStacks.f85d4a03.js","assets/quatf64.ddec7ef6.js","assets/mat4f64.84d5c445.js","assets/lineSegment.901d4e43.js","assets/VertexAttribute.5551e0d8.js","assets/VertexArrayObject.4198c73f.js","assets/VertexElementDescriptor.d386088d.js","assets/BufferView.9de22bcf.js","assets/quat.2f83a288.js","assets/vec3f32.0772c8d8.js","assets/sphere.f1597b20.js","assets/plane.f3b639d8.js","assets/InterleavedLayout.e9290885.js","assets/types.28f12cac.js","assets/floatRGBA.b2358e75.js","assets/triangulationUtils.27ba054b.js","assets/earcut.d30cbec0.js","assets/deduplicate.c1f3fafb.js","assets/NestedMap.21c7ee53.js","assets/Octree.5f16cd20.js","assets/boundedPlane.2500e48f.js","assets/glUtil.345a77b1.js","assets/dehydratedFeatures.98692fb8.js"]));class be extends ci{constructor(){super(...arguments),this.output=O.Color,this.transparencyPassType=xe.NONE,this.spherical=!1,this.receiveShadows=!1,this.hasSlicePlane=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!1,this.hasScreenSpaceReflections=!1,this.doublePrecisionRequiresObfuscation=!1,this.hasCloudsReflections=!1,this.isDraped=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}v([C({count:O.COUNT})],be.prototype,"output",void 0),v([C({count:xe.COUNT})],be.prototype,"transparencyPassType",void 0),v([C()],be.prototype,"spherical",void 0),v([C()],be.prototype,"receiveShadows",void 0),v([C()],be.prototype,"hasSlicePlane",void 0),v([C()],be.prototype,"transparent",void 0),v([C()],be.prototype,"enableOffset",void 0),v([C()],be.prototype,"writeDepth",void 0),v([C()],be.prototype,"hasScreenSpaceReflections",void 0),v([C()],be.prototype,"doublePrecisionRequiresObfuscation",void 0),v([C()],be.prototype,"hasCloudsReflections",void 0),v([C()],be.prototype,"isDraped",void 0),v([C()],be.prototype,"hasMultipassTerrain",void 0),v([C()],be.prototype,"cullAboveGround",void 0),v([C({constValue:rn.Water})],be.prototype,"pbrMode",void 0),v([C({constValue:!0})],be.prototype,"useCustomDTRExponentForWater",void 0),v([C({constValue:!0})],be.prototype,"highStepCount",void 0),v([C({constValue:!1})],be.prototype,"useFillLights",void 0);class To extends Yi{_updateShadowState(e){e.shadowMap.enabled!==this._material.parameters.receiveShadows&&this._material.setParameters({receiveShadows:e.shadowMap.enabled})}_updateSSRState(e){e.ssr.enabled!==this._material.parameters.hasScreenSpaceReflections&&this._material.setParameters({hasScreenSpaceReflections:e.ssr.enabled})}_updateCloudsReflectionState(e){const t=x(e.clouds.data);t!==this._material.parameters.hasCloudsReflections&&this._material.setParameters({hasCloudsReflections:t})}ensureResources(e){const t=this._techniqueRepository.constructionContext.waterTextureRepository;return t.resourceState===jo.NOT_LOADED&&t.loadTextures(e),t.resourceState}beginSlot(e){return this._output===O.Color&&(this._updateShadowState(e),this._updateSSRState(e),this._updateCloudsReflectionState(e)),this.ensureTechnique(rs,e)}}class Mu extends hi{constructor(e){super(e,new $u),this._techniqueConfig=new be,this.animation=new Tu}getConfiguration(e,t){return this._techniqueConfig.output=e,this._techniqueConfig.writeDepth=this.parameters.writeDepth,this._techniqueConfig.receiveShadows=this.parameters.receiveShadows,this._techniqueConfig.hasSlicePlane=this.parameters.hasSlicePlane,this._techniqueConfig.transparent=this.parameters.transparent,this._techniqueConfig.hasScreenSpaceReflections=this.parameters.hasScreenSpaceReflections,this._techniqueConfig.hasCloudsReflections=this.parameters.hasCloudsReflections,this._techniqueConfig.isDraped=this.parameters.isDraped,this._techniqueConfig.transparencyPassType=t.transparencyPassType,this._techniqueConfig.enableOffset=t.camera.relativeElevation<Go,this._techniqueConfig.hasMultipassTerrain=t.multipassTerrain.enabled,this._techniqueConfig.cullAboveGround=t.multipassTerrain.cullAboveGround,this._techniqueConfig}update(e){const t=Math.min(e.camera.relativeElevation,e.camera.distance);this.animation.enabled=Math.sqrt(this.parameters.waveTextureRepeat/this.parameters.waveStrength)*t<Lu;const i=this.animation.advance(e);return this.setParameters({timeElapsed:Ll(this.animation.time)*this.parameters.animationSpeed},!1),this.animation.enabled&&i}intersect(e,t,i,s,a,o,n){tn(e,t,s,a,o,void 0,n)}requiresSlot(e,t){switch(ri(t)){case O.Normal:return e===se.DRAPED_WATER;case O.Color:if(this.parameters.isDraped)return e===se.DRAPED_MATERIAL;break;case O.Highlight:return e===se.OPAQUE_MATERIAL||e===se.DRAPED_MATERIAL}let i=se.OPAQUE_MATERIAL;return this.parameters.transparent&&(i=this.parameters.writeDepth?se.TRANSPARENT_MATERIAL:se.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL),e===i}createGLMaterial(e){if(e.output===O.Color&&this.parameters.isDraped)return e.output=O.Draped,new To(e);switch(e.output){case O.Color:case O.Normal:case O.Highlight:case O.Alpha:return new To(e)}return null}createBufferWriter(){return new ga(Ih)}}class $u extends da{constructor(){super(...arguments),this.waveStrength=.06,this.waveTextureRepeat=32,this.waveDirection=ea(1,0),this.waveVelocity=.05,this.flowStrength=.015,this.flowOffset=-.5,this.animationSpeed=.35,this.timeElapsed=0,this.color=$i(0,0,0,0),this.transparent=!0,this.writeDepth=!0,this.hasSlicePlane=!1,this.isDraped=!1,this.receiveShadows=!0,this.hasScreenSpaceReflections=!1,this.hasCloudsReflections=!1}}const Lu=35e3;class xo{constructor(e){this.first=e.from,this.count=e.to-e.from}}class Cr{constructor(e=0,t=0){this.from=e,this.to=t}}class Fu extends Cr{constructor(e,t,i,s,a,o){super(t,i),this.id=e,this.isVisible=s,this.hasHighlights=a,this.hasOccludees=o}}function wo(r){return Array.from(r.values()).sort(Nu)}function Nu(r,e){return r.from===e.from?r.to-e.to:r.from-e.from}function Oi(r,e){if(r.length===0)return void r.push(new xo(e));const t=r[r.length-1];if(zu(t,e)){const i=e.from-t.first+e.to-e.from;t.count=i}else r.push(new xo(e))}function zu(r,e){return r.first+r.count>=e.from}class Uu{constructor(e,t){this._pool=e,this._size=0,this._buffer=e.newBuffer(Qs(t))}dispose(){this._buffer=this._pool.deleteBuffer(this._buffer),this._size=0}release(){this.erase(0,this._size),this.dispose()}get vao(){return this._buffer.vao}get array(){return this._buffer.array}get size(){return this._size}grow(e){this._resize(this._size+e,!0).dispose()}alloc(e){return this._resize(e,!1)}_resize(e,t){let i;const s=Vu(this._buffer.length,this._size,e);if(this._buffer.length!==s){const o=this._pool.newBuffer(s);t&&(o.array.set(this._buffer.array.subarray(0,Math.min(this._size,s))),o.vao.vertexBuffers.geometry.setSubData(o.array,0,0,o.array.byteLength)),i=this._buffer,this._buffer=o}const a=this._size;return this._size=e,i?{dispose:()=>{i.array.fill(0,0,a),this._pool.deleteBuffer(i)},copy:(o,n,c)=>this._buffer.array.set(i.array.subarray(n,c),o),hasNewBuffer:!0}:{dispose:()=>{},copy:(o,n,c)=>{o!==n&&this._buffer.array.copyWithin(o,n,c)},hasNewBuffer:!1}}erase(e,t){this._buffer.array.fill(0,e,t)}}const Oo=65536;function Qs(r){return Math.ceil(r/Oo)*Oo}function Vu(r,e,t){return e<=t?r>=t?r:Qs(Math.max(2*r,t)):r<=2*t?r:Qs(t)}class ju{constructor(e,t,i,s){this.vao=new Jc(e,t,{geometry:i},{geometry:Yc.createVertex(e,Zc.STATIC_DRAW)}),this.array=new Float32Array(s),this.vao.vertexBuffers.geometry.setSize(this.array.byteLength)}dispose(){this.vao.dispose(!0)}get length(){return this.array.length}}const Hu=Nl+1;class Bu{constructor(e,t,i){this._rctx=e,this._locations=t,this._layout=i,this._cache=e.newCache(`MergedRenderer pool ${oi()}`,Gu)}dispose(){this._cache.destroy()}newBuffer(e){const t=e.toString(),i=this._cache.pop(t);if(x(i)){const s=i.pop();return i.length>0&&this._cache.put(t,i,s.array.byteLength*i.length,Hu),s}return new ju(this._rctx,this._locations,this._layout,e)}deleteBuffer(e){const t=e.array.byteLength,i=e.array.length.toString(),s=this._cache.pop(i);return x(s)?(s.push(e),this._cache.put(i,s,t*s.length,-1)):this._cache.put(i,[e],t,-1),null}}function Gu(r,e){if(e===Fl.ALL)return void r.forEach(s=>s.dispose());const t=r.pop(),i=r.length*t.array.byteLength;return t.dispose(),i}class Wu{constructor(e,t,i){this._rctx=e,this._materialRepository=t,this._material=i,this.type="MergedRenderer",this._dataByOrigin=new Map,this._renderCommandData=new Ot,this._hasHighlights=!1,this._hasOccludees=!1,this._glMaterials=new cd(this._material,this._materialRepository),this._bufferWriter=i.createBufferWriter(),this._bufferPool=new Bu(e,i.vertexAttributeLocations,rd(this._bufferWriter.vertexBufferLayout))}dispose(){this._glMaterials.destroy(),this._dataByOrigin.forEach(e=>e.buffer.dispose()),this._dataByOrigin.clear(),this._bufferPool.dispose()}get isEmpty(){return this._dataByOrigin.size===0}get hasHighlights(){return this._hasHighlights}get hasOccludees(){return this._hasOccludees}get hasWater(){return!this.isEmpty&&this._material instanceof Mu}get rendersOccluded(){return!this.isEmpty&&this._material.renderOccluded!==Ht.Occlude}modify(e){this._updateGeometries(e.updates),this._addAndRemoveGeometries(e.adds,e.removes),this._updateRenderCommands()}_addAndRemoveGeometries(e,t){const i=this._bufferWriter,s=i.vertexBufferLayout.stride/4,a=this._dataByOrigin,o=ku(e,t);o.forEach((n,c)=>{o.delete(c);const l=n.toAdd.reduce((R,E)=>R+i.elementCount(E.data),0);let h=a.get(c);if(h==null)Ee(n.toRemove.length===0),h=new Xu(n.origin,new Uu(this._bufferPool,l*s)),a.set(c,h);else if(n.toAdd.length===0&&h.instances.size===n.toRemove.length)return h.buffer.dispose(),void a.delete(c);let u=0;h.instances.forEach(R=>u+=R.to-R.from);const f=n.toRemove.reduce((R,E)=>R+i.elementCount(E.data),0),S=h.buffer.size,w=(u+l-f)*s,b=Yu;if(w<S/2?this._removeAndRebuild(h,n.toRemove,s,w,b):n.toRemove.length>0&&this._remove(h,n.toRemove,s,b),n.toAdd.length>0){const R=Qu;zl(R,-n.origin[0],-n.origin[1],-n.origin[2]),this._add(h,n.toAdd,s,R,b)}const U=h.buffer.vao.vertexBuffers.geometry;Ao(b),b.forAll(({from:R,to:E})=>{if(R<E){const y=h.buffer.array,_=4,m=R*_,g=E*_;U.setSubData(y,m,m,g)}}),b.clear(),h.drawCommandsDirty=!0})}_updateGeometries(e){const t=this._bufferWriter,i=t.vertexBufferLayout.stride/4;for(const s of e){const a=s.renderGeometry,o=this._dataByOrigin.get(a.origin.id),n=o&&o.instances.get(a.id);if(!n)return;const c=s.updateType;if(c&et.State.VISIBILITIES&&(n.isVisible=a.instanceParameters.visible),c&(et.State.HIGHLIGHTS|et.State.VISIBILITIES)){const l=a.instanceParameters.visible;n.hasHighlights=!!a.instanceParameters.highlights&&l}if(c&et.State.OCCLUDEES&&(n.hasOccludees=!!a.instanceParameters.occludees),c&(et.State.VERTEXATTRS|et.State.TRANSFORMATION)){const{array:l,vao:h}=o.buffer;zc(a,Ps,Gr),t.write({transformation:Ps,invTranspTransformation:Gr},a.data,t.vertexBufferLayout.createView(l.buffer),n.from),Ee(n.from+t.elementCount(a.data)===n.to,"material VBO layout has changed"),h.vertexBuffers.geometry.setSubData(l,n.from*i*4,n.from*i*4,n.to*i*4)}o.drawCommandsDirty=!0}}_updateRenderCommands(){this._hasHighlights=!1,this._hasOccludees=!1,this._dataByOrigin.forEach(t=>{t.hasHiddenInstances=!1,t.hasHighlights=!1,t.hasOccludees=!1,Lt(t.instances,i=>(i.isVisible?(i.hasHighlights&&(this._hasHighlights=!0,t.hasHighlights=!0),i.hasOccludees&&(this._hasOccludees=!0,t.hasOccludees=!0)):t.hasHiddenInstances=!0,t.hasHiddenInstances&&t.hasHighlights&&t.hasOccludees))});const e=t=>{if(t.drawCommandsDefault=null,t.drawCommandsHighlight=null,t.drawCommandsOccludees=null,t.drawCommandsShadowHighlightRest=null,t.instances.size===0)return;if(!Ro(t)){const s=this._bufferWriter.vertexBufferLayout.stride,a=4*t.buffer.size/s;return void(t.drawCommandsDefault=[{first:0,count:a}])}const i=wo(t.instances);t.drawCommandsDefault=[],t.drawCommandsHighlight=[],t.drawCommandsOccludees=[],t.drawCommandsShadowHighlightRest=[];for(const s of i)s.isVisible&&(s.hasOccludees?Oi(t.drawCommandsOccludees,s):Oi(t.drawCommandsDefault,s),s.hasHighlights?Oi(t.drawCommandsHighlight,s):Oi(t.drawCommandsShadowHighlightRest,s))};this._dataByOrigin.forEach(t=>{t.drawCommandsDirty&&(e(t),t.drawCommandsDirty=!1)})}updateAnimation(e){return this._material.update(e)}requiresSlot(e,t){return e==null||this._material.requiresSlot(e,t)}render(e,t){if(!this.requiresSlot(t.slot,e))return!1;const i=e===ye.MATERIAL_HIGHLIGHT||e===ye.MATERIAL_DEPTH_SHADOWMAP_HIGHLIGHT;if(i&&!this._hasHighlights)return!1;const s=e===ye.MATERIAL_DEPTH_SHADOWMAP_DEFAULT,a=!(i||s);if(this._dataByOrigin.forEach(l=>{if(i&&!l.hasHighlights)return;const h=(i?l.drawCommandsHighlight:s&&Ro(l)?l.drawCommandsShadowHighlightRest:l.drawCommandsDefault)||null,u=a&&l.drawCommandsOccludees||null;(x(h)||x(u))&&this._renderCommandData.push(new Ju(l.origin,l.buffer,h,u))}),this._renderCommandData.length===0)return!1;const o=this._rctx,n=this._glMaterials.load(o,e);if(K(n))return this._renderCommandData.clear(),!1;const c=n.beginSlot(t);return o.bindTechnique(c,this._material.parameters,t,!1),this._renderCommandData.forAll(l=>{c.bindDraw(l,t);const{buffer:h,renderCommands:u,occludeeCommands:f}=l;c.ensureAttributeLocations(h.vao),o.bindVAO(h.vao);const S=c.primitiveType;x(u)&&this._renderCommands(o,S,u),x(f)&&(c.bindPipelineState(o,t.slot,!0),this._renderCommands(o,S,f),c.bindPipelineState(o,t.slot,!1))}),this._renderCommandData.clear(),!0}_renderCommands(e,t,i){for(let s=0;s<i.length;s++)e.drawArrays(t,i[s].first,i[s].count)}_removeAndRebuild(e,t,i,s,a){for(const h of t)e.instances.delete(h.id);const o=wo(e.instances);e.instances.clear();const n=e.buffer.size,c=e.buffer.alloc(s);let l=0;for(const h of o){const u=h.from*i,f=h.to*i;c.copy(l,u,f),h.from=l/i,l+=f-u,h.to=l/i,e.instances.set(h.id,h)}a.push(new Cr(0,c.hasNewBuffer?e.buffer.array.length:n)),c.dispose(),e.buffer.erase(l,a.back().to),e.holes.clear()}_remove(e,t,i,s){for(const a of t){const o=a.id,n=e.instances.get(o),c=n.from*i,l=n.to*i;e.buffer.erase(c,l),e.holes.push(new Cr(n.from,n.to)),e.instances.delete(o),s.push(new Cr(c,l))}Ao(e.holes)}_add(e,t,i,s,a){if(t.length===0)return;const o=this._bufferWriter;let n=o.vertexBufferLayout.createView(e.buffer.array.buffer);const c=e.holes.length>0;let l=Number.MAX_SAFE_INTEGER,h=Number.MIN_SAFE_INTEGER;for(const u of t){const f=x(u.transformation)?lr(Ps,s,u.transformation):s;Pr(Gr,f);const S=zo(Gr,Gr),w=o.elementCount(u.data),b=w*i;let U=Zu(e.holes,w);K(U)&&(U=e.buffer.size/i,e.buffer.grow(b),n=o.vertexBufferLayout.createView(e.buffer.array.buffer)),o.write({transformation:f,invTranspTransformation:S},u.data,n,U);const R=u.instanceParameters.visible,E=!!u.instanceParameters.highlights&&R,y=!!u.instanceParameters.occludees,_=new Fu(u.id,U,U+w,R,E,y);Ee(e.instances.get(u.id)==null),e.instances.set(u.id,_),c?a.push(new Cr(_.from*i,_.to*i)):(l=Math.min(_.from,l),h=Math.max(_.to,h))}c||a.push(new Cr(l*i,h*i))}get test(){return{material:this._material,glMaterials:this._glMaterials,dataByOrigin:this._dataByOrigin}}}class qu{constructor(e){this.origin=e,this.toAdd=new Array,this.toRemove=new Array}}function ku(r,e){const t=new Map;for(const i of r)Co(t,i,!0);for(const i of e)Co(t,i,!1);return t}function Co(r,e,t){const i=e.origin;if(K(i))return;let s=r.get(i.id);s==null&&(s=new qu(i.vec3),r.set(i.id,s)),t?s.toAdd.push(e):s.toRemove.push(e)}function Ro(r){return r.hasOccludees||r.hasHighlights||r.hasHiddenInstances}function Zu(r,e){let t;if(!r.some(s=>!(s.to-s.from<e)&&(t=s,!0)))return null;const i=t.from;return t.from+=e,t.from>=t.to&&r.removeUnordered(t),i}function Ao(r){const e=new Map;r.forAll(i=>e.set(i.from,i));let t=!0;for(;t;)t=!1,r.forEach(i=>{const s=e.get(i.to);s&&(i.to=s.to,e.delete(s.from),r.removeUnordered(s),t=!0)})}class Xu{constructor(e,t){this.origin=e,this.buffer=t,this.instances=new Map,this.holes=new Ot({deallocator:null}),this.hasHiddenInstances=!1,this.hasHighlights=!1,this.hasOccludees=!1,this.drawCommandsDirty=!1}}class Ju extends Su{constructor(e,t,i,s){super(e),this.buffer=t,this.renderCommands=i,this.occludeeCommands=s}}const Yu=new Ot({deallocator:null}),Qu=le(),Ps=le(),Gr=le();let xt=class extends ta{constructor(r){super(r),this._pending=new Ku,this._changes=new hu,this._materialRenderers=new Map,this._sortedMaterialRenderers=new Ot,this._geometries=new Map,this._hasHighlights=!1,this._hasWater=!1}destroy(){this._changes.prune(),this._materialRenderers.forEach(r=>r.dispose()),this._materialRenderers.clear(),this._sortedMaterialRenderers.clear(),this._geometries.clear()}get updating(){return!this._pending.empty||this._changes.updates.length>0}get rctx(){return this.rendererContext.rctx}get _materialRepository(){return this.rendererContext.materialRepository}get _localOriginFactory(){return this.rendererContext.localOriginFactory}get hasHighlights(){return this._hasHighlights}get hasWater(){return this._hasWater}get rendersOccluded(){return Lt(this._materialRenderers,r=>r.rendersOccluded)}get isEmpty(){return!this.updating&&this._materialRenderers.size===0&&this._geometries.size===0}commitChanges(){if(!this.updating)return!1;this._processAddsRemoves();const r=yu(this._changes);let e=!1,t=!1,i=!1;return r.forEach((s,a)=>{let o=this._materialRenderers.get(a);if(!o&&s.adds.length>0&&(o=new Wu(this.rctx,this._materialRepository,a),this._materialRenderers.set(a,o),e=!0,t=!0,i=!0),!o)return;const n=t||o.hasHighlights,c=i||o.hasWater;o.modify(s),t=t||n!==o.hasHighlights,i=i||c!==o.hasWater,o.isEmpty&&(this._materialRenderers.delete(a),o.dispose(),e=!0)}),this._changes.clear(),e&&this._updateSortedMaterialRenderers(),t&&(this._hasHighlights=Lt(this._materialRenderers,s=>s.hasHighlights)),i&&(this._hasWater=Lt(this._materialRenderers,s=>s.hasWater)),this.notifyChange("updating"),!0}addGeometries(r,e){if(r.length===0)return;const t=this._validateRenderGeometries(r);for(const s of t)this._geometries.set(s.id,s);const i=this._pending.empty;for(const s of t)this._pending.adds.add(s);i&&this.notifyChange("updating"),e===et.Geometry.UPDATE&&this._notifyGraphicGeometryChanged(r)}removeGeometries(r,e){const t=this._pending.empty,i=this._pending.adds;for(const s of r)i.has(s)?(this._pending.removed.add(s),i.delete(s)):this._pending.removed.has(s)||this._pending.removes.add(s),this._geometries.delete(Ul(s.id));t&&!this._pending.empty&&this.notifyChange("updating"),e===et.Geometry.UPDATE&&this._notifyGraphicGeometryChanged(r)}modifyGeometries(r,e){const t=this._changes.updates.length===0;for(const i of r){const s=this._changes.updates.pushNew();s.renderGeometry=this._validateRenderGeometry(i),s.updateType=e}switch(t&&this._changes.updates.length>0&&this.notifyChange("updating"),e){case et.State.TRANSFORMATION:case et.State.VERTEXATTRS:return this._notifyGraphicGeometryChanged(r);case et.State.VISIBILITIES:return this._notifyGraphicVisibilityChanged(r)}}updateAnimation(r){let e=!1;return this._sortedMaterialRenderers.forAll(({materialRenderer:t})=>e=t.updateAnimation(r)||e),e}render(r,e){for(let t=0;t<this._sortedMaterialRenderers.length;t++){const i=this._sortedMaterialRenderers.data[t];i.material.shouldRender(r)&&i.materialRenderer.render(r.pass,e)}}intersect(r,e,t,i,s){return this._geometries.forEach(a=>{if(i&&!i(a))return;this._intersectRenderGeometry(a,t,e,0,r,s);const o=this.rendererContext.longitudeCyclical;o&&(a.boundingSphere[0]-a.boundingSphere[3]<o.min&&this._intersectRenderGeometry(a,t,e,o.range,r,s),a.boundingSphere[0]+a.boundingSphere[3]>o.max&&this._intersectRenderGeometry(a,t,e,-o.range,r,s)),s++}),s}_updateSortedMaterialRenderers(){this._sortedMaterialRenderers.clear();let r=0;this._materialRenderers.forEach((e,t)=>{t.insertOrder=r++,this._sortedMaterialRenderers.push({material:t,materialRenderer:e})}),this._sortedMaterialRenderers.sort((e,t)=>{const i=t.material.renderPriority-e.material.renderPriority;return i!==0?i:e.material.insertOrder-t.material.insertOrder})}_processAddsRemoves(){this._changes.adds.clear(),this._changes.removes.clear(),this._changes.adds.pushArray(Array.from(this._pending.adds)),this._changes.removes.pushArray(Array.from(this._pending.removes));for(let r=0;r<this._changes.updates.length;){const e=this._changes.updates.data[r];this._pending.has(e.renderGeometry)?this._changes.updates.removeUnorderedIndex(r):r++}this._pending.clear()}_intersectRenderGeometry(r,e,t,i,s,a){if(!r.instanceParameters.visible)return;let o=0;x(r.transformation)&&(i+=r.transformation[12],o=r.transformation[13]),Ci[0]=t[0]-i,Ci[1]=t[1]-o,Ci[2]=1,Ri[0]=t[0]-i,Ri[1]=t[1]-o,Ri[2]=0,r.screenToWorldRatio=this.rendererContext.screenToWorldRatio,r.material.intersect(r,null,r.getShaderTransformation(),s,Ci,Ri,(n,c,l)=>{ep(e,l,r.material.renderPriority,a,s,r.layerUid,r.graphicUid)},r.calculateShaderTransformation,e)}_notifyGraphicGeometryChanged(r){if(K(this.drapeSource.notifyGraphicGeometryChanged))return;let e;for(const t of r){const i=t.graphicUid;x(i)&&i!==e&&(this.drapeSource.notifyGraphicGeometryChanged(i),e=i)}}_notifyGraphicVisibilityChanged(r){if(K(this.drapeSource.notifyGraphicVisibilityChanged))return;let e;for(const t of r){const i=t.graphicUid;x(i)&&i!==e&&(this.drapeSource.notifyGraphicVisibilityChanged(i),e=i)}}_validateRenderGeometries(r){for(const e of r)this._validateRenderGeometry(e);return r}_validateRenderGeometry(r){return K(r.origin)&&(r.origin=this._localOriginFactory.getOrigin(r.boundingSphere)),r}get test(){return{sortedMaterialRenderers:this._sortedMaterialRenderers}}};v([ie()],xt.prototype,"drapeSource",void 0),v([ie()],xt.prototype,"updating",null),v([ie()],xt.prototype,"rctx",null),v([ie()],xt.prototype,"rendererContext",void 0),v([ie()],xt.prototype,"_materialRepository",null),v([ie()],xt.prototype,"_localOriginFactory",null),xt=v([ra("esri.views.3d.webgl-engine.lib.SortedRenderGeometryRenderer")],xt);class Ku{constructor(){this.adds=new Set,this.removes=new Set,this.removed=new Set}get empty(){return this.adds.size===0&&this.removes.size===0&&this.removed.size===0}has(e){return this.adds.has(e)||this.removes.has(e)||this.removed.has(e)}clear(){this.adds.clear(),this.removes.clear(),this.removed.clear()}}function ep(r,e,t,i,s,a,o){const n={layerUid:a,graphicUid:o,triangleNr:e},c=l=>{l.set(Wt.OVERLAY,n,r.dist,r.normal,r.transformation,t,i)};if((s.results.min.drapedLayerOrder==null||t>=s.results.min.drapedLayerOrder)&&(s.results.min.dist==null||s.results.ground.dist<=s.results.min.dist)&&c(s.results.min),s.options.store!==ur.MIN&&(s.results.max.drapedLayerOrder==null||t<s.results.max.drapedLayerOrder)&&(s.results.max.dist==null||s.results.ground.dist>s.results.max.dist)&&c(s.results.max),s.options.store===ur.ALL){const l=_u(s.ray);c(l),s.results.all.push(l)}}const Ci=j(),Ri=j();class Es extends li{constructor(e){super(e,"vec2")}}var qt;(function(r){r[r.SSAO=0]="SSAO",r[r.Blur=1]="Blur",r[r.COUNT=2]="COUNT"})(qt||(qt={}));class Un extends ha{constructor(){super(...arguments),this.output=qt.SSAO}}v([C({count:qt.COUNT})],Un.prototype,"output",void 0);const Wr={samples:16,filterRadius:4};function tp(r){const e=new pr,t=e.fragment;if(e.include(un),r.output===qt.Blur){const i=(Wr.filterRadius+1)/2,s=1/(2*i*i);t.include(ei),t.uniforms.add([new pt("normalMap"),new pt("depthMap"),new pt("tex"),new Es("blurSize"),new Ut("projScale"),new qe("nearFar",(a,o)=>o.camera.nearFar)]),t.code.add(p`
      void blurFunction(vec2 uv, float r, float center_d, float sharpness, inout float wTotal, inout float bTotal) {
        float c = texture2D(tex, uv).r;
        float d = linearDepthFromTexture(depthMap, uv, nearFar);

        float ddiff = d - center_d;

        float w = exp(-r * r * ${p.float(s)} - ddiff * ddiff * sharpness);
        wTotal += w;
        bTotal += w * c;
      }
    `),t.code.add(p`
      void main(void) {
        float b = 0.0;
        float w_total = 0.0;

        float center_d = linearDepthFromTexture(depthMap, uv, nearFar);

        float sharpness = -0.05 * projScale/center_d;
        for (int r = -${p.int(Wr.filterRadius)}; r <= ${p.int(Wr.filterRadius)}; ++r) {
          float rf = float(r);
          vec2 uvOffset = uv + rf * blurSize;
          blurFunction(uvOffset, rf, center_d, sharpness, w_total, b);
        }

        gl_FragColor = vec4(b / w_total);
      }
    `)}return r.output===qt.SSAO&&(t.include(ei),e.include(ad),t.uniforms.add(new pt("normalMap")),t.uniforms.add(new pt("depthMap")),t.uniforms.add(new pt("rnm")),t.uniforms.add(new Ut("intensity")),t.uniforms.add(new Ut("projScale")),t.uniforms.add(new Ut("radius")),t.uniforms.add(new qe("nearFar",(i,s)=>s.camera.nearFar)),t.uniforms.add(new Es("screenSize")),t.uniforms.add(new Es("rnmScale")),t.code.add(p`vec3 sphere[16];
void fillSphere() {
sphere[0] = vec3(0.186937, 0.0, 0.0);
sphere[1] = vec3(0.700542, 0.0, 0.0);
sphere[2] = vec3(-0.864858, -0.481795, -0.111713);
sphere[3] = vec3(-0.624773, 0.102853, -0.730153);
sphere[4] = vec3(-0.387172, 0.260319, 0.007229);
sphere[5] = vec3(-0.222367, -0.642631, -0.707697);
sphere[6] = vec3(-0.01336, -0.014956, 0.169662);
sphere[7] = vec3(0.122575, 0.1544, -0.456944);
sphere[8] = vec3(-0.177141, 0.85997, -0.42346);
sphere[9] = vec3(-0.131631, 0.814545, 0.524355);
sphere[10] = vec3(-0.779469, 0.007991, 0.624833);
sphere[11] = vec3(0.308092, 0.209288,0.35969);
sphere[12] = vec3(0.359331, -0.184533, -0.377458);
sphere[13] = vec3(0.192633, -0.482999, -0.065284);
sphere[14] = vec3(0.233538, 0.293706, -0.055139);
sphere[15] = vec3(0.417709, -0.386701, 0.442449);
}
float fallOffFunction(float vv, float vn, float bias) {
float f = max(radius * radius - vv, 0.0);
return f * f * f * max(vn-bias, 0.0);
}`),t.code.add(p`float aoValueFromPositionsAndNormal(vec3 C, vec3 n_C, vec3 Q) {
vec3 v = Q - C;
float vv = dot(v, v);
float vn = dot(normalize(v), n_C);
return fallOffFunction(vv, vn, 0.1);
}`),e.fragment.uniforms.add(new qe("zScale",(i,s)=>hn(s))),t.code.add(p`
      void main(void) {
        fillSphere();
        vec3 fres = normalize((texture2D(rnm, uv * rnmScale).xyz * 2.0) - vec3(1.0));
        float currentPixelDepth = linearDepthFromTexture(depthMap, uv, nearFar);

        if (-currentPixelDepth>nearFar.y || -currentPixelDepth<nearFar.x) {
          gl_FragColor = vec4(0.0);
          return;
        }

        vec3 currentPixelPos = reconstructPosition(gl_FragCoord.xy,currentPixelDepth);

        // get the normal of current fragment
        vec4 norm4 = texture2D(normalMap, uv);
        vec3 norm = vec3(-1.0) + 2.0 * norm4.xyz;
        bool isTerrain = norm4.w<0.5;

        float sum = .0;
        vec3 tapPixelPos;

        // note: the factor 2.0 should not be necessary, but makes ssao much nicer.
        // bug or deviation from CE somewhere else?
        float ps = projScale/(2.0 * currentPixelPos.z * zScale.x + zScale.y);

        for(int i = 0; i < ${p.int(Wr.samples)}; ++i) {
          vec2 unitOffset = reflect(sphere[i], fres).xy;
          vec2 offset = vec2(-unitOffset * radius * ps);

          //don't use current or very nearby samples
          if ( abs(offset.x)<2.0 || abs(offset.y)<2.0) continue;

          vec2 tc = vec2(gl_FragCoord.xy + offset);
          if (tc.x < 0.0 || tc.y < 0.0 || tc.x > screenSize.x || tc.y > screenSize.y) continue;
          vec2 tcTap = tc / screenSize;
          float occluderFragmentDepth = linearDepthFromTexture(depthMap, tcTap, nearFar);

          if (isTerrain) {
            bool isTerrainTap = texture2D(normalMap, tcTap).w<0.5;
            if (isTerrainTap) {
              continue;
            }
          }

          tapPixelPos = reconstructPosition(tc, occluderFragmentDepth);

          sum+= aoValueFromPositionsAndNormal(currentPixelPos, norm, tapPixelPos);
        }

        // output the result
        float A = max(1.0-sum*intensity/float(${p.int(Wr.samples)}),0.0);

        // Anti-tone map to reduce contrast and drag dark region farther: (x^0.2 + 1.2 * x^4)/2.2
        A = (pow(A, 0.2) + 1.2 * A*A*A*A) / 2.2;
        gl_FragColor = vec4(A);
      }
    `)),e}const rp=Object.freeze(Object.defineProperty({__proto__:null,build:tp},Symbol.toStringTag,{value:"Module"}));class ii extends fr{initializeProgram(e){const t=ii.shader.get().build(this.configuration);return new mr(e.rctx,t,Fr)}initializePipeline(){return at({colorWrite:vt})}}ii.shader=new gr(rp,()=>kt(()=>import("./SSAO.glsl.00600495.js"),["assets/SSAO.glsl.00600495.js","assets/Matrix4Uniform.b7dc351c.js","assets/index.9da382e4.js","assets/index.313b6d72.css","assets/enums.de935fa5.js","assets/Texture.599541db.js","assets/requestImageUtils.4ea1aefd.js","assets/geometryDataUtils.337d3a34.js","assets/triangle.70405bec.js","assets/vectorStacks.f85d4a03.js","assets/quatf64.ddec7ef6.js","assets/mat4f64.84d5c445.js","assets/lineSegment.901d4e43.js","assets/VertexAttribute.5551e0d8.js","assets/VertexArrayObject.4198c73f.js","assets/VertexElementDescriptor.d386088d.js","assets/BufferView.9de22bcf.js","assets/quat.2f83a288.js","assets/vec3f32.0772c8d8.js","assets/sphere.f1597b20.js","assets/plane.f3b639d8.js","assets/InterleavedLayout.e9290885.js","assets/types.28f12cac.js","assets/floatRGBA.b2358e75.js","assets/triangulationUtils.27ba054b.js","assets/earcut.d30cbec0.js","assets/deduplicate.c1f3fafb.js","assets/NestedMap.21c7ee53.js","assets/Octree.5f16cd20.js","assets/boundedPlane.2500e48f.js","assets/glUtil.345a77b1.js","assets/dehydratedFeatures.98692fb8.js"]));class ip{constructor(e,t,i){this._techniqueRep=e,this._rctx=t,this._requestRender=i,this._enabled=!1,this._ssaoTechniqueConfig=new Un,this.quadVAO=null,this._blurSizePx=2,this._attenuation=.5}dispose(){this.quadVAO=Fe(this.quadVAO)}disposeOffscreenBuffers(){cs(this._ssaoFBO,e=>e.resize(0,0)),cs(this._blur0FBO,e=>e.resize(0,0)),cs(this._blur1FBO,e=>e.resize(0,0))}set enabled(e){e?this._enable():this._disable()}get enabled(){return this._enabled}get ready(){return this.enabled&&x(this._noiseTexture)&&x(this._ssaoFBO)&&x(this._blur0FBO)&&x(this._blur1FBO)}get colorTexture(){return x(this._blur1FBO)?this._blur1FBO.colorTexture:null}get width(){return x(this._ssaoFBO)?this._ssaoFBO.width:-1}get height(){return x(this._ssaoFBO)?this._ssaoFBO.height:-1}computeSSAO(e,t,i){if(!this.enabled||K(t)||K(i)||K(this._noiseTexture)||K(this._ssaoFBO)||K(this._blur0FBO)||K(this._blur1FBO))return;const s=this._rctx,a=e.camera,o=a.fullViewport,n=o[2],c=o[3],l=n/this._blurSizePx,h=c/this._blurSizePx;this._ssaoFBO.resize(n,c),this._blur0FBO.resize(l,h),this._blur1FBO.resize(l,h);const u=1,f=1,S=n*u,w=c*f;s.bindFramebuffer(this._ssaoFBO),s.setViewport(0,0,n,c);const b=s.bindTechnique(this._ssaoTechnique,bo,e);b.setUniform2f("rnmScale",n/this._noiseTexture.descriptor.width,c/this._noiseTexture.descriptor.height);let U=1/a.computeRenderPixelSizeAtDist(1);b.setUniform1f("projScale",U*u),b.setUniform2f("screenSize",S,w);const R=Rt(a.eye,a.center);let E=20*a.computeRenderPixelSizeAtDist(R);E=Math.max(.1,E),b.setUniform1f("radius",E),b.setUniform1f("intensity",4*this._attenuation/E**6),b.bindTexture("rnm",this._noiseTexture),b.bindTexture("normalMap",i),b.bindTexture("depthMap",t),K(this.quadVAO)&&(this.quadVAO=sn(this._rctx)),s.bindVAO(this.quadVAO),s.drawArrays(Ct.TRIANGLE_STRIP,0,Pi(this.quadVAO,"geometry"));const y=s.bindTechnique(this._blurTechnique,bo,e);y.bindTexture("tex",this._ssaoFBO.colorTexture),y.bindTexture("normalMap",i),y.bindTexture("depthMap",t),s.setViewport(0,0,S/this._blurSizePx,w/this._blurSizePx),s.bindFramebuffer(this._blur0FBO),y.setUniform2f("screenSize",S,w),y.setUniform2f("blurSize",0,this._blurSizePx*u/w),R>5e4&&(U=Math.max(0,U-(R-5e4))),y.setUniform1f("projScale",U),s.drawArrays(Ct.TRIANGLE_STRIP,0,Pi(this.quadVAO,"geometry")),y.setUniform2f("blurSize",this._blurSizePx*f/S,0),s.bindFramebuffer(this._blur1FBO),y.bindTexture("tex",this._blur0FBO.colorTexture),s.drawArrays(Ct.TRIANGLE_STRIP,0,Pi(this.quadVAO,"geometry")),s.setViewport(o[0],o[1],o[2],o[3])}_selectPrograms(){this._ssaoTechniqueConfig.output=qt.SSAO,this._ssaoTechnique=this._techniqueRep.releaseAndAcquire(ii,this._ssaoTechniqueConfig,this._ssaoTechnique),this._ssaoTechniqueConfig.output=qt.Blur,this._blurTechnique=this._techniqueRep.releaseAndAcquire(ii,this._ssaoTechniqueConfig,this._blurTechnique)}_enable(){this.enabled||(this._enabled=!0,this._loadResources(()=>{this._enabled&&this._initialize()}))}_loadResources(e){this._data?e():kt(()=>import("./SSAOHelperData.08f44d75.js"),[]).then(t=>{this._data=t,e()})}_initialize(){const e={target:or.TEXTURE_2D,pixelFormat:Gt.RGBA,dataType:hr.UNSIGNED_BYTE,samplingMode:ti.LINEAR,wrapMode:dr.CLAMP_TO_EDGE,width:0,height:0},t={colorTarget:pa.TEXTURE,depthStencilTarget:fa.NONE};nc(this._data.noiseTexture).then(i=>{this._enabled&&(this._ssaoFBO=new Yr(this._rctx,t,e),this._blur0FBO=new Yr(this._rctx,t,e),this._blur1FBO=new Yr(this._rctx,t,e),this._noiseTexture=new ir(this._rctx,{target:or.TEXTURE_2D,pixelFormat:Gt.RGBA,dataType:hr.UNSIGNED_BYTE,hasMipmap:!0,width:i.width,height:i.height},i),this._requestRender())}),this._selectPrograms()}_disable(){this._enabled=!1,this._noiseTexture=Fe(this._noiseTexture),this._blur1FBO=Fe(this._blur1FBO),this._blur0FBO=Fe(this._blur0FBO),this._ssaoFBO=Fe(this._ssaoFBO)}get gpuMemoryUsage(){return(x(this._blur0FBO)?this._blur0FBO.gpuMemoryUsage:0)+(x(this._blur1FBO)?this._blur1FBO.gpuMemoryUsage:0)+(x(this._ssaoFBO)?this._ssaoFBO.gpuMemoryUsage:0)}get test(){return{ssao:this._ssaoFBO,blur:this._blur1FBO}}}const bo=new Uc;function sp(){const r=new pr;return r.include(un),r.fragment.uniforms.add([new pt("tex"),new Ei("uColor")]),r.fragment.code.add(p`void main() {
vec4 texColor = texture2D(tex, uv);
gl_FragColor = texColor * uColor;
}`),r}const ap=Object.freeze(Object.defineProperty({__proto__:null,build:sp},Symbol.toStringTag,{value:"Module"}));class is extends fr{initializeProgram(e){const t=is.shader.get().build();return new mr(e.rctx,t,Fr)}initializePipeline(){return this.configuration.hasAlpha?at({blending:Wo(gt.SRC_ALPHA,gt.ONE,gt.ONE_MINUS_SRC_ALPHA,gt.ONE_MINUS_SRC_ALPHA),colorWrite:vt}):at({colorWrite:vt})}}is.shader=new gr(ap,()=>kt(()=>import("./TextureOnly.glsl.fa1c2aa9.js"),["assets/TextureOnly.glsl.fa1c2aa9.js","assets/Matrix4Uniform.b7dc351c.js","assets/index.9da382e4.js","assets/index.313b6d72.css","assets/enums.de935fa5.js","assets/Texture.599541db.js","assets/requestImageUtils.4ea1aefd.js","assets/geometryDataUtils.337d3a34.js","assets/triangle.70405bec.js","assets/vectorStacks.f85d4a03.js","assets/quatf64.ddec7ef6.js","assets/mat4f64.84d5c445.js","assets/lineSegment.901d4e43.js","assets/VertexAttribute.5551e0d8.js","assets/VertexArrayObject.4198c73f.js","assets/VertexElementDescriptor.d386088d.js","assets/BufferView.9de22bcf.js","assets/quat.2f83a288.js","assets/vec3f32.0772c8d8.js","assets/sphere.f1597b20.js","assets/plane.f3b639d8.js","assets/InterleavedLayout.e9290885.js","assets/types.28f12cac.js","assets/floatRGBA.b2358e75.js","assets/triangulationUtils.27ba054b.js","assets/earcut.d30cbec0.js","assets/deduplicate.c1f3fafb.js","assets/NestedMap.21c7ee53.js","assets/Octree.5f16cd20.js","assets/boundedPlane.2500e48f.js","assets/glUtil.345a77b1.js","assets/dehydratedFeatures.98692fb8.js"]));class Vn extends ha{constructor(){super(...arguments),this.hasAlpha=!1}}v([C()],Vn.prototype,"hasAlpha",void 0);class op{constructor(e){this._rctx=e,this.cache=new Map}dispose(){this.cache.forEach(e=>e.texture=Fe(e.texture)),this.cache.clear()}_acquire(e){if(K(e))return null;const t=this._patternId(e),i=this.cache.get(t);if(i)return i.refCount++,i.bind;const s=e.pixelRatio,{encodedData:a,sdfNormalizer:o,pixels:n,paddedPixels:c}=np(e.pattern,s),l=n/s,h={refCount:1,texture:null,bind:u=>(K(h.texture)&&(h.texture=new ir(this._rctx,{width:c,height:1,internalFormat:Gt.RGBA,pixelFormat:Gt.RGBA,dataType:hr.UNSIGNED_BYTE,wrapMode:dr.CLAMP_TO_EDGE},a)),u.bindTexture("stipplePatternTexture",h.texture),{pixelSize:l,sdfNormalizer:o,pixels:n})};return this.cache.set(t,h),h.bind}release(e){if(K(e))return;const t=this._patternId(e),i=this.cache.get(t);i&&(i.refCount--,i.refCount===0&&(x(i.texture)&&i.texture.dispose(),this.cache.delete(t)))}swap(e,t){const i=this._acquire(t);return this.release(e),i}_patternId(e){return`${e.pattern.join(",")}-r${e.pixelRatio}`}}function np(r,e){const t=r.map(w=>Math.round(w*e)),i=1/e,s=Math.floor(t.reduce((w,b)=>w+b)),a=t.reduce((w,b)=>Math.max(w,b)),o=(Math.floor(.5*(a-1))+.5)*i,n=[];let c=1;for(const w of t){for(let b=0;b<w;b++){const U=c*(Math.min(b,w-1-b)+.5)*i/o*.5+.5;n.push(U)}c=-c}const l=Math.round(t[0]/2),h=[...n.slice(l),...n.slice(0,l)],u=s+2,f=new Uint8Array(4*u);let S=4;for(const w of h)on(w,f,S),S+=4;return f.copyWithin(0,S-4,S),f.copyWithin(S,4,8),{encodedData:f,sdfNormalizer:o,paddedPixels:u,pixels:s}}var si,ai;(function(r){r[r.Standard=0]="Standard",r[r.TransparentToHUDVisibility=1]="TransparentToHUDVisibility",r[r.Transparency=2]="Transparency",r[r.OverlayWithTransparency=3]="OverlayWithTransparency",r[r.COUNT=4]="COUNT"})(si||(si={})),function(r){r[r.None=0]="None",r[r.Alpha=1]="Alpha",r[r.PremultipliedAlpha=2]="PremultipliedAlpha",r[r.COUNT=3]="COUNT"}(ai||(ai={}));class Ds extends ha{constructor(){super(...arguments),this.function=si.Standard,this.alphaMode=ai.None,this.hasOpacityFactor=!1}}v([C({count:si.COUNT})],Ds.prototype,"function",void 0),v([C({count:ai.COUNT})],Ds.prototype,"alphaMode",void 0),v([C()],Ds.prototype,"hasOpacityFactor",void 0);let dt=class extends Xh(ta){constructor(r){super(r),this._overlays=null,this._overlayRenderTarget=null,this._hasHighlights=!1,this._rendersOccluded=!1,this._hasWater=!1,this._handles=new $o,this._frameTask=Vl,this._drapeSourceRenderers=new Map,this._sortedDrapeSourceRenderersDirty=!1,this._sortedDrapeSourceRenderers=new Ot,this._rctx=null,this._materialRepository=null,this._screenToWorldRatio=1,this._localOriginFactory=null,this.worldToPCSRatio=1,this.events=new Mo,this.longitudeCyclical=null}get _bindParameters(){return this._renderContext.bindParameters}get rctx(){return this._rctx}get materialRepository(){return this._materialRepository}get screenToWorldRatio(){return this._screenToWorldRatio}get localOriginFactory(){return this._localOriginFactory}initialize(){const r=this.view._stage.renderView;this._rctx=r.renderingContext;const e=r.waterTextureRepository;this._stippleTextureRepository=new op(r.renderingContext),this._shaderTechniqueRepository=new kh({rctx:this._rctx,viewingMode:Bt.Local,stippleTextureRepository:this._stippleTextureRepository,waterTextureRepository:e}),this._renderContext=new ou(this._rctx,new nu(this._rctx,this.view.state.viewingMode),new ip(this._shaderTechniqueRepository,this._rctx,()=>{})),this._handles.add([ds(()=>e.updating,()=>this.events.emit("content-changed"),Pa),ds(()=>this.spatialReference,t=>this._localOriginFactory=new tu(t),Pa),jl(()=>this.view.allLayerViews,"after-changes",()=>this._sortedDrapeSourceRenderersDirty=!0)]),this._materialRepository=new Qh(r.textureRepository,this._shaderTechniqueRepository,t=>{(t.renderOccluded&Po)>0!==this._rendersOccluded&&this._updateRendersOccluded(),this.events.emit("content-changed"),this.notifyChange("updating")},()=>this.events.emit("content-changed")),this._bindParameters.slot=se.DRAPED_MATERIAL,this._bindParameters.highlightDepthTexture=Vc(this._rctx),this._bindParameters.camera=sr,this._bindParameters.transparencyPassType=xe.NONE,this._bindParameters.lighting.groundLightingFactor=1,this._bindParameters.lighting.globalFactor=0,this._bindParameters.lighting.set([new jc(Ir(1,1,1))]),this._frameTask=this.view.resourceController.scheduler.registerTask(Hl.STAGE,this),this._handles.add(this._frameTask)}dispose(){this._handles.destroy(),this._drapeSourceRenderers.forEach(r=>r.destroy()),this._drapeSourceRenderers.clear(),this._debugTextureTechnique=Bl(this._debugTextureTechnique),this._debugPatternTexture=Fe(this._debugPatternTexture),this._bindParameters.highlightDepthTexture=Fe(this._bindParameters.highlightDepthTexture),this._shaderTechniqueRepository=Fe(this._shaderTechniqueRepository),this._temporaryFBO=Fe(this._temporaryFBO),this._quadVAO=Fe(this._quadVAO),this.disposeOverlays()}get updating(){return this._sortedDrapeSourceRenderersDirty||this._frameTask.updating||Lt(this._drapeSourceRenderers,r=>r.updating)}get hasOverlays(){return x(this._overlays)&&x(this._overlayRenderTarget)}get gpuMemoryUsage(){return x(this._overlayRenderTarget)?this._overlayRenderTarget.gpuMemoryUsage:0}createGeometryDrapeSourceRenderer(r){return this.createDrapeSourceRenderer(r,xt)}createDrapeSourceRenderer(r,e,t){const i=this._drapeSourceRenderers.get(r);x(i)&&i.destroy();const s=new e({...t,rendererContext:this,drapeSource:r});return this._drapeSourceRenderers.set(r,s),this._sortedDrapeSourceRenderersDirty=!0,"fullOpacity"in r&&this._handles.add(ds(()=>r.fullOpacity,()=>this.events.emit("content-changed")),r),s}removeDrapeSourceRenderer(r){if(K(r))return;const e=this._drapeSourceRenderers.get(r);K(e)||(this._sortedDrapeSourceRenderersDirty=!0,this._drapeSourceRenderers.delete(r),this._handles.remove(r),e.destroy())}collectUnusedRenderTargetMemory(r){let e=!1;if(x(this._overlayRenderTarget))for(const t of this._overlayRenderTarget.renderTargets){const i=this.overlays[0].validTargets[t.type]||!this.overlays[1].validTargets[t.type];e=this._overlayRenderTarget.validateUsageForTarget(i,t,r)||e}return e}get overlays(){return ne(this._overlays,[])}ensureDrapeTargets(r){x(this._overlays)&&this._overlays.forEach(e=>{e.hasTargetWithoutRasterImage=hs(r,t=>t.drapeTargetType===Zs.WithoutRasterImage)})}ensureDrapeSources(r){x(this._overlays)&&this._overlays.forEach(e=>{e.hasDrapedFeatureSource=hs(r,t=>t.drapeSourceType===Qr.Features),e.hasDrapedRasterSource=hs(r,t=>t.drapeSourceType===Qr.RasterImage)})}ensureOverlays(r,e){K(this._overlays)&&(this._overlayRenderTarget=new Wh(this._rctx),this._overlays=[new eo(Ai.INNER,this._overlayRenderTarget),new eo(Ai.OUTER,this._overlayRenderTarget)]),this.ensureDrapeTargets(r),this.ensureDrapeSources(e)}disposeOverlays(){this._overlays=null,this._overlayRenderTarget=Fe(this._overlayRenderTarget),this.events.emit("textures-disposed")}get running(){return this.updating}runTask(r,e=()=>!0){this._frameTask.processQueue(r),r.done||this._processDrapeSources(r,e)}_processDrapeSources(r,e){let t=!1;for(const[i,s]of this._drapeSourceRenderers){if(r.done)break;(i.destroyed||e(i))&&s.commitChanges()&&(t=!0,r.madeProgress())}this._updateSortedDrapeSourceRenderers(),t&&(x(this._overlays)&&this._drapeSourceRenderers.size===0&&this.disposeOverlays(),this.notifyChange("updating"),this.events.emit("content-changed"),this._updateHasHighlights(),this._updateRendersOccluded(),this._updateHasWater())}processSyncDrapeSources(){this._processDrapeSources(Gl,r=>r.updatePolicy===Vs.SYNC)}isEmpty(){if(Ka.OVERLAY_DRAW_DEBUG_TEXTURE)return!1;for(const r of this._drapeSourceRenderers.values())if(!r.isEmpty)return!1;return!0}get hasHighlights(){return this._hasHighlights}get hasWater(){return this._hasWater}get rendersOccluded(){return this._rendersOccluded}updateAnimation(r){let e=!1;return this._drapeSourceRenderers.forEach(t=>e=t.updateAnimation(r)||e),e}updateDrapeSourceOrder(){this._sortedDrapeSourceRenderersDirty=!0}drawTarget(r,e,t){const i=r.canvasGeometries;if(i.numViews===0)return!1;this._screenToWorldRatio=t*r.mapUnitsPerPixel;const s=e.renderPass;if(this.isEmpty()||s===ye.MATERIAL_HIGHLIGHT&&!this.hasHighlights||s===ye.MATERIAL_NORMAL&&!this.hasWater||!r.hasSomeSizedView())return!1;const a=e.fbo;if(!a.isValid())return!1;const o=2*r.resolution,n=r.resolution;a.resize(o,n);const c=this._rctx;sr.pixelRatio=r.pixelRatio*t,this._renderContext.pass=s,this._bindParameters.screenToWorldRatio=this._screenToWorldRatio,this._bindParameters.screenToPCSRatio=this._screenToWorldRatio*this.worldToPCSRatio,this._bindParameters.slot=s===ye.MATERIAL_NORMAL?se.DRAPED_WATER:se.DRAPED_MATERIAL,r.applyViewport(this._rctx),a.bind(c),r.index===Ai.INNER&&(c.setClearColor(0,0,0,0),c.clearSafe(zi.COLOR_BUFFER_BIT));const l=e.type===Pe.ColorNoRasterImage?Mt.ExcludeRasterImage:e.type===Pe.Occluded?Mt.OccludedOnly:Mt.Normal;if(l===Mt.OccludedOnly&&(this._renderContext.renderOccludedMask=Po),Ka.OVERLAY_DRAW_DEBUG_TEXTURE&&l!==Mt.OccludedOnly)for(let h=0;h<i.numViews;h++)this._setViewParameters(i.extents[h],r,sr),this._drawDebugTexture(r.resolution,cp[r.index]);return this._drapeSourceRenderers.size>0&&this._sortedDrapeSourceRenderers.forAll(({drapeSource:h,renderer:u})=>{if(l===Mt.ExcludeRasterImage&&h.drapeSourceType===Qr.RasterImage)return;const{fullOpacity:f}=h,S=x(f)&&f<1&&s===ye.MATERIAL;S&&(this.bindTemporaryFramebuffer(this._rctx,o,n),c.clearSafe(zi.COLOR_BUFFER_BIT));for(let w=0;w<i.numViews;w++)this._setViewParameters(i.extents[w],r,sr),u.render(this._renderContext,this._bindParameters);S&&x(this._temporaryFBO)&&(a.bind(c),this.view._stage.renderView.compositingHelper.composite(this._renderContext.bindParameters,this._temporaryFBO.getTexture(),ai.PremultipliedAlpha,f,si.OverlayWithTransparency,r.index))}),c.bindFramebuffer(null),a.generateMipMap(),this._renderContext.resetRenderOccludedMask(),!0}bindTemporaryFramebuffer(r,e,t){K(this._temporaryFBO)&&(this._temporaryFBO=new zn(r,!1)),this._temporaryFBO.resize(e,t),this._temporaryFBO.bind(r)}async reloadShaders(){await this._shaderTechniqueRepository.reloadAll()}notifyContentChanged(){this.events.emit("content-changed")}intersect(r,e,t,i){var a,o;let s=0;for(const n of this._drapeSourceRenderers.values())s=(o=(a=n.intersect)==null?void 0:a.call(n,r,e,t,i,s))!=null?o:s}_updateSortedDrapeSourceRenderers(){if(!this._sortedDrapeSourceRenderersDirty||(this._sortedDrapeSourceRenderersDirty=!1,this._sortedDrapeSourceRenderers.clear(),this._drapeSourceRenderers.size===0))return;const r=this.view.map.allLayers;this._drapeSourceRenderers.forEach((e,t)=>{const i=r.indexOf(t.layer);this._sortedDrapeSourceRenderers.push(new lp(t,e,i<0?1/0:i))}),this._sortedDrapeSourceRenderers.sort((e,t)=>e.index-t.index)}_setViewParameters(r,e,t){t.viewport[0]=t.viewport[1]=0,t.viewport[2]=t.viewport[3]=e.resolution,Vo(t.projectionMatrix,0,r[2]-r[0],0,r[3]-r[1],t.near,t.far),Wl(t.viewMatrix,[-r[0],-r[1],0]),this._bindParameters.camera=t}_updateHasWater(){const r=Lt(this._drapeSourceRenderers,e=>e.hasWater);r!==this._hasWater&&(this._hasWater=r,this.events.emit("has-water",r))}_updateHasHighlights(){const r=Lt(this._drapeSourceRenderers,e=>e.hasHighlights);r!==this._hasHighlights&&(this._hasHighlights=r,this.events.emit("has-highlights",r))}_updateRendersOccluded(){const r=Lt(this._drapeSourceRenderers,e=>e.rendersOccluded);r!==this._rendersOccluded&&(this._rendersOccluded=r,this.events.emit("renders-occluded",r))}_drawDebugTexture(r,e){this._ensureDebugPatternResources(r,r);const t=this._rctx,i=t.bindTechnique(this._debugTextureTechnique);i.setUniform4f("uColor",e[0],e[1],e[2],1),i.bindTexture("tex",this._debugPatternTexture),t.bindVAO(this._quadVAO),t.drawArrays(Ct.TRIANGLE_STRIP,0,Pi(this._quadVAO,"geometry"))}_ensureDebugPatternResources(r,e){if(this._debugPatternTexture)return;const t=new Uint8Array(r*e*4);let i=0;for(let a=0;a<e;a++)for(let o=0;o<r;o++){const n=Math.floor(o/10),c=Math.floor(a/10);n<2||c<2||10*n>r-20||10*c>e-20?(t[i++]=255,t[i++]=255,t[i++]=255,t[i++]=255):(t[i++]=255,t[i++]=255,t[i++]=255,t[i++]=1&n&&1&c?1&o^1&a?0:255:1&n^1&c?0:128)}this._debugPatternTexture=new ir(this._rctx,{target:or.TEXTURE_2D,pixelFormat:Gt.RGBA,dataType:hr.UNSIGNED_BYTE,samplingMode:ti.NEAREST,width:r,height:e},t);const s=new Vn;s.hasAlpha=!0,this._debugTextureTechnique=this._shaderTechniqueRepository.acquire(is,s),this._quadVAO=sn(this._rctx)}get test(){return{drapeSourceRenderers:this._drapeSourceRenderers,getDrapeSourceRenderer:r=>this._drapeSourceRenderers.get(r)}}};var Mt;v([ie()],dt.prototype,"_frameTask",void 0),v([ie()],dt.prototype,"_sortedDrapeSourceRenderersDirty",void 0),v([ro()],dt.prototype,"_shaderTechniqueRepository",void 0),v([ro()],dt.prototype,"_stippleTextureRepository",void 0),v([ie({constructOnly:!0})],dt.prototype,"view",void 0),v([ie()],dt.prototype,"worldToPCSRatio",void 0),v([ie()],dt.prototype,"spatialReference",void 0),v([ie({type:Boolean,readOnly:!0})],dt.prototype,"updating",null),dt=v([ra("esri.views.3d.terrain.OverlayRenderer")],dt),function(r){r[r.Normal=0]="Normal",r[r.OccludedOnly=1]="OccludedOnly",r[r.ExcludeRasterImage=2]="ExcludeRasterImage"}(Mt||(Mt={}));class lp{constructor(e,t,i){this.drapeSource=e,this.renderer=t,this.index=i}}const cp=[[1,.5,.5],[.5,.5,1]],sr=new mi;sr.near=1,sr.far=1e4,sr.relativeElevation=null;const dp=-2,Po=Ht.OccludeAndTransparent;function Cf(r){const e=[],t=[];hp(r,t,e);const i=t[0][1].data,s=e[0][1].length,a=new Uint16Array(s);return up(r,t,e),pp(r,t,e,a),mp(r,t,e,a),fp(r,t,e,a),gp(r,t,e,a),vp(r,t,e,a),_p(r,t,e,i),new Ve(t,e,Zr.Line)}function Rf(r,e,t,i){const s=r.type==="polygon"?Ui.CCW_IS_HOLE:Ui.NONE,a=r.type==="polygon"?r.rings:r.paths,{position:o,outlines:n}=nn(a,r.hasZ,s),c=new Float64Array(o.length),l=Cn(o,r.spatialReference,0,c,0,o,0,o.length/3,e,t,i),h=l!=null;return{lines:h?jn(n,o,c):[],projectionSuccess:h,sampledElevation:l}}function jn(r,e,t){const i=new Array;for(const{index:s,count:a}of r){if(a<=1)continue;const o=3*s,n=o+3*a;i.push({position:e.subarray(o,n),mapPosition:t?t.subarray(o,n):void 0})}return i}function Af(r,e){const t=r.type==="polygon"?Ui.CCW_IS_HOLE:Ui.NONE,i=r.type==="polygon"?r.rings:r.paths,{position:s,outlines:a}=nn(i,!1,t),o=Mi(s,r.spatialReference,0,s,e,0,s.length/3);for(let n=2;n<s.length;n+=3)s[n]=dp;return{lines:o?jn(a,s):[],projectionSuccess:o}}function hp(r,e,t){const{attributeData:{position:i},removeDuplicateStartEnd:s}=r,a=yp(i)&&s===Ks.REMOVE,o=i.length/3-(a?1:0),n=new Uint32Array(2*(o-1)),c=a?ql(i,0,i.length-3):i;let l=0;for(let h=0;h<o-1;h++)n[l++]=h,n[l++]=h+1;e.push([d.POSITION,{size:3,data:c,exclusive:a}]),t.push([d.POSITION,n])}function up(r,e,t){const i=r.attributeData.mapPosition;K(i)||(t.push([d.MAPPOS,t[0][1]]),e.push([d.MAPPOS,{size:3,data:i}]))}function pp(r,e,t,i){if(x(r.attributeData.colorFeature))return;const s=r.attributeData.color;e.push([d.COLOR,{size:4,data:ne(s,Hh)}]),t.push([d.COLOR,i])}function fp(r,e,t,i){const s=r.attributeData.colorFeature;K(s)||(e.push([d.COLORFEATUREATTRIBUTE,{size:1,data:new Float32Array([s])}]),t.push([d.COLOR,i]))}function mp(r,e,t,i){if(x(r.attributeData.sizeFeature))return;const s=r.attributeData.size;e.push([d.SIZE,{size:1,data:[ne(s,1)]}]),t.push([d.SIZE,i])}function gp(r,e,t,i){const s=r.attributeData.sizeFeature;K(s)||(e.push([d.SIZEFEATUREATTRIBUTE,{size:1,data:new Float32Array([s])}]),t.push([d.SIZEFEATUREATTRIBUTE,i]))}function vp(r,e,t,i){const s=r.attributeData.opacityFeature;K(s)||(e.push([d.OPACITYFEATUREATTRIBUTE,{size:1,data:new Float32Array([s])}]),t.push([d.OPACITYFEATUREATTRIBUTE,i]))}function _p(r,e,t,i){if(K(r.overlayInfo)||r.overlayInfo.renderCoordsHelper.viewingMode!==Bt.Global||!r.overlayInfo.spatialReference.isGeographic)return;const s=new Float64Array(i.length),a=kl(r.overlayInfo.spatialReference);for(let f=0;f<s.length;f+=3)Zl(i,f,s,f,a);const o=i.length/3,n=new Float32Array(o+1);let c=Sp,l=Tp,h=0,u=0;ae(c,s[u++],s[u++],s[u++]),n[0]=0;for(let f=1;f<o+1;++f)f===o&&(u=0),ae(l,s[u++],s[u++],s[u++]),h+=Xl(c,l),n[f]=h,[c,l]=[l,c];e.push([d.DISTANCETOSTART,{size:1,data:n}]),t.push([d.DISTANCETOSTART,t[0][1]])}function yp(r){const e=r.length;return r[0]===r[e-3]&&r[1]===r[e-2]&&r[2]===r[e-1]}var Ks;(function(r){r[r.KEEP=0]="KEEP",r[r.REMOVE=1]="REMOVE"})(Ks||(Ks={}));const Sp=j(),Tp=j();function bf(r){switch(r){case"butt":return _t.BUTT;case"square":return _t.SQUARE;case"round":return _t.ROUND;default:return null}}class xp{constructor(){this.visible=!0}}class Pf{constructor(e,t,i={}){this.data=e,this.material=t,this.boundingSphere=ot(),this.instanceParameters=new xp,this._transformation=le(),this._shaderTransformationDirty=!0,this.layerUid=ne(i.layerUid,null),this.graphicUid=ne(i.graphicUid,null),this.id=i.id?i.id:oi(),this.boundingInfo=ne(i.boundingInfo,null),this.calculateShaderTransformation=ne(i.calculateShaderTransformation,null),this.castShadow=!!i.castShadow&&i.castShadow}get transformation(){return this._transformation}updateTransformation(e){e(this._transformation),this._shaderTransformationDirty=!0,this.computeBoundingSphere(this._transformation,this.boundingSphere)}shaderTransformationChanged(){this._shaderTransformationDirty=!0}computeBoundingSphere(e,t,i=Ns(e)){K(this.boundingInfo)||(ue(t,this.boundingInfo.getCenter(),e),t[3]=this.boundingInfo.getBSRadius()*i)}get hasShaderTransformation(){return x(this.calculateShaderTransformation)}get primitiveType(){return this.data.primitiveType}getShaderTransformation(){return K(this.calculateShaderTransformation)?ne(this.transformation,cr):(this._shaderTransformationDirty&&(this._shaderTransformation||(this._shaderTransformation=le()),ft(this._shaderTransformation,this.calculateShaderTransformation(ne(this.transformation,cr))),this._shaderTransformationDirty=!1),this._shaderTransformation)}computeAttachmentOrigin(e){if(this.material.computeAttachmentOrigin)return!!this.material.computeAttachmentOrigin(this,e)&&(x(this._transformation)&&ue(e,e,this._transformation),!0);const t=this.indices.get(d.POSITION),i=this.vertexAttributes.get(d.POSITION);return!!Wc(i,t,e)&&(x(this._transformation)&&ue(e,e,this._transformation),!0)}get indices(){return this.data.indices}get vertexAttributes(){return this.data.vertexAttributes}addHighlight(){const e=new Bs(Us.Highlight),t=this.instanceParameters;return t.highlights=js(t.highlights,e),e}removeHighlight(e){const t=this.instanceParameters;t.highlights=Hs(t.highlights,e)}}const Vt=j();function Ef(r,e,t,i,s,a,o,n){const c=t?t.length:0,l=r.clippingExtent;if(Fs(e,Vt,r.elevationProvider.spatialReference),x(l)&&!Jl(l,Vt))return null;Fs(e,Vt,r.renderCoordsHelper.spatialReference);const h=r.localOriginFactory.getOrigin(Vt),u=new pn({castShadow:!1,metadata:{layerUid:a,graphicUid:o,usesVerticalDistanceToGround:!0}});for(let f=0;f<c;f++){const S=cr;u.addGeometry(t[f],i[f],S,h,n)}return{object:u,sampledElevation:Nd(u,e,r.elevationProvider,r.renderCoordsHelper,s)}}function Df(r,e,t){const i=r.elevationContext,s=t.spatialReference;Fs(e,Vt,s),i.centerPointInElevationSR=Nr(Vt[0],Vt[1],e.hasZ?Vt[2]:0,s)}function If(r){switch(r.type){case"point":return r;case"polygon":case"extent":return Id(r);case"polyline":{const e=r.paths[0];if(!e||e.length===0)return null;const t=Fo(e,No(e)/2);return Nr(t[0],t[1],t[2],r.spatialReference)}case"mesh":return r.origin}return null}function Mf(r,e,t,i,s){const a=new Float64Array(3*r.length),o=new Float64Array(a.length);r.forEach((l,h)=>{a[3*h+0]=l[0],a[3*h+1]=l[1],a[3*h+2]=l.length>2?l[2]:0});const n=Cn(a,e,0,o,0,a,0,a.length/3,t,i,s),c=n!=null;return{numVertices:r.length,position:a,mapPosition:o,projectionSuccess:c,sampledElevation:n}}function wp(r){const e=new pr;e.include(ca),e.include(en,r),e.include(mn,r),di(e,r);const{vertex:t,fragment:i}=e;return r.stippleEnabled&&(e.attributes.add(d.UV0,"vec2"),e.attributes.add(d.AUXPOS1,"vec3"),t.uniforms.add(new We("viewport",(s,a)=>a.camera.fullViewport))),e.attributes.add(d.POSITION,"vec3"),e.varyings.add("vpos","vec3"),t.code.add(p`void main(void) {
vpos = position;
forwardNormalizedVertexColor();
gl_Position = transformPosition(proj, view, vpos);`),r.stippleEnabled&&(t.code.add(p`vec4 vpos2 = transformPosition(proj, view, auxpos1);
vec2 ndcToPixel = viewport.zw * 0.5;
float lineSegmentPixelSize = length((vpos2.xy / vpos2.w - gl_Position.xy / gl_Position.w) * ndcToPixel);`),r.draped?t.uniforms.add(new pe("worldToScreenRatio",(s,a)=>1/a.screenToPCSRatio)):t.code.add(p`vec3 segmentCenter = (position + auxpos1) * 0.5;
float worldToScreenRatio = computeWorldToScreenRatio(segmentCenter);`),t.code.add(p`float discreteWorldToScreenRatio = discretizeWorldToScreenRatio(worldToScreenRatio);`),r.draped?t.code.add(p`float startPseudoScreen = uv0.y * discreteWorldToScreenRatio - mix(0.0, lineSegmentPixelSize, uv0.x);
float segmentLengthPseudoScreen = lineSegmentPixelSize;`):t.code.add(p`float segmentLengthRender = length(position - auxpos1);
float startPseudoScreen = mix(uv0.y, uv0.y - segmentLengthRender, uv0.x) * discreteWorldToScreenRatio;
float segmentLengthPseudoScreen = segmentLengthRender * discreteWorldToScreenRatio;`),t.code.add(p`vec2 stippleDistanceLimits = computeStippleDistanceLimits(startPseudoScreen, segmentLengthPseudoScreen, lineSegmentPixelSize, stipplePatternPixelSize);
vStippleDistance = mix(stippleDistanceLimits.x, stippleDistanceLimits.y, uv0.x);
vStippleDistance *= gl_Position.w;`)),t.code.add(p`}`),r.output===O.Highlight&&e.include(Qi),e.include(Nt,r),i.uniforms.add(new pe("alphaCoverage",(s,a)=>Math.min(1,s.width*a.camera.pixelRatio))),r.hasVertexColors||i.uniforms.add(new We("constantColor",s=>s.color)),i.code.add(p`
  void main() {
    discardBySlice(vpos);

    vec4 color = ${r.hasVertexColors?"vColor":"constantColor"};

    float stippleAlpha = getStippleAlpha();
    discardByStippleAlpha(stippleAlpha, stippleAlphaColorDiscard);

    vec4 finalColor = blendStipple(vec4(color.rgb, color.a * alphaCoverage), stippleAlpha);

    if (finalColor.a < ${p.float(rt)}) {
      discard;
    }

    ${r.output===O.Color?p`gl_FragColor = highlightSlice(finalColor, vpos);`:""}
    ${r.output===O.Highlight?p`outputHighlight();`:""}
  }
  `),e}const Op=Object.freeze(Object.defineProperty({__proto__:null,build:wp},Symbol.toStringTag,{value:"Module"}));class ss extends fr{constructor(e,t,i){super(e,t,i),this.stipplePattern=null,this.stippleTextureBind=null,this.stippleTextureRepository=e.stippleTextureRepository}get stippleEnabled(){return this.configuration.stippleEnabled&&this.configuration.output!==O.Highlight}initializeProgram(e){const t=ss.shader.get().build(this.configuration);return new mr(e.rctx,t,Fr)}destroy(){super.destroy(),this.stippleTextureRepository.release(this.stipplePattern),this.stipplePattern=null,this.stippleTextureBind=null}bindPass(e,t){if(this.program.bindPass(e,t),this.stipplePattern!==e.stipplePattern){const i=e.stipplePattern;this.stippleTextureBind=this.stippleTextureRepository.swap(this.stipplePattern,i),this.stipplePattern=i}if(this.stippleEnabled){const{pixelSize:i,sdfNormalizer:s,pixels:a}=x(this.stippleTextureBind)?this.stippleTextureBind(this.program):{pixelSize:1,sdfNormalizer:1,pixels:1};this.program.setUniform1f("stipplePatternSDFNormalizer",s),this.program.setUniform1f("stipplePatternTextureSize",a),this.program.setUniform1f("stipplePatternPixelSize",i),this.program.setUniform1f("stipplePatternPixelSizeInv",1/i)}}initializePipeline(){const e=this.configuration,t=Wo(gt.SRC_ALPHA,gt.ONE,gt.ONE_MINUS_SRC_ALPHA,gt.ONE_MINUS_SRC_ALPHA),i=(s,a=null,o=null)=>at({blending:a,depthTest:Jo,depthWrite:o,colorWrite:vt,stencilWrite:e.hasOccludees?Fi:null,stencilTest:e.hasOccludees?s?Ni:la:null});return e.output===O.Color?(this._occludeePipelineState=i(!0,e.transparent||this.stippleEnabled?t:null,Mr),i(!1,e.transparent||this.stippleEnabled?t:null,Mr)):i(!1)}get primitiveType(){return Ct.LINES}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}ss.shader=new gr(Op,()=>kt(()=>import("./NativeLine.glsl.a1ec89b0.js"),["assets/NativeLine.glsl.a1ec89b0.js","assets/Matrix4Uniform.b7dc351c.js","assets/index.9da382e4.js","assets/index.313b6d72.css","assets/enums.de935fa5.js","assets/Texture.599541db.js","assets/requestImageUtils.4ea1aefd.js","assets/geometryDataUtils.337d3a34.js","assets/triangle.70405bec.js","assets/vectorStacks.f85d4a03.js","assets/quatf64.ddec7ef6.js","assets/mat4f64.84d5c445.js","assets/lineSegment.901d4e43.js","assets/VertexAttribute.5551e0d8.js","assets/VertexArrayObject.4198c73f.js","assets/VertexElementDescriptor.d386088d.js","assets/BufferView.9de22bcf.js","assets/quat.2f83a288.js","assets/vec3f32.0772c8d8.js","assets/sphere.f1597b20.js","assets/plane.f3b639d8.js","assets/InterleavedLayout.e9290885.js","assets/types.28f12cac.js","assets/floatRGBA.b2358e75.js","assets/triangulationUtils.27ba054b.js","assets/earcut.d30cbec0.js","assets/deduplicate.c1f3fafb.js","assets/NestedMap.21c7ee53.js","assets/Octree.5f16cd20.js","assets/boundedPlane.2500e48f.js","assets/glUtil.345a77b1.js","assets/dehydratedFeatures.98692fb8.js"]));class Ke extends ci{constructor(){super(...arguments),this.output=O.Color,this.hasSlicePlane=!1,this.hasVertexColors=!1,this.transparent=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stipplePreferContinuous=!0,this.hasOccludees=!1}}v([C({count:O.COUNT})],Ke.prototype,"output",void 0),v([C()],Ke.prototype,"hasSlicePlane",void 0),v([C()],Ke.prototype,"hasVertexColors",void 0),v([C()],Ke.prototype,"transparent",void 0),v([C()],Ke.prototype,"draped",void 0),v([C()],Ke.prototype,"stippleEnabled",void 0),v([C()],Ke.prototype,"stippleOffColorEnabled",void 0),v([C()],Ke.prototype,"stipplePreferContinuous",void 0),v([C()],Ke.prototype,"hasOccludees",void 0),v([C({constValue:!1})],Ke.prototype,"stippleRequiresClamp",void 0),v([C({constValue:!1})],Ke.prototype,"stippleScaleWithLineWidth",void 0),v([C({constValue:!1})],Ke.prototype,"stippleRequiresStretchMeasure",void 0);const Cp=ni.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial");var Wi;(function(r){r[r.START=0]="START",r[r.END=1]="END"})(Wi||(Wi={}));class $f extends hi{constructor(e){super(e,new bp),this._techniqueConfig=new Ke}getConfiguration(e,t){this._techniqueConfig.output=e,this._techniqueConfig.hasSlicePlane=this.parameters.hasSlicePlane,this._techniqueConfig.hasVertexColors=this.parameters.hasVertexColors,this._techniqueConfig.transparent=this.parameters.color[3]<1||this.parameters.width<1,this._techniqueConfig.draped=t.slot===se.DRAPED_MATERIAL;const i=x(this.parameters.stipplePattern);return this._techniqueConfig.stippleEnabled=i,this._techniqueConfig.stippleOffColorEnabled=i&&x(this.parameters.stippleOffColor),this._techniqueConfig.hasOccludees=this.parameters.hasOccludees,this._techniqueConfig.stipplePreferContinuous=this.parameters.stipplePreferContinuous,this._techniqueConfig}intersect(e,t,i,s,a,o,n,c,l){x(l)?Hc(e,s,l,o,1,n):this._intersectLineGeometry(e,t,i,s,n)}_intersectLineGeometry(e,t,i,s,a){if(!s.options.selectionMode||Ji(t))return;if(!Lo(i))return void Cp.error("intersection assumes a translation-only matrix");const o=e.vertexAttributes.get(d.POSITION).data,n=s.camera,c=Ep;Lr(c,s.point);const l=2;ae(qr[0],c[0]-l,c[1]+l,0),ae(qr[1],c[0]+l,c[1]+l,0),ae(qr[2],c[0]+l,c[1]-l,0),ae(qr[3],c[0]-l,c[1]-l,0);for(let w=0;w<4;w++)if(!n.unprojectFromRenderScreen(qr[w],Tt[w]))return;Ft(n.eye,Tt[0],Tt[1],Is),Ft(n.eye,Tt[1],Tt[2],Ms),Ft(n.eye,Tt[2],Tt[3],$s),Ft(n.eye,Tt[3],Tt[0],Ls);let h=Number.MAX_VALUE,u=0;for(let w=0;w<o.length-5;w+=3){if(ze[0]=o[w]+i[12],ze[1]=o[w+1]+i[13],ze[2]=o[w+2]+i[14],Ue[0]=o[w+3]+i[12],Ue[1]=o[w+4]+i[13],Ue[2]=o[w+5]+i[14],Ce(Is,ze)<0&&Ce(Is,Ue)<0||Ce(Ms,ze)<0&&Ce(Ms,Ue)<0||Ce($s,ze)<0&&Ce($s,Ue)<0||Ce(Ls,ze)<0&&Ce(Ls,Ue)<0)continue;if(n.projectToRenderScreen(ze,er),n.projectToRenderScreen(Ue,tr),er[2]<0&&tr[2]>0){Te(ht,ze,Ue);const U=n.frustum,R=-Ce(U[zt.NEAR],ze)/At(ht,Li(U[zt.NEAR]));ce(ht,ht,R),_e(ze,ze,ht),n.projectToRenderScreen(ze,er)}else if(er[2]>0&&tr[2]<0){Te(ht,Ue,ze);const U=n.frustum,R=-Ce(U[zt.NEAR],Ue)/At(ht,Li(U[zt.NEAR]));ce(ht,ht,R),_e(Ue,Ue,ht),n.projectToRenderScreen(Ue,tr)}else if(er[2]<0&&tr[2]<0)continue;er[2]=0,tr[2]=0;const b=cn(Er(er,tr,Io),c);b<h&&(h=b,te(Eo,ze),te(Do,Ue),u=w/3)}const f=s.rayBegin,S=s.rayEnd;if(h<l*l){let w=Number.MAX_VALUE;if(dn(Er(Eo,Do,Io),Er(f,S,Pp),Kt)){Te(Kt,Kt,f);const b=wt(Kt);ce(Kt,Kt,1/b),w=b/Rt(f,S)}a(w,Kt,u,!1)}}computeAttachmentOrigin(e,t){const i=e.vertexAttributes;if(!i)return!1;const s=i.get(d.POSITION);return an(s,null,!1,t)}requiresSlot(e){return e===se.OPAQUE_MATERIAL||e===se.DRAPED_MATERIAL}createGLMaterial(e){return e.output===O.Color||e.output===O.Highlight?new Rp(e):null}createBufferWriter(){const e=this.parameters.hasVertexColors?Nn:Dh;return K(this.parameters.stipplePattern)?new ga(e):new Ap(e.clone().vec3f(d.AUXPOS1).vec2f(d.UV0))}}class Rp extends Yi{_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){return this._output===O.Color&&this._updateOccludeeState(e),this.ensureTechnique(ss,e)}}class Ap{constructor(e){this.vertexBufferLayout=e}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get(d.POSITION).length}write(e,t,i,s){Ko(t,this.vertexBufferLayout,e.transformation,e.invTranspTransformation,i,s),this._writeAuxpos1(e,t,i,s),this._writeUV0(e,t,i,s)}_writeAuxpos1(e,t,i,s){const a=i.getField(d.AUXPOS1,id),o=t.indices.get(d.POSITION),n=t.vertexAttributes.get(d.POSITION).data,c=e.transformation,l=a.typedBufferStride,h=a.typedBuffer;s*=l;for(let u=0;u<o.length-1;u+=2)for(const f of[1,0]){const S=3*o[u+f],w=n[S],b=n[S+1],U=n[S+2],R=c[0]*w+c[4]*b+c[8]*U+c[12],E=c[1]*w+c[5]*b+c[9]*U+c[13],y=c[2]*w+c[6]*b+c[10]*U+c[14];h[s]=R,h[s+1]=E,h[s+2]=y,s+=l}}_writeUV0(e,t,i,s){var _;const a=i.getField(d.UV0,sd),o=t.indices.get(d.POSITION),n=t.vertexAttributes.get(d.POSITION).data,c=(_=t.vertexAttributes.get(d.DISTANCETOSTART))==null?void 0:_.data,l=e.transformation,h=a.typedBufferStride,u=a.typedBuffer;let f=0;u[s*=h]=Wi.START,u[s+1]=f,s+=h;const S=3*o[0],w=ae(ze,n[S],n[S+1],n[S+2]);l&&ue(w,w,l);const b=Ue,U=o.length-1;let R=1;const E=c?(m,g,A)=>f=c[A]:(m,g,A)=>f+=Rt(m,g);for(let m=1;m<U;m+=2){const g=3*o[m];ae(b,n[g],n[g+1],n[g+2]),l&&ue(b,b,l),E(w,b,R++);for(let A=0;A<2;++A)u[s]=1-A,u[s+1]=f,s+=h;te(w,b)}const y=3*o[U];ae(b,n[y],n[y+1],n[y+2]),l&&ue(b,b,l),E(w,b,R),u[s]=Wi.END,u[s+1]=f}}class bp extends da{constructor(){super(...arguments),this.color=ki,this.hasVertexColors=!1,this.hasSlicePlane=!1,this.width=1,this.stipplePreferContinuous=!0,this.hasOccludees=!1}}const ze=j(),Ue=j(),ht=j(),Kt=j(),er=tt(),tr=tt(),Eo=j(),Do=j(),Io=Ki(),Pp=Ki(),Ep=j(),qr=[tt(),tt(),tt(),tt()],Tt=[j(),j(),j(),j()],Is=bt(),Ms=bt(),$s=bt(),Ls=bt();export{dp as $,cf as A,Xd as B,gf as C,sf as D,et as E,Ld as F,ks as G,yd as H,dh as I,_f as J,mi as K,ch as L,hh as M,st as N,pn as O,Ks as P,hf as Q,Rf as R,uf as S,ef as T,Ef as U,lf as V,$f as W,Df as X,Zd as Y,Dd as Z,Cn as _,Ei as a,of as a0,pf as a1,ma as a2,wf as a3,If as a4,dd as a5,_t as a6,bf as a7,Tf as a8,Bs as a9,cd as aa,Wt as ab,ur as ac,_u as ad,af as ae,nf as af,yo as ag,wn as ah,$u as ai,Mu as aj,Of as ak,tu as al,mf as am,ff as an,tf as ao,rf as ap,xf as aq,ji as ar,gd as as,Mh as at,wp as au,fh as av,Bi as aw,sp as ax,tp as ay,Du as az,vf as b,Pn as c,yf as d,Sf as e,Qr as f,Af as g,bn as h,Pf as i,Cf as j,ri as k,ld as l,df as m,ad as n,un as o,Mf as p,_i as q,Ut as r,pt as s,Sn as t,ga as u,Ih as v,Id as w,Bd as x,Rn as y,Ka as z};
