import{I as i,N as _,aM as f,hB as S,fK as v,h as y,e as n,aU as C,gm as D,hC as G,e2 as w,dB as x,aB as u,fT as H,ft as P,g9 as I,eh as B,J as l,K as E,aD as M,b9 as N}from"./index.4188ada5.js";import{o as O}from"./drapedUtils.35276338.js";let e=class extends _{constructor(t){super(t),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.events=new f.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}set graphic(t){this._circleCollisionCache=null,this._originalSymbol=t.symbol,this._set("graphic",t),this.attachSymbolChanged()}get elevationInfo(){const t="elevationInfo"in this.graphic.layer&&this.graphic.layer.elevationInfo,a=S(this.graphic),o=t?t.offset:0;return new v({mode:a,offset:o})}set focusedSymbol(t){t!==this._get("focusedSymbol")&&(this._set("focusedSymbol",t),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(t){t!==this._get("grabbing")&&(this._set("grabbing",t),this._updateGraphicSymbol())}set hovering(t){t!==this._get("hovering")&&(this._set("hovering",t),this._updateGraphicSymbol())}set selected(t){t!==this._get("selected")&&(this._set("selected",t),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:t?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(t){const a=this.graphic;if(a.visible===!1)return null;const o=a.geometry;if(y(o))return null;const s=this._get("focusedSymbol"),g=n(s)?s:a.symbol;return this.view.type==="2d"?this._intersectDistance2D(this.view,t,o,g):this._intersectDistance3D(this.view,t,a)}attach(){this.attachSymbolChanged(),n(this.layer)&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),n(this.layer)&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=C(()=>{var t;return(t=this.graphic)==null?void 0:t.symbol},t=>{n(t)&&t!==this.focusedSymbol&&t!==this._originalSymbol&&(this._originalSymbol=t,this._focused&&n(this.focusedSymbol)&&(this.graphic.symbol=this.focusedSymbol))},D)}detachSymbolChanged(){n(this._graphicSymbolChangedHandle)&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&n(this.focusedSymbol)?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(t,a,o,s){if(s=s||G(o),y(s))return null;const g=1;let r=this._circleCollisionCache;if(o.type!=="point"||s.type!=="simple-marker")return O(a,o,t)?g:null;if(y(r)||!r.originalPoint.equals(o)){const h=o,c=t.spatialReference;if(w(h.spatialReference,c)){const p=x(h,c);r={originalPoint:h.clone(),mapPoint:p,radiusPx:u(s.size)},this._circleCollisionCache=r}}if(n(r)){const h=H(a,R),c=t.toScreen(r.mapPoint),p=r.radiusPx,d=c.x+u(s.xoffset),m=c.y-u(s.yoffset);return P(h,[d,m])<p*p?g:null}return null}_intersectDistance3D(t,a,o){const s=t.toMap(a,{include:[o]});return s&&I(s,b,t.renderSpatialReference)?B(b,t.state.camera.eye):null}};i([l({constructOnly:!0,nonNullable:!0})],e.prototype,"graphic",null),i([l()],e.prototype,"elevationInfo",null),i([l({constructOnly:!0,nonNullable:!0})],e.prototype,"view",void 0),i([l({value:null})],e.prototype,"focusedSymbol",null),i([l({constructOnly:!0})],e.prototype,"layer",void 0),i([l()],e.prototype,"interactive",void 0),i([l()],e.prototype,"selectable",void 0),i([l()],e.prototype,"grabbable",void 0),i([l({value:!1})],e.prototype,"grabbing",null),i([l()],e.prototype,"dragging",void 0),i([l()],e.prototype,"hovering",null),i([l({value:!1})],e.prototype,"selected",null),i([l()],e.prototype,"cursor",void 0),e=i([E("esri.views.interactive.GraphicManipulator")],e);const b=M(),R=N();export{e as C};
